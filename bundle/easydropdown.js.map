{"version":3,"sources":["webpack://easydropdown/webpack/universalModuleDefinition","webpack://easydropdown/webpack/bootstrap","webpack://easydropdown/./node_modules/helpful-merge/dist/index.js","webpack://easydropdown/./src/Shared/Util/dispatchOpen.ts","webpack://easydropdown/./src/Shared/Util/composeClassName.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/Constants/ArrayStrategy.js","webpack://easydropdown/./src/Shared/Util/killSelectReaction.ts","webpack://easydropdown/./src/Easydropdown/cache.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/merge.js","webpack://easydropdown/./node_modules/helpful-merge/dist/Messages.js","webpack://easydropdown/./src/Config/Config.ts","webpack://easydropdown/./src/Shared/Util/closestParent.ts","webpack://easydropdown/./src/Events/Constants/Selectors.ts","webpack://easydropdown/./src/Shared/Util/Constants/CollisionType.ts","webpack://easydropdown/./src/Events/Constants/KeyCodes.ts","webpack://easydropdown/./src/Events/Handlers/handleWindowClick.ts","webpack://easydropdown/./src/Renderer/Constants/AttributeChangeType.ts","webpack://easydropdown/./src/Renderer/Constants/DomChangeType.ts","webpack://easydropdown/./src/State/Constants/BodyStatus.ts","webpack://easydropdown/./src/State/Constants/ScrollStatus.ts","webpack://easydropdown/./src/State/Group.ts","webpack://easydropdown/./src/State/Option.ts","webpack://easydropdown/./src/umd.ts","webpack://easydropdown/./node_modules/custom-event-polyfill/custom-event-polyfill.js","webpack://easydropdown/./src/Shared/Polyfills/Element.matches.ts","webpack://easydropdown/./src/Easydropdown/factory.ts","webpack://easydropdown/./src/Easydropdown/Easydropdown.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/Config.js","webpack://easydropdown/./node_modules/helpful-merge/dist/FluentMerge.js","webpack://easydropdown/./node_modules/helpful-merge/dist/handleMergeError.js","webpack://easydropdown/./src/Config/Behavior.ts","webpack://easydropdown/./src/Config/Callbacks.ts","webpack://easydropdown/./src/Config/ClassNames.ts","webpack://easydropdown/./src/Events/bindEvents.ts","webpack://easydropdown/./src/Shared/Util/throttle.ts","webpack://easydropdown/./src/Events/EventBinding.ts","webpack://easydropdown/./src/Events/getEventsList.ts","webpack://easydropdown/./src/Events/Handlers/handleBodyClick.ts","webpack://easydropdown/./src/Events/Handlers/handleBodyMouseover.ts","webpack://easydropdown/./src/Events/Handlers/handleHeadClick.ts","webpack://easydropdown/./src/Shared/Util/detectBodyCollision.ts","webpack://easydropdown/./src/Events/Handlers/handleItemsListScroll.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectBlur.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectFocus.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectInvalid.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydown.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydownDown.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydownUp.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeypress.ts","webpack://easydropdown/./src/Renderer/Renderer.ts","webpack://easydropdown/./src/Components/root.ts","webpack://easydropdown/./src/Components/body.ts","webpack://easydropdown/./src/Components/group.ts","webpack://easydropdown/./src/Components/option.ts","webpack://easydropdown/./src/Components/head.ts","webpack://easydropdown/./src/Components/arrow.ts","webpack://easydropdown/./src/Components/value.ts","webpack://easydropdown/./src/Shared/Util/createDomElementFromHtml.ts","webpack://easydropdown/./src/Renderer/Dom.ts","webpack://easydropdown/./src/Renderer/domDiff.ts","webpack://easydropdown/./src/Renderer/PatchCommand.ts","webpack://easydropdown/./src/Renderer/domPatch.ts","webpack://easydropdown/./src/Shared/Util/pollForSelectChange.ts","webpack://easydropdown/./src/Shared/Util/pollForSelectMutation.ts","webpack://easydropdown/./src/State/InjectedActions/closeOthers.ts","webpack://easydropdown/./src/State/InjectedActions/scrollToView.ts","webpack://easydropdown/./src/State/StateManager.ts","webpack://easydropdown/./src/State/resolveActions.ts","webpack://easydropdown/./src/State/StateMapper.ts","webpack://easydropdown/./src/Shared/Util/isMobilePlatform.ts","webpack://easydropdown/./src/State/State.ts","webpack://easydropdown/./src/Easydropdown/Timers.ts","webpack://easydropdown/./src/Easydropdown/EasydropdownFacade.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","merge_1","ArrayStrategy_1","ArrayStrategy","default","detectBodyCollision_1","dispatchOpen","injectedDetectBodyCollision","actions","config","dom","collisionData","maxVisibleItems","maxVisibleItemsOverride","behavior","isScrollable","item","length","maxBodyHeight","sumItemsHeight","open","type","boundDispatchOpen","tokens","reduce","classNames","token","push","predicate","className","join","select","_a","timers","clearTimeout","keyingTimeoutId","keying","setTimeout","resetKeying","disabled","focus","Config_1","FluentMerge_1","handleMergeError_1","Messages","merge","target","source","options","sourceKeys","deep","PUSH","REPLACE","indexOf","arrayStrategy","RangeError","INVALID_ARRAY_STRATEGY","TypeError","TYPE_ERROR_TARGET","TYPE_ERROR_SOURCE","Array","isArray","apply","toString","getOwnPropertyNames","_i","sourceKeys_1","descriptor","getOwnPropertyDescriptor","set","includeReadOnly","includeNonEmurable","useReferenceIfArray","useReferenceIfTargetUnset","err","errorMessage","keys","forEach","method","args","arguments","createFluent","MERGE_ERROR","offender","suggestion","strategy","Behavior_1","Callbacks_1","ClassNames_1","Config","this","callbacks","seal","el","selector","includeSelf","parent","parentNode","matches","document","body","OPTION","CollisionType","UP","DOWN","SPACE","ENTER","ESC","_","state","isOpen","close","blur","AttributeChangeType","DomChangeType","BodyStatus","ScrollStatus","Group","label","isDisabled","Option","factory_1","ce","CustomEvent","preventDefault","defaultPrevented","Error","e","event","params","evt","origPrevent","bubbles","cancelable","detail","undefined","createEvent","initCustomEvent","Event","Element","msMatchesSelector","cache_1","Easydropdown_1","EasydropdownFacade_1","selectElementOrSelector","selectElement","querySelector","HTMLSelectElement","multiple","cache_2","cachedInstance","instance","factoryFn","decoratedFactory","all","selects","querySelectorAll","destroy","slice","helpful_merge_1","bindEvents_1","Renderer_1","dispatchOpen_1","pollForSelectChange_1","pollForSelectMutation_1","closeOthers_1","scrollToView_1","StateManager_1","StateMapper_1","Timers_1","Easydropdown","mapFromSelect","renderer","render","proxyActions","closeOthers","scrollToView","handleStateUpdate","eventBindings","pollChangeIntervalId","liveUpdates","pollMutationIntervalId","refresh","nextValue","update","group","option","queryDomRefs","clear","binding","unbind","cacheIndex","splice","cb","onOpen","onClose","onSelect","FluentMerge","sources","to","from","with","exec","_this","getTotalMatching","possibleKey","offendingKey","longer","shorter","leftPointer","leftInnerPointer","leftTotalMatching","lastCommonIndex","rightPointer","rightInnerPointer","rightTotalMatching","longerLastIndex","shorterLastIndex","Math","min","message","isSealed","isExtensible","reducer","offendingKeyLower","currBestMatch","currKey","totalMatching","toLowerCase","delta","abs","primer","Infinity","bestMatch","Behavior","showPlaceholderWhenOpen","openOnFocus","closeOnSelect","useNativeUiOnMobile","loop","clampMaxVisibleItems","Callbacks","ClassNames","rootOpen","rootOpenAbove","rootOpenBelow","rootDisabled","rootInvalid","rootFocused","rootHasValue","rootNative","gradientTop","gradientBottom","head","arrow","bodyScrollable","bodyAtTop","bodyAtBottom","itemsList","groupDisabled","groupHasLabel","groupLabel","optionDisabled","optionFocused","optionSelected","throttle_1","EventBinding_1","getEventsList_1","bindEvent","handlerParams","eventBindingRaw","eventBinding","boundHandler","handler","throttle","addEventListener","map","delay","timerId","last","now","Date","later","difference","EventBinding","debounce","passive","removeEventListener","handleBodyClick_1","handleBodyMouseover_1","handleHeadClick_1","handleItemsListScroll_1","handleSelectBlur_1","handleSelectFocus_1","handleSelectInvalid_1","handleSelectKeydown_1","handleSelectKeypress_1","handleWindowClick_1","handleWindowClick_2","documentElement","closestParent_1","Selectors","stopPropagation","optionIndex","selectOption","isKeying","focusOption","isUseNativeMode","isClosed","CollisionType_1","CLEARSPACE","mapCollisionData","deltaTop","deltaBottom","maxHeight","itemHeight","NONE","largestDelta","max","TOP","BOTTOM","floor","bbHead","getBoundingClientRect","wh","innerHeight","top","bottom","_b","offsetHeight","scrollHeight","scrollTop","topOut","bottomOut","scroll","invalidate","killSelectReaction_1","KeyCodes","handleSelectKeydownDown_1","handleSelectKeydownUp_1","keyCode","isSearching","focusedIndex","metaKey","selectedIndex","iterations","incrementAmount","round","totalOptions","focusedOption","SEARCH_RESET_DURATION","searchResetDuration","includes","searchTimeoutId","search","resetSearch","root_1","createDomElementFromHtml_1","Dom_1","domDiff_1","domPatch_1","Renderer","html","rootElement","injectSelect","nextHtml","nextRoot","diffCommand","syncSelectWithValue","classList","remove","parentElement","replaceChild","tempSelect","setAttribute","dispatchEvent","localDom","ref","elements","element","composeClassName_1","body_1","head_1","isInvalid","isFocused","hasValue","isOpenAbove","isOpenBelow","isRequired","group_1","isAtTop","isAtBottom","styleAttr","groups","groupState","option_1","hasLabel","optionState","isSelected","selectedOption","arrow_1","value_1","isPlaceholderShown","humanReadableValue","temp","createElement","innerHTML","firstElementChild","Dom","totalHeight","AttributeChangeType_1","DomChangeType_1","PatchCommand_1","diffAttributeChanges","prev","next","totalAttributes","attributes","attributesMap","attributeChanges","attr1","attr2","sort","attr","change","ADD","REMOVE","EDIT","OUTER","domDiff","totalChildNodes","command","Text","textContent","INNER","newTextContent","HTMLElement","tagName","newNode","outerHTML","FULL","childNodes","childNode","childCommands","newInnerHtml","PatchCommand","index","patchAttributes","raf","requestAnimationFrame","patchAttribute","removeAttribute","domPatch","node","childCommand","POLL_INTERVAL_DURATION","lastValue","setInterval","getOptionIndexFromValue","handleMutation","lastOuterHtml","thisInstance","cache","getScrollTop","currentScrollTop","optionOffsetTop","optionHeight","bodyHeight","scrollOffset","remainder","scrollToMiddle","offset","offsetTop","resolveActions_1","StateManager","injectedActions","onAction","stateProxy","createStateProxy","getPropertyDescriptorsFromValue","proxy","getPrototypeOf","concat","localDescriptors","isAccessorProperty","readPropertyValue","updatePropertyValue","BodyStatus_1","ScrollStatus_1","validate","scrollStatus","AT_TOP","AT_BOTTOM","SCROLLED","makeScrollable","makeUnscrollable","collisionType","bodyStatus","OPEN_BELOW","OPEN_ABOVE","CLOSED","optionAtIndex","getOptionFromIndex","shouldScrollToView","useNative","isMobilePlatform_1","Group_1","Option_1","State_1","StateMapper","isWithinGroup","required","navigator","userAgent","child","children","getAttribute","HTMLOptionElement","mapGroup","lastGroup","mapOption","selected","HTMLOptGroupElement","j","groupChild","placeholder","isParentGroupDisabled","isIos","test","isAndroid","isOperaMini","isWindowsPhone","State","stateRaw","groupRaw","optionRaw","total","hasPlaceholder","Boolean","find","groupStartIndex","_c","Timers","clearInterval","EasydropdownFacade","implementation","defineProperties"],"mappings":"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","file":"easydropdown.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"easydropdown\"] = factory();\n\telse\n\t\troot[\"easydropdown\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge_1 = require(\"./merge\");\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nexports.ArrayStrategy = ArrayStrategy_1.default;\nexports.default = merge_1.default;\n//# sourceMappingURL=index.js.map","import Config   from '../../Config/Config';\nimport Dom      from '../../Renderer/Dom';\nimport IActions from '../../State/Interfaces/IActions';\n\nimport detectBodyCollision from './detectBodyCollision';\nimport IDispatchOpen       from './Interfaces/IDispatchOpen';\n\nfunction dispatchOpen(\n    injectedDetectBodyCollision,\n    actions: IActions,\n    config: Config,\n    dom: Dom\n): void {\n    const collisionData = injectedDetectBodyCollision(dom, config);\n\n    const maxVisibleItems = collisionData.maxVisibleItemsOverride > -1 ?\n        collisionData.maxVisibleItemsOverride : config.behavior.maxVisibleItems;\n\n    const isScrollable = dom.item.length > maxVisibleItems;\n    const maxBodyHeight =  dom.sumItemsHeight(maxVisibleItems);\n\n    actions.open(maxBodyHeight, collisionData.type, isScrollable);\n}\n\nconst boundDispatchOpen: IDispatchOpen = dispatchOpen.bind(null, detectBodyCollision);\n\nexport {\n    boundDispatchOpen as default,\n    dispatchOpen\n};","function composeClassName(tokens: Array<string|[boolean, string]>): string {\n    return tokens\n        .reduce((classNames, token) => {\n            if (typeof token === 'string') classNames.push(token);\n            else {\n                const [predicate, className] = token;\n\n                if (predicate) classNames.push(className);\n            }\n\n            return classNames;\n        }, [])\n        .join(' ');\n}\n\nexport default composeClassName;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayStrategy;\n(function (ArrayStrategy) {\n    ArrayStrategy[\"PUSH\"] = \"PUSH\";\n    ArrayStrategy[\"REPLACE\"] = \"REPLACE\";\n})(ArrayStrategy || (ArrayStrategy = {}));\nexports.default = ArrayStrategy;\n//# sourceMappingURL=ArrayStrategy.js.map","import IHandlerParams from '../../Events/Interfaces/IHandlerParams';\n\nconst killSelectReaction = (select: HTMLSelectElement, {actions, timers}: IHandlerParams): void => {\n    const keyingResetDuration = 100;\n\n    window.clearTimeout(timers.keyingTimeoutId);\n\n    actions.keying();\n\n    timers.keyingTimeoutId = window.setTimeout(() => actions.resetKeying(), keyingResetDuration);\n\n    select.disabled = true;\n\n    setTimeout(() => {\n        select.disabled = false;\n        select.focus();\n    });\n};\n\nexport default killSelectReaction;","import Easydropdown from './Easydropdown';\n\nconst cache: Easydropdown[] = [];\n\nexport default cache;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Config_1 = require(\"./Config\");\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nvar FluentMerge_1 = require(\"./FluentMerge\");\nvar handleMergeError_1 = require(\"./handleMergeError\");\nvar Messages = require(\"./Messages\");\nfunction merge(target, source, options) {\n    if (options === void 0) { options = null; }\n    var sourceKeys = [];\n    var config;\n    if (options instanceof Config_1.default) {\n        config = options;\n    }\n    else {\n        config = new Config_1.default();\n    }\n    if (typeof options === 'boolean' && options === true) {\n        config.deep = true;\n    }\n    else if (options && config !== options && typeof options === 'object') {\n        merge(config, options);\n        if ([ArrayStrategy_1.default.PUSH, ArrayStrategy_1.default.REPLACE].indexOf(config.arrayStrategy) < 0) {\n            throw RangeError(Messages.INVALID_ARRAY_STRATEGY(config.arrayStrategy));\n        }\n    }\n    if (!target || typeof target !== 'object') {\n        throw new TypeError(Messages.TYPE_ERROR_TARGET(target));\n    }\n    if (!source || typeof source !== 'object') {\n        throw new TypeError(Messages.TYPE_ERROR_SOURCE(source));\n    }\n    if (Array.isArray(source)) {\n        if (config.arrayStrategy === ArrayStrategy_1.default.PUSH) {\n            // Merge arrays via push()\n            target.push.apply(target, source);\n            return target;\n        }\n        for (var i = 0; i < source.length; i++) {\n            sourceKeys.push(i.toString());\n        }\n    }\n    else {\n        sourceKeys = Object.getOwnPropertyNames(source);\n    }\n    for (var _i = 0, sourceKeys_1 = sourceKeys; _i < sourceKeys_1.length; _i++) {\n        var key = sourceKeys_1[_i];\n        var descriptor = Object.getOwnPropertyDescriptor(source, key);\n        // Skip read-only properties\n        if (typeof descriptor.get === 'function' && !descriptor.set && !config.includeReadOnly)\n            continue;\n        // Skip non-enumerable properties\n        if (!descriptor.enumerable && !config.includeNonEmurable)\n            continue;\n        if (!config.deep ||\n            typeof source[key] !== 'object' ||\n            source[key] === null ||\n            (Array.isArray(source[key]) && config.useReferenceIfArray) ||\n            (!target[key] && config.useReferenceIfTargetUnset)) {\n            // If:\n            // - Shallow merge\n            // - All non-object primatives\n            // - Null pointers\n            // - Arrays, if `useReferenceIfArray` set\n            // - Target prop null or undefined and `useRererenceIfTargetUnset` set\n            try {\n                target[key] = source[key];\n            }\n            catch (err) {\n                handleMergeError_1.default(err, target, key, config.errorMessage);\n            }\n        }\n        else {\n            // Deep merge objects/arrays\n            if (!Object.prototype.hasOwnProperty.call(target, key) || target[key] === null) {\n                // If property does not exist on target, instantiate an empty\n                // object or array to merge into\n                try {\n                    target[key] = Array.isArray(source[key]) ? [] : {};\n                }\n                catch (err) {\n                    handleMergeError_1.default(err, target, key, config.errorMessage);\n                }\n            }\n            // Recursively deep copy objects or arrays\n            merge(target[key], source[key], config);\n        }\n    }\n    return target;\n}\nvar createFluent = function (method) { return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return (_a = new FluentMerge_1.default())[method].apply(_a, args);\n    var _a;\n}; };\nObject\n    .keys(FluentMerge_1.default.prototype)\n    .forEach(function (method) { return merge[method] = createFluent(method); });\nexports.default = merge;\n//# sourceMappingURL=merge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MERGE_ERROR = function (offender, suggestion) {\n    if (suggestion === void 0) { suggestion = ''; }\n    return \"Unknown property \\\"\" + offender + \"\\\"\" + (suggestion ? \". Did you mean \\\"\" + suggestion + \"\\\"?\" : '');\n};\nexports.TYPE_ERROR_TARGET = function (target) {\n    return \"[Helpful Merge] Target \\\"\" + target + \"\\\" must be a valid object\";\n};\nexports.TYPE_ERROR_SOURCE = function (source) {\n    return \"[Helpful Merge] Source \\\"\" + source + \"\\\" must be a valid object\";\n};\nexports.INVALID_ARRAY_STRATEGY = function (strategy) {\n    return \"[Helpful Merge] Invalid array strategy \\\"\" + strategy + \"\\\"\";\n};\n//# sourceMappingURL=Messages.js.map","import Behavior   from './Behavior';\nimport Callbacks  from './Callbacks';\nimport ClassNames from './ClassNames';\nimport IConfig    from './Interfaces/IConfig';\n\nclass Config implements IConfig {\n    public callbacks = new Callbacks();\n    public classNames = new ClassNames();\n    public behavior = new Behavior();\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default Config;","/**\n * Returns the closest parent of a given element matching the\n * provided selector, optionally including the element itself.\n */\n\nfunction closestParent(\n    el: HTMLElement,\n    selector: string,\n    includeSelf: boolean = false\n): HTMLElement {\n    let parent = el.parentNode as HTMLElement;\n\n    if (includeSelf && el.matches(selector)) {\n        return el;\n    }\n\n    while (parent && parent !== document.body) {\n        if (parent.matches && parent.matches(selector)) {\n            return parent;\n        } else if (parent.parentNode) {\n            parent = parent.parentNode as HTMLElement;\n        } else {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nexport default closestParent;","export const OPTION = '[data-ref~=\"option\"]';","enum CollisionType {\n    NONE   = 'NONE',\n    TOP    = 'TOP',\n    BOTTOM = 'BOTTOM'\n}\n\nexport default CollisionType;","export const UP    = 38;\nexport const DOWN  = 40;\nexport const SPACE = 32;\nexport const ENTER = 13;\nexport const ESC   = 27;","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleWindowClick(_, {state, actions, dom}: IHandlerParams): void {\n    if (!state.isOpen) return;\n\n    actions.close();\n\n    dom.select.blur();\n}\n\nexport default handleWindowClick;","enum AttributeChangeType {\n    ADD = 'ADD',\n    EDIT = 'EDIT',\n    REMOVE = 'REMOVE'\n}\n\nexport default AttributeChangeType;","export enum DomChangeType {\n    NONE    = 'NONE',\n    FULL    = 'FULL',\n    REPLACE = 'REPLACE',\n    INNER   = 'INNER',\n    OUTER   = 'OUTER'\n}\n\nexport default DomChangeType;","enum BodyStatus {\n    CLOSED     = 'CLOSED',\n    OPEN_ABOVE = 'OPEN_ABOVE',\n    OPEN_BELOW = 'OPEN_BELOW'\n}\n\nexport default BodyStatus;","enum ScrollStatus {\n    AT_TOP    = 'AT_TOP',\n    SCROLLED  = 'SCROLLED',\n    AT_BOTTOM = 'AT_BOTTOM'\n}\n\nexport default ScrollStatus;","import Option from './Option';\n\nclass Group {\n    public label:      string   = '';\n    public options:    Option[] = [];\n    public isDisabled: boolean  = false;\n\n    public get totalOptions(): number {\n        return this.options.length;\n    }\n\n    public get hasLabel(): boolean {\n        return this.label !== '';\n    }\n}\n\nexport default Group;","class Option {\n    public label:      string  = '';\n    public value:      string  = '';\n    public isDisabled: boolean = false;\n}\n\nexport default Option;","import 'custom-event-polyfill';\n\nimport './Shared/Polyfills/Element.matches';\n\nimport factory from './Easydropdown/factory';\n\nmodule.exports = factory;","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\ntry {\n    var ce = new window.CustomEvent('test');\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n        // IE has problems with .preventDefault() on custom events\n        // http://stackoverflow.com/questions/23349191\n        throw new Error('Could not prevent default');\n    }\n} catch(e) {\n  var CustomEvent = function(event, params) {\n    var evt, origPrevent;\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    };\n\n    evt = document.createEvent(\"CustomEvent\");\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    origPrevent = evt.preventDefault;\n    evt.preventDefault = function () {\n      origPrevent.call(this);\n      try {\n        Object.defineProperty(this, 'defaultPrevented', {\n          get: function () {\n            return true;\n          }\n        });\n      } catch(e) {\n        this.defaultPrevented = true;\n      }\n    };\n    return evt;\n  };\n\n  CustomEvent.prototype = window.Event.prototype;\n  window.CustomEvent = CustomEvent; // expose definition to window\n}\n","if (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}","import IConfig from '../Config/Interfaces/IConfig';\n\nimport cache              from './cache';\nimport Easydropdown       from './Easydropdown';\nimport EasydropdownFacade from './EasydropdownFacade';\nimport IFactory           from './Interfaces/IFactory';\n\nfunction factory(\n    selectElementOrSelector: (HTMLSelectElement|string),\n    options: IConfig = {}\n): EasydropdownFacade {\n    let selectElement = selectElementOrSelector;\n\n    if (typeof selectElementOrSelector === 'string') {\n        selectElement = document.querySelector(selectElementOrSelector) as HTMLSelectElement;\n    }\n\n    if (!(selectElement instanceof HTMLSelectElement)) {\n        throw new TypeError('[EasyDropDown] Invalid select element provided');\n    }\n\n    if (selectElement.multiple) {\n        throw new Error(\n            '[EasyDropDown] EasyDropDown does not support the `multiple`' +\n            ' attribute on select elements.'\n        );\n    }\n\n    for (const cachedInstance of cache) {\n        if (cachedInstance.selectElement === selectElement) {\n            return new EasydropdownFacade(cachedInstance);\n        }\n    }\n\n    const instance = new Easydropdown(selectElement, options);\n\n    // @ts-ignore\n\n    cache.push(instance);\n\n    return new EasydropdownFacade(instance);\n}\n\nfunction decorateFactory(factoryFn: any): IFactory {\n    factoryFn.all = (options: IConfig = {}) => {\n        const selects = document.querySelectorAll('select');\n\n        Array.prototype.forEach.call(selects, select => {\n            const instance = factory(select, options);\n\n            return instance;\n        });\n    };\n\n    factoryFn.destroy = () => {\n        const cacheCopy = cache.slice();\n\n        cacheCopy.forEach(instance => instance.destroy());\n    };\n\n    return factoryFn;\n}\n\nconst decoratedFactory = decorateFactory(factory);\n\nexport default decoratedFactory;","import merge from 'helpful-merge';\n\nimport Config                 from '../Config/Config';\nimport ICallback              from '../Config/Interfaces/ICallback';\nimport IConfig                from '../Config/Interfaces/IConfig';\nimport ISelectCallback        from '../Config/Interfaces/ISelectCallback';\nimport bindEvents             from '../Events/bindEvents';\nimport EventBinding           from '../Events/EventBinding';\nimport Dom                    from '../Renderer/Dom';\nimport Renderer               from '../Renderer/Renderer';\nimport dispatchOpen           from '../Shared/Util/dispatchOpen';\nimport pollForSelectChange    from '../Shared/Util/pollForSelectChange';\nimport pollForSelectMutation  from '../Shared/Util/pollForSelectMutation';\nimport closeOthers            from '../State/InjectedActions/closeOthers';\nimport scrollToView           from '../State/InjectedActions/scrollToView';\nimport IActions               from '../State/Interfaces/IActions';\nimport State                  from '../State/State';\nimport StateManager           from '../State/StateManager';\nimport StateMapper            from '../State/StateMapper';\n\nimport cache  from './cache';\nimport Timers from './Timers';\n\nclass Easydropdown {\n    public actions: IActions;\n\n    private config: Config;\n    private state: State;\n    private dom: Dom;\n    private eventBindings: EventBinding[];\n    private renderer: Renderer;\n    private timers: Timers;\n\n    constructor(selectElement: HTMLSelectElement, options: IConfig) {\n        this.config = merge(new Config(), options, true);\n        this.state = StateMapper.mapFromSelect(selectElement, this.config);\n        this.renderer = new Renderer(this.config.classNames);\n        this.dom = this.renderer.render(this.state, selectElement);\n        this.timers = new Timers();\n\n        this.actions = StateManager.proxyActions(this.state, {\n            closeOthers: closeOthers.bind(null, this, cache),\n            scrollToView: scrollToView.bind(null, this.dom, this.timers)\n        }, this.handleStateUpdate.bind(this));\n\n        this.eventBindings = bindEvents({\n            actions: this.actions,\n            config: this.config,\n            dom: this.dom,\n            state: this.state,\n            timers: this.timers\n        });\n\n        this.timers.pollChangeIntervalId = pollForSelectChange(this.dom.select, this.state, this.actions, this.config);\n\n        if (this.config.behavior.liveUpdates) {\n            this.timers.pollMutationIntervalId = pollForSelectMutation(\n                this.dom.select,\n                this.state,\n                this.refresh.bind(this)\n            );\n        }\n    }\n\n    public get selectElement(): HTMLSelectElement {\n        return this.dom.select;\n    }\n\n    public get value(): string {\n        return this.state.value;\n    }\n\n    public set value(nextValue: string) {\n        if (typeof nextValue !== 'string') {\n            throw new TypeError('[EasyDropDown] Provided value not a valid string');\n        }\n\n        this.dom.select.value = nextValue;\n    }\n\n    public open(): void {\n        dispatchOpen(this.actions, this.config, this.dom);\n    }\n\n    public close(): void {\n        this.actions.close();\n    }\n\n    public refresh(): void {\n        this.state = merge(\n            this.state,\n            StateMapper.mapFromSelect(this.dom.select, this.config)\n        );\n\n        this.renderer.update(this.state);\n\n        this.dom.group.length = this.dom.option.length = this.dom.item.length = 0;\n\n        Renderer.queryDomRefs(this.dom, ['group', 'option', 'item']);\n    }\n\n    public destroy(): void {\n        this.timers.clear();\n        this.eventBindings.forEach(binding => binding.unbind());\n        this.renderer.destroy();\n\n        const cacheIndex = cache.indexOf(this);\n\n        cache.splice(cacheIndex, 1);\n    }\n\n    private handleStateUpdate(state: State, key: keyof State): void {\n        const {callbacks} = this.config;\n\n        let cb: ICallback;\n\n        this.renderer.update(state, key);\n\n        switch (key) {\n            case 'bodyStatus':\n                if (state.isOpen) {\n                    cb = callbacks.onOpen;\n                } else {\n                    cb = callbacks.onClose;\n                }\n\n                if (typeof cb === 'function') cb();\n\n                break;\n            case 'selectedIndex':\n                cb = callbacks.onSelect;\n\n                if (typeof cb === 'function') (cb as ISelectCallback)(state.value);\n        }\n    }\n}\n\nexport default Easydropdown;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nvar Messages = require(\"./Messages\");\nvar Config = /** @class */ (function () {\n    function Config() {\n        this.deep = false;\n        this.useReferenceIfTargetUnset = false;\n        this.useReferenceIfArray = false;\n        this.includeReadOnly = false;\n        this.includeNonEmurable = false;\n        this.arrayStrategy = ArrayStrategy_1.default.REPLACE;\n        this.errorMessage = Messages.MERGE_ERROR;\n        Object.seal(this);\n    }\n    return Config;\n}());\nexports.default = Config;\n//# sourceMappingURL=Config.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge_1 = require(\"./merge\");\nvar FluentMerge = /** @class */ (function () {\n    function FluentMerge() {\n        this.target = null;\n        this.sources = [];\n        this.config = {};\n    }\n    /**\n     * Supplies a fluent merge instance with a target object to merge into and return.\n     */\n    FluentMerge.prototype.to = function (target) {\n        this.target = target;\n        return this;\n    };\n    /**\n     * Supplies a fluent merge instance with one or more source objects to merge from, in right to left order.\n     */\n    FluentMerge.prototype.from = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i] = arguments[_i];\n        }\n        this.sources = sources;\n        return this;\n    };\n    /**\n     * Supplies a fluent merge instance with a configuration object of one or more options.\n     */\n    FluentMerge.prototype.with = function (options) {\n        this.config = options;\n        return this;\n    };\n    /**\n     * Executes a fluent merge instance, merging all provided sources into the\n     * target, as per any provided configuration, and returning a reference to\n     * the target.\n     */\n    FluentMerge.prototype.exec = function () {\n        var _this = this;\n        return this.sources.reduce(function (target, source) { return merge_1.default(target, source, _this.config); }, this.target || {});\n    };\n    return FluentMerge;\n}());\nexports.default = FluentMerge;\n//# sourceMappingURL=FluentMerge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction handleMergeError(err, target, offendingKey, message) {\n    // Rethrow if any of the following:\n    // - offending key already exists on target\n    // - object not sealed\n    // - is extensible\n    // - error not a TypeError\n    if (Object.hasOwnProperty.call(target, offendingKey) ||\n        !Object.isSealed(target) ||\n        Object.isExtensible(target) ||\n        !(err instanceof TypeError))\n        throw err;\n    var reducer = reduceBestMatch.bind(null, offendingKey, offendingKey.toLowerCase());\n    var primer = { key: '', delta: Infinity, totalMatching: 0 };\n    // Iterate through keys in target, for each key, compare with\n    // the offending key. Greatest number of matching characters wins.\n    var bestMatch = Object.keys(target).reduce(reducer, primer);\n    var suggestion = bestMatch && bestMatch.totalMatching > 1 ? bestMatch.key : '';\n    throw new TypeError(message(offendingKey, suggestion));\n}\n/**\n * Compares current key with current best match.\n */\nfunction reduceBestMatch(offendingKeyLower, offendingKey, currBestMatch, currKey) {\n    var totalMatching = getTotalMatching(currKey.toLowerCase(), offendingKeyLower);\n    var delta = Math.abs(currKey.length - offendingKey.length);\n    if (totalMatching > currBestMatch.totalMatching ||\n        (totalMatching === currBestMatch.totalMatching && delta < currBestMatch.delta)) {\n        // If a greater number of matching characters, or the same\n        // number, but a lesser delta, usurp the best match\n        return { key: currKey, delta: delta, totalMatching: totalMatching };\n    }\n    return currBestMatch;\n}\n/**\n * Returns the number of common, consecutive characters\n * between two strings.\n */\nfunction getTotalMatching(possibleKey, offendingKey) {\n    var longer = possibleKey.length > offendingKey.length ? possibleKey : offendingKey;\n    var shorter = longer === possibleKey ? offendingKey : possibleKey;\n    var leftPointer = 0;\n    var leftInnerPointer = 0;\n    var leftTotalMatching = 0;\n    var lastCommonIndex = -1;\n    for (; leftPointer < longer.length; leftPointer++) {\n        while (leftTotalMatching === 0 &&\n            longer[leftPointer] !== shorter[leftInnerPointer] &&\n            leftInnerPointer < shorter.length) {\n            // No match at present, move innerPointer through all possible\n            // indices until a match is found\n            leftInnerPointer++;\n        }\n        if (longer[leftPointer] === shorter[leftInnerPointer]) {\n            // Match found\n            if (lastCommonIndex !== leftPointer - 1) {\n                // If beginning of a new match, reset total common\n                leftTotalMatching = 0;\n            }\n            lastCommonIndex = leftPointer;\n            leftTotalMatching++;\n            leftInnerPointer++;\n            // Whole word matched, end\n            if (leftTotalMatching === shorter.length)\n                break;\n        }\n        else if (leftTotalMatching > 1) {\n            // No match, but at least two common characters found, end\n            break;\n        }\n        else {\n            // No match at this index, reset\n            leftTotalMatching = leftInnerPointer = 0;\n        }\n    }\n    lastCommonIndex = -1;\n    var rightPointer = 0;\n    var rightInnerPointer = 0;\n    var rightTotalMatching = 0;\n    var longerLastIndex = longer.length - 1;\n    var shorterLastIndex = shorter.length - 1;\n    // As above, but from right to left\n    for (; rightPointer < longer.length - leftPointer; rightPointer++) {\n        while (rightTotalMatching === 0 &&\n            longer[longerLastIndex - rightPointer] !== shorter[shorterLastIndex - rightInnerPointer] &&\n            rightInnerPointer < shorter.length) {\n            rightInnerPointer++;\n        }\n        if (longer[longerLastIndex - rightPointer] === shorter[shorterLastIndex - rightInnerPointer]) {\n            if (lastCommonIndex !== rightPointer - 1)\n                rightTotalMatching = 0;\n            lastCommonIndex = rightPointer;\n            rightTotalMatching++;\n            rightInnerPointer++;\n        }\n        else if (rightTotalMatching > 1) {\n            break;\n        }\n        else {\n            rightTotalMatching = rightInnerPointer = 0;\n        }\n    }\n    return Math.min(shorter.length, leftTotalMatching + rightTotalMatching);\n}\nexports.getTotalMatching = getTotalMatching;\nexports.default = handleMergeError;\n//# sourceMappingURL=handleMergeError.js.map","import IBehavior from './Interfaces/IBehavior';\n\nclass Behavior implements IBehavior {\n    public showPlaceholderWhenOpen: boolean = false;\n    public openOnFocus:             boolean = false;\n    public closeOnSelect:           boolean = false;\n    public useNativeUiOnMobile:     boolean = true;\n    public loop:                    boolean = false;\n    public clampMaxVisibleItems:    boolean = true;\n    public liveUpdates:             boolean = false;\n    public maxVisibleItems:         number  = 15;\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default Behavior;","import ICallback from './Interfaces/ICallback';\n\nclass Callbacks {\n    public onOpen:   ICallback = null;\n    public onClose:  ICallback = null;\n    public onSelect: ICallback = null;\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default Callbacks;","import IClassNames from './Interfaces/IClassNames';\n\nclass ClassNames implements IClassNames {\n    public root:           string = 'edd-root';\n    public rootOpen:       string = 'edd-root-open';\n    public rootOpenAbove:  string = 'edd-root-open-above';\n    public rootOpenBelow:  string = 'edd-root-open-below';\n    public rootDisabled:   string = 'edd-root-disabled';\n    public rootInvalid:    string = 'edd-root-invalid';\n    public rootFocused:    string = 'edd-root-focused';\n    public rootHasValue:   string = 'edd-root-has-value';\n    public rootNative:     string = 'edd-root-native';\n    public gradientTop:    string = 'edd-gradient-top';\n    public gradientBottom: string = 'edd-gradient-bottom';\n    public head:           string = 'edd-head';\n    public value:          string = 'edd-value';\n    public arrow:          string = 'edd-arrow';\n    public select:         string = 'edd-select';\n    public body:           string = 'edd-body';\n    public bodyScrollable: string = 'edd-body-scrollable';\n    public bodyAtTop:      string = 'edd-body-at-top';\n    public bodyAtBottom:   string = 'edd-body-at-bottom';\n    public itemsList:      string = 'edd-items-list';\n    public group:          string = 'edd-group';\n    public groupDisabled:  string = 'edd-group-disabled';\n    public groupHasLabel:  string = 'edd-group-has-label';\n    public groupLabel:     string = 'edd-group-label';\n    public option:         string = 'edd-option';\n    public optionDisabled: string = 'edd-option-disabled';\n    public optionFocused:  string = 'edd-option-focused';\n    public optionSelected: string = 'edd-option-selected';\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default ClassNames;","import throttle from '../Shared/Util/throttle';\n\nimport EventBinding   from './EventBinding';\nimport getEventsList  from './getEventsList';\nimport IEventBinding  from './Interfaces/IEventBinding';\nimport IHandlerParams from './Interfaces/IHandlerParams';\n\nfunction bindEvent(handlerParams: IHandlerParams, eventBindingRaw: IEventBinding): EventBinding {\n    const eventBinding = new EventBinding(eventBindingRaw);\n\n    if (!eventBinding.target) return eventBinding;\n\n    const boundHandler = (e) => eventBinding.handler(e, handlerParams);\n\n    if (eventBinding.throttle > 0) {\n        eventBinding.boundHandler = throttle(boundHandler, eventBinding.throttle);\n    } else {\n        eventBinding.boundHandler = boundHandler;\n    }\n\n    eventBinding.target.addEventListener(eventBinding.type, eventBinding.boundHandler);\n\n    return eventBinding;\n}\n\nfunction bindEvents(handlerParams: IHandlerParams): EventBinding[] {\n    return getEventsList(handlerParams.dom).map(bindEvent.bind(null, handlerParams));\n}\n\nexport {\n    bindEvents as default,\n    bindEvent\n};","function throttle(\n    handler: (...args: any[]) => void,\n    delay: number\n): (...args: any[]) => void {\n    let timerId = null;\n    let last: number = -Infinity;\n\n    return function(...args): void {\n        const now = Date.now();\n\n        const later = () => {\n            timerId = null;\n\n            handler.apply(this, args);\n\n            last = now;\n        };\n\n        const difference = now - last;\n\n        if (difference >= delay) {\n            later();\n        } else {\n            clearTimeout(timerId);\n\n            timerId = setTimeout(later, delay - difference);\n        }\n    };\n}\n\nexport default throttle;","import merge from 'helpful-merge';\n\nimport IEventBinding from './Interfaces/IEventBinding';\nimport IEventHandler from './Interfaces/IEventHandler';\n\nclass EventBinding implements IEventBinding {\n    public type:         string        = '';\n    public target:       HTMLElement   = null;\n    public debounce:     number        = 0;\n    public throttle:     number        = 0;\n    public handler:      IEventHandler = null;\n    public boundHandler: EventListener = null;\n    public passive:      boolean       = false;\n\n    constructor(eventBindingRaw: IEventBinding|string) {\n        merge(this, eventBindingRaw);\n\n        Object.seal(this);\n    }\n\n    public unbind(): void {\n        if (!this.target) return;\n\n        this.target.removeEventListener(this.type, this.boundHandler);\n    }\n}\n\nexport default EventBinding;","import Dom from '../Renderer/Dom';\n\nimport handleBodyClick       from './Handlers/handleBodyClick';\nimport handleBodyMouseover   from './Handlers/handleBodyMouseover';\nimport handleHeadClick       from './Handlers/handleHeadClick';\nimport handleItemsListScroll from './Handlers/handleItemsListScroll';\nimport handleSelectBlur      from './Handlers/handleSelectBlur';\nimport handleSelectFocus     from './Handlers/handleSelectFocus';\nimport handleSelectInvalid   from './Handlers/handleSelectInvalid';\nimport handleSelectKeydown   from './Handlers/handleSelectKeydown';\nimport handleSelectKeypress  from './Handlers/handleSelectKeypress';\nimport handleWindowClick     from './Handlers/handleWindowClick';\nimport handleWindowResize    from './Handlers/handleWindowClick';\nimport IEventBinding         from './Interfaces/IEventBinding';\n\nconst getEventsList = (dom: Dom): IEventBinding[] => [\n    {\n        target: dom.head,\n        type: 'click',\n        handler: handleHeadClick\n    },\n    {\n        target: dom.body,\n        type: 'click',\n        handler: handleBodyClick\n    },\n    {\n        target: dom.body,\n        type: 'mouseover',\n        handler: handleBodyMouseover\n    },\n    {\n        target: dom.itemsList,\n        type: 'scroll',\n        handler: handleItemsListScroll\n    },\n    {\n        target: dom.select,\n        type: 'keydown',\n        handler: handleSelectKeydown\n    },\n    {\n        target: dom.select,\n        type: 'invalid',\n        handler: handleSelectInvalid\n    },\n    {\n        target: dom.select,\n        type: 'keypress',\n        handler: handleSelectKeypress\n    },\n    {\n        target: dom.select,\n        type: 'focus',\n        handler: handleSelectFocus\n    },\n    {\n        target: dom.select,\n        type: 'blur',\n        handler: handleSelectBlur\n    },\n    {\n        target: document.documentElement,\n        type: 'click',\n        handler: handleWindowClick\n    },\n    {\n        target: window,\n        type: 'resize',\n        handler: handleWindowResize,\n        throttle: 100\n    }\n];\n\nexport default getEventsList;","import closestParent  from '../../Shared/Util/closestParent';\nimport * as Selectors from '../Constants/Selectors';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleBodyClick(e: Event, {state, actions, dom, config}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const option = closestParent(e.target as HTMLElement, Selectors.OPTION, true);\n\n    if (!option) return;\n\n    const optionIndex = Array.prototype.indexOf.call(dom.option, option);\n\n    actions.selectOption(optionIndex, config.behavior.closeOnSelect);\n}\n\nexport default handleBodyClick;","import closestParent  from '../../Shared/Util/closestParent';\nimport * as Selectors from '../Constants/Selectors';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleBodyMouseover(e: Event, {state, actions, dom}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const option = closestParent(e.target as HTMLElement, Selectors.OPTION, true);\n\n    if (!option || state.isKeying) return;\n\n    const optionIndex = Array.prototype.indexOf.call(dom.option, option);\n\n    actions.focusOption(optionIndex);\n}\n\nexport default handleBodyMouseover;","import dispatchOpen   from '../../Shared/Util/dispatchOpen';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleHeadClick(e: MouseEvent, {state, actions, dom, config}: IHandlerParams): void {\n    if (state.isUseNativeMode) return;\n\n    e.stopPropagation();\n\n    if (state.isClosed) {\n        dispatchOpen(actions, config, dom);\n\n        dom.select.focus();\n    } else {\n        actions.close();\n    }\n}\n\nexport default handleHeadClick;","import Config from '../../Config/Config';\nimport Dom    from '../../Renderer/Dom';\n\nimport CollisionType  from './Constants/CollisionType';\nimport ICollisionData from './Interfaces/ICollisionData';\n\nconst CLEARSPACE = 10;\n\nfunction mapCollisionData(deltaTop, deltaBottom, maxHeight, itemHeight): ICollisionData {\n    let type = CollisionType.NONE;\n    let maxVisibleItemsOverride = -1;\n\n    if (deltaTop <= maxHeight && deltaBottom <= maxHeight) {\n        const largestDelta = Math.max(deltaBottom, deltaTop);\n\n        type = deltaTop < deltaBottom ? CollisionType.TOP : CollisionType.BOTTOM;\n        maxVisibleItemsOverride = Math.floor(largestDelta / itemHeight);\n    } else if (deltaTop <= maxHeight) {\n        type = CollisionType.TOP;\n    } else if (deltaBottom <= maxHeight) {\n        type = CollisionType.BOTTOM;\n    }\n\n    return {type, maxVisibleItemsOverride};\n}\n\nfunction detectBodyCollision(dom: Dom, config: Config): ICollisionData {\n    const bbHead = dom.head.getBoundingClientRect();\n    const wh = window.innerHeight;\n    const deltaTop = bbHead.top - CLEARSPACE;\n    const deltaBottom = wh - bbHead.bottom - CLEARSPACE;\n\n    if (dom.option.length < 1) return {\n        type: CollisionType.NONE,\n        maxVisibleItemsOverride: -1\n    };\n\n    const maxVisibleItems = Math.min(config.behavior.maxVisibleItems, dom.item.length);\n    const maxHeight = dom.sumItemsHeight(maxVisibleItems);\n    const itemHeight = dom.sumItemsHeight(1);\n\n    return mapCollisionData(deltaTop, deltaBottom, maxHeight, itemHeight);\n}\n\nexport {\n    detectBodyCollision as default,\n    mapCollisionData\n};","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleItemsListScroll(e: Event, {state, actions, dom}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const {offsetHeight, scrollHeight, scrollTop} = dom.itemsList;\n\n    if (scrollTop === 0) {\n        actions.topOut();\n    } else if (scrollTop === scrollHeight - offsetHeight) {\n        actions.bottomOut();\n    } else {\n        actions.scroll();\n    }\n}\n\nexport default handleItemsListScroll;","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleSelectBlur(e: Event, {actions, state, config}: IHandlerParams): void {\n    if (state.isKeying) return;\n\n    actions.blur();\n\n    if (config.behavior.openOnFocus) actions.close();\n}\n\nexport default handleSelectBlur;","import dispatchOpen   from '../../Shared/Util/dispatchOpen';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleSelectFocus(e: Event, {actions, config, dom, state}: IHandlerParams): void {\n    actions.focus();\n\n    if (config.behavior.openOnFocus && !state.isUseNativeMode) {\n        dispatchOpen(actions, config, dom);\n    }\n}\n\nexport default handleSelectFocus;","import IHandlerParams      from '../Interfaces/IHandlerParams';\n\nfunction handleSelectInvalid(e: Event, {actions, config, dom}: IHandlerParams): void {\n    actions.invalidate();\n}\n\nexport default handleSelectInvalid;","import dispatchOpen       from '../../Shared/Util/dispatchOpen';\nimport killSelectReaction from '../../Shared/Util/killSelectReaction';\nimport * as KeyCodes      from '../Constants/KeyCodes';\nimport IHandlerParams     from '../Interfaces/IHandlerParams';\n\nimport handleSelectKeydownDown from './handleSelectKeydownDown';\nimport handleSelectKeydownUp   from './handleSelectKeydownUp';\n\nfunction handleSelectKeydown(e: KeyboardEvent, handlerParams: IHandlerParams): void {\n    const {keyCode, target} = e;\n    const {state, actions, dom, config} = handlerParams;\n\n    if (state.isUseNativeMode || state.isDisabled) return;\n\n    switch (keyCode) {\n        case KeyCodes.DOWN:\n            handleSelectKeydownDown(e, handlerParams);\n\n            break;\n        case KeyCodes.UP:\n            handleSelectKeydownUp(e, handlerParams);\n\n            break;\n        case KeyCodes.SPACE:\n            if (state.isSearching) {\n                e.stopPropagation();\n\n                return;\n            }\n\n        case KeyCodes.ENTER:\n            e.stopPropagation();\n            e.preventDefault();\n\n            killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n            if (state.isOpen) {\n                actions.selectOption(state.focusedIndex, config.behavior.closeOnSelect);\n            } else {\n                dispatchOpen(actions, config, dom);\n            }\n\n            break;\n        case KeyCodes.ESC:\n            actions.close();\n\n            break;\n    }\n}\n\nexport default handleSelectKeydown;","import dispatchOpen       from '../../Shared/Util/dispatchOpen';\nimport killSelectReaction from '../../Shared/Util/killSelectReaction';\nimport IHandlerParams     from '../Interfaces/IHandlerParams';\n\nfunction handleSelectKeydownDown(\n    e: KeyboardEvent,\n    handlerParams: IHandlerParams\n): void {\n    const {metaKey, target} = e;\n    const {state, dom, actions, config} = handlerParams;\n\n    let focusedIndex: number = state.focusedIndex > -1 ?\n    state.focusedIndex : state.selectedIndex;\n\n    let iterations: number = 0;\n    let incrementAmount: number = 1;\n\n    e.preventDefault();\n\n    killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n    if (metaKey) {\n        incrementAmount = Math.round(\n            Math.max(state.totalOptions / 2, config.behavior.maxVisibleItems)\n        );\n    }\n\n    do {\n        focusedIndex += incrementAmount;\n\n        incrementAmount = 1;\n\n        if (focusedIndex >= state.totalOptions) {\n            focusedIndex = config.behavior.loop ? 0 : state.totalOptions - 1;\n        }\n\n        actions.focusOption(focusedIndex, true);\n\n        iterations++;\n    }\n    while (\n        state.focusedOption &&\n        state.focusedOption.isDisabled &&\n        iterations <= state.totalOptions\n    );\n\n    if (state.isClosed) {\n        dispatchOpen(actions, config, dom);\n\n        return;\n    }\n}\n\nexport default handleSelectKeydownDown;","import dispatchOpen       from '../../Shared/Util/dispatchOpen';\nimport killSelectReaction from '../../Shared/Util/killSelectReaction';\nimport IHandlerParams     from '../Interfaces/IHandlerParams';\n\nfunction handleSelectKeydownUp(\n    e: KeyboardEvent,\n    handlerParams: IHandlerParams\n): void {\n    const {metaKey, target} = e;\n    const {state, config, dom, actions} = handlerParams;\n\n    let focusedIndex = state.focusedIndex > -1 ?\n        state.focusedIndex : state.selectedIndex;\n\n    let iterations = 0;\n    let incrementAmount: number = 1;\n\n    e.preventDefault();\n\n    killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n    if (metaKey) {\n        incrementAmount = Math.round(\n            Math.max(state.totalOptions / 2, config.behavior.maxVisibleItems)\n        );\n    }\n\n    do {\n        focusedIndex -= incrementAmount;\n\n        incrementAmount = 1;\n\n        if (focusedIndex < 0) {\n            focusedIndex = config.behavior.loop ? state.totalOptions - 1 : 0;\n        }\n\n        actions.focusOption(focusedIndex, true);\n\n        iterations++;\n    }\n    while (\n        state.focusedOption &&\n        state.focusedOption.isDisabled &&\n        iterations < state.totalOptions\n    );\n\n    if (state.isClosed) {\n        dispatchOpen(actions, config, dom);\n    }\n}\n\nexport default handleSelectKeydownUp;","import * as KeyCodes  from '../Constants/KeyCodes';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nconst SEARCH_RESET_DURATION = 1200;\n\nfunction handleSelectKeypress(\n    {keyCode}: KeyboardEvent,\n    {actions, timers, state}: IHandlerParams,\n    searchResetDuration = SEARCH_RESET_DURATION\n): void {\n    if (state.isUseNativeMode || [KeyCodes.UP, KeyCodes.DOWN].includes(keyCode)) return;\n\n    window.clearTimeout(timers.searchTimeoutId);\n\n    actions.search();\n\n    timers.searchTimeoutId = window.setTimeout(() => actions.resetSearch(), searchResetDuration);\n}\n\nexport default handleSelectKeypress;","import root                     from '../Components/root';\nimport ClassNames               from '../Config/ClassNames';\nimport createDomElementFromHtml from '../Shared/Util/createDomElementFromHtml';\nimport State                    from '../State/State';\n\nimport Dom      from './Dom';\nimport domDiff  from './domDiff';\nimport domPatch from './domPatch';\n\nclass Renderer {\n    public classNames: ClassNames;\n    public dom: Dom;\n\n    constructor(classNames: ClassNames) {\n        this.dom = new Dom();\n        this.classNames = classNames;\n    }\n\n    public render(state: State, selectElement: HTMLSelectElement): Dom {\n        const html = root(state, this.classNames);\n        const rootElement = createDomElementFromHtml(html) as HTMLDivElement;\n\n        this.dom = new Dom();\n        this.dom.root = rootElement;\n\n        this.dom.option.length = this.dom.group.length = 0;\n\n        Renderer.queryDomRefs(this.dom);\n\n        this.injectSelect(selectElement);\n\n        return this.dom;\n    }\n\n    public update(state: State, key?: keyof State): void {\n        const nextHtml = root(state, this.classNames);\n        const nextRoot = createDomElementFromHtml(nextHtml) as HTMLDivElement;\n        const diffCommand = domDiff(this.dom.root, nextRoot);\n\n        domPatch(this.dom.root, diffCommand);\n\n        if (key === 'selectedIndex') {\n            this.syncSelectWithValue(state.value);\n        }\n    }\n\n    public destroy(): void {\n        this.dom.select.classList.remove(this.classNames.select);\n\n        try {\n            this.dom.root.parentElement.replaceChild(this.dom.select, this.dom.root);\n        } catch (err) { /**/ }\n    }\n\n    private injectSelect(selectElement: HTMLSelectElement): void {\n        const parent = selectElement.parentElement;\n        const tempSelect = this.dom.select;\n\n        if (!parent) throw new Error('[EasyDropDown] The provided `<select>` element must exist within a document');\n\n        parent.replaceChild(this.dom.root, selectElement);\n\n        tempSelect.parentElement.replaceChild(selectElement, tempSelect);\n        selectElement.className = this.classNames.select;\n        selectElement.setAttribute('aria-hidden', 'true');\n\n        this.dom.select = selectElement;\n    }\n\n    private syncSelectWithValue(value: string): void {\n        if (this.dom.select.value === value) return;\n\n        const event = new CustomEvent('change', {\n            bubbles: true\n        });\n\n        this.dom.select.value = value;\n\n        this.dom.select.dispatchEvent(event);\n    }\n\n    public static queryDomRefs(dom: Dom, keys: string[] = Object.keys(dom)): Dom {\n        return keys\n            .reduce((localDom: Dom, ref: string) => {\n                const selector = `[data-ref~=\"${ref}\"]`;\n                const elements = localDom.root.querySelectorAll(selector);\n\n                if (elements.length < 1 || ref === 'root') return localDom;\n\n                const element = elements[0];\n                const value = localDom[ref];\n\n                if (value === null) {\n                    localDom[ref] = element;\n                } else if (Array.isArray(value)) {\n                    Array.prototype.push.apply(value, elements);\n                }\n\n                return localDom;\n            }, dom);\n    }\n}\n\nexport default Renderer;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport State            from '../State/State';\n\nimport body from './body';\nimport head from './head';\n\nconst root = (state: State, classNames: ClassNames) => {\n    const className = composeClassName([\n        classNames.root,\n        [state.isDisabled, classNames.rootDisabled],\n        [state.isInvalid, classNames.rootInvalid],\n        [state.isOpen, classNames.rootOpen],\n        [state.isFocused, classNames.rootFocused],\n        [state.hasValue, classNames.rootHasValue],\n        [state.isOpenAbove, classNames.rootOpenAbove],\n        [state.isOpenBelow, classNames.rootOpenBelow],\n        [state.isUseNativeMode, classNames.rootNative]\n    ]);\n\n    return (`\n        <div\n            class=\"${className}\"\n            role=\"widget combobox\"\n            aria-haspopup=\"listbox\"\n            ${state.isOpen ? 'aria-expanded=\"true\"' : ''}\n            ${state.isRequired ? 'aria-required=\"true\"' : ''}\n            ${state.isDisabled ? 'aria-disabled=\"true\"' : ''}\n            ${state.isInvalid ? 'aria-invalid=\"true\"' : ''}\n        >\n            ${head(state, classNames)}\n            ${state.isUseNativeMode ? '' : body(state, classNames)}\n        </div>\n    `);\n};\n\nexport default root;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport State            from '../State/State';\n\nimport group from './group';\n\nfunction body(state: State, classNames: ClassNames): string {\n    const className = composeClassName([\n        classNames.body,\n        [state.isAtTop, classNames.bodyAtTop],\n        [state.isAtBottom, classNames.bodyAtBottom],\n        [state.isScrollable, classNames.bodyScrollable]\n    ]);\n\n    const styleAttr = state.isOpen ?\n        `style=\"max-height: ${state.maxBodyHeight}px;\"` : '';\n\n    return (`\n        <div\n            class=\"${className}\"\n            data-ref=\"body\"\n            role=\"listbox\"\n            ${state.isOpen ? '' : 'aria-hidden'}\n        >\n            <div class=\"${classNames.itemsList}\"\n                data-ref=\"itemsList\"\n                ${styleAttr}>\n                ${state.groups.map(groupState => group(groupState, state, classNames)).join('')}\n            </div>\n            <div class=${classNames.gradientTop} role=\"presentation\"></div>\n            <div class=${classNames.gradientBottom} role=\"presentation\"></div>\n        </div>\n    `);\n}\n\nexport default body;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport Group            from '../State/Group';\nimport State            from '../State/State';\n\nimport option from './option';\n\nconst group = (groupState: Group, state: State, classNames: ClassNames) => {\n    const className = composeClassName([\n        classNames.group,\n        [groupState.isDisabled, classNames.groupDisabled],\n        [groupState.hasLabel, classNames.groupHasLabel]\n    ]);\n\n    return (`\n        <div class=\"${className}\" data-ref=\"group\" role=\"group\">\n            ${groupState.hasLabel ?\n                `<div class=\"${classNames.groupLabel}\" data-ref=\"item\">${groupState.label}</div>` : ''\n            }\n            ${groupState.options.map(optionState => option(optionState, state, classNames)).join('')}\n        </div>\n    `);\n};\n\nexport default group;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport Option           from '../State/Option';\nimport State            from '../State/State';\n\nfunction option(optionState: Option, state: State, classNames: ClassNames): string {\n    const isSelected = state.selectedOption === optionState;\n\n    const className = composeClassName([\n        classNames.option,\n        [isSelected, classNames.optionSelected],\n        [optionState === state.focusedOption, classNames.optionFocused],\n        [optionState.isDisabled, classNames.optionDisabled]\n    ]);\n\n    return (`\n        <div\n            class=\"${className}\"\n            data-ref=\"option item\"\n            role=\"option\"\n            title=\"${optionState.label}\"\n            ${isSelected ? 'aria-selected=\"true\"' : ''}\n            ${optionState.isDisabled ? 'aria-disabled=\"true\"' : ''}\n            >\n                ${optionState.label}\n        </div>\n    `);\n}\n\nexport default option;","import ClassNames from '../Config/ClassNames';\nimport State      from '../State/State';\n\nimport arrow from './arrow';\nimport value from './value';\n\nconst head = (state: State, classNames: ClassNames) => (`\n    <div class=\"${classNames.head}\" data-ref=\"head\">\n        ${value(state, classNames)}\n        ${arrow(state, classNames)}\n        <select class=\"${classNames.select}\" data-ref=\"select\"></select>\n    </div>\n`);\n\nexport default head;","import ClassNames from '../Config/ClassNames';\n\nconst arrow = (_, classNames: ClassNames) => `<div class=\"${classNames.arrow}\" role=\"presentation\"></div>`;\n\nexport default arrow;","import ClassNames from '../Config/ClassNames';\nimport State      from '../State/State';\n\nconst value = (state: State, classNames: ClassNames) => {\n    return (`\n        <div\n            class=\"${classNames.value}\"\n            data-ref=\"value\"\n            ${state.isPlaceholderShown ? `aria-placeholder=\"${state.humanReadableValue}\"` : ''}\n        >\n            ${state.humanReadableValue}\n        </div>\n    `);\n};\n\nexport default value;","function createDomElementFromHtml(html: string): Element {\n    const temp = document.createElement('div');\n\n    temp.innerHTML = html;\n\n    return temp.firstElementChild;\n}\n\nexport default createDomElementFromHtml;","class Dom {\n    public select:    HTMLSelectElement = null;\n    public root:      HTMLDivElement    = null;\n    public head:      HTMLDivElement    = null;\n    public value:     HTMLDivElement    = null;\n    public body:      HTMLDivElement    = null;\n    public arrow:     HTMLDivElement    = null;\n    public itemsList: HTMLDivElement    = null;\n    public item:      HTMLDivElement[]  = [];\n    public group:     HTMLDivElement[]  = [];\n    public option:    HTMLDivElement[]  = [];\n\n    public sumItemsHeight(max: number = Infinity): number {\n        let totalHeight = 0;\n\n        for (let i = 0, item; (item = this.item[i]); i++) {\n            if (i === max) break;\n\n            totalHeight += item.offsetHeight;\n        }\n\n        return totalHeight;\n    }\n}\n\nexport default Dom;","import merge from 'helpful-merge';\n\nimport AttributeChangeType  from './Constants/AttributeChangeType';\nimport DomChangeType        from './Constants/DomChangeType';\nimport IAttributeChange     from './Interfaces/IAttributeChange';\nimport IPatchCommand        from './Interfaces/IPatchCommand';\nimport PatchCommand         from './PatchCommand';\n\nfunction domDiff(prev: Node, next: Node): PatchCommand {\n    let totalChildNodes = -1;\n\n    const command = new PatchCommand();\n\n    if (prev instanceof HTMLSelectElement) {\n        command.type = DomChangeType.NONE;\n\n        return command;\n    }\n\n    if (prev instanceof Text && next instanceof Text) {\n        if (prev.textContent === next.textContent) {\n            command.type = DomChangeType.NONE;\n        } else {\n            command.type = DomChangeType.INNER;\n            command.newTextContent = next.textContent;\n        }\n    } else if (prev instanceof HTMLElement && next instanceof HTMLElement) {\n        if (prev.tagName !== next.tagName) {\n            command.type = DomChangeType.REPLACE;\n            command.newNode = next;\n        } else if (prev.outerHTML === next.outerHTML) {\n            command.type = DomChangeType.NONE;\n        } else if (prev.innerHTML === next.innerHTML) {\n            merge(command, diffAttributeChanges(prev, next));\n        } else {\n            merge(command, diffAttributeChanges(prev, next));\n\n            if (command.attributeChanges.length > 0) {\n                command.type = DomChangeType.FULL;\n            } else {\n                command.type = DomChangeType.INNER;\n            }\n\n            if ((totalChildNodes = prev.childNodes.length) > 0 && totalChildNodes === next.childNodes.length) {\n                for (let i = 0, childNode; (childNode = prev.childNodes[i]); i++) {\n                    command.childCommands.push(domDiff(childNode, next.childNodes[i]));\n                }\n            } else {\n                command.newInnerHtml = next.innerHTML;\n            }\n        }\n    } else {\n        command.type = DomChangeType.REPLACE;\n        command.newNode = next;\n    }\n\n    return command;\n}\n\nfunction diffAttributeChanges(prev: HTMLElement, next: HTMLElement): IPatchCommand {\n    const totalAttributes = Math.max(prev.attributes.length, next.attributes.length);\n    const attributesMap   = {};\n    const undef           = void(0);\n    const attributeChanges: IAttributeChange[] = [];\n\n    for (let i = 0; i < totalAttributes; i++) {\n        const attr1 = prev.attributes[i];\n        const attr2 = next.attributes[i];\n\n        if (attr1 && attributesMap[attr1.name] === undef) {\n            attributesMap[attr1.name] = [];\n        }\n\n        if (attr2 && attributesMap[attr2.name] === undef) {\n            attributesMap[attr2.name] = [];\n        }\n\n        if (attr1) attributesMap[attr1.name][0] = attr1.value;\n        if (attr2) attributesMap[attr2.name][1] = attr2.value;\n    }\n\n    const keys = Object.keys(attributesMap);\n\n    if (keys.length > 1) {\n        keys.sort();\n    }\n\n    for (let i = 0, key; (key = keys[i]); i++) {\n        const attr = attributesMap[key];\n\n        const change: IAttributeChange = {\n            type: null,\n            name: key,\n            value: null\n        };\n\n        if (attr[0] === attr[1]) continue;\n\n        if (attr[0] === undef) {\n            change.type = AttributeChangeType.ADD;\n            change.value = attr[1];\n        } else if (attr[1] === undef) {\n            change.type = AttributeChangeType.REMOVE,\n            change.value = '';\n        } else {\n            change.type = AttributeChangeType.EDIT,\n            change.value = attr[1];\n        }\n\n        attributeChanges.push(change);\n    }\n\n    return {\n        type: DomChangeType.OUTER,\n        attributeChanges\n    };\n}\n\nexport default domDiff;","import DomChangeType    from './Constants/DomChangeType';\nimport IAttributeChange from './Interfaces/IAttributeChange';\n\nclass PatchCommand {\n    public type:             DomChangeType;\n    public newNode:          Node               = null;\n    public newInnerHtml:     string             = '';\n    public newTextContent:   string             = '';\n    public attributeChanges: IAttributeChange[] = [];\n    public childCommands:    PatchCommand[]      = [];\n    public index:            number             = null;\n}\n\nexport default PatchCommand;","import AttributeChangeType from './Constants/AttributeChangeType';\nimport DomChangeType       from './Constants/DomChangeType';\nimport IAttributeChange    from './Interfaces/IAttributeChange';\nimport PatchCommand        from './PatchCommand';\n\nfunction domPatch(node: Node, command: PatchCommand): Node {\n    switch (command.type) {\n        case DomChangeType.NONE:\n            return node;\n        case DomChangeType.REPLACE:\n            node.parentElement.replaceChild(command.newNode, node);\n\n            return command.newNode;\n        case DomChangeType.INNER:\n            if (node instanceof Text) {\n                node.textContent = command.newTextContent;\n            } else if (command.childCommands.length > 0) {\n                command.childCommands.forEach((childCommand, i) => domPatch(node.childNodes[i], childCommand));\n            } else {\n                (node as HTMLElement).innerHTML = command.newInnerHtml;\n            }\n\n            return node;\n        case DomChangeType.OUTER:\n            patchAttributes(node as HTMLElement, command.attributeChanges);\n\n            return node;\n        case DomChangeType.FULL:\n            if (command.childCommands.length > 0) {\n                command.childCommands.forEach((childCommand, i) => domPatch(node.childNodes[i], childCommand));\n            } else {\n                (node as HTMLElement).innerHTML = command.newInnerHtml;\n            }\n\n            patchAttributes(node as HTMLElement, command.attributeChanges);\n\n            return node;\n    }\n}\n\nfunction patchAttributes(el: HTMLElement, attributeChanges: IAttributeChange[]): void {\n    const raf = window.requestAnimationFrame;\n\n    attributeChanges.forEach(change => {\n        if (raf && ['class', 'style'].indexOf(change.name) > -1) {\n            raf(() => patchAttribute(el, change));\n        } else {\n            patchAttribute(el, change);\n        }\n    });\n}\n\nfunction patchAttribute(el: HTMLElement, change: IAttributeChange): void {\n    switch (change.type) {\n        case AttributeChangeType.ADD:\n        case AttributeChangeType.EDIT:\n            el.setAttribute(change.name, change.value);\n\n            break;\n        case AttributeChangeType.REMOVE:\n            el.removeAttribute(change.name);\n\n            break;\n    }\n}\n\nexport default domPatch;","import Config from '../../Config/Config';\nimport IActions from '../../State/Interfaces/IActions';\nimport State    from '../../State/State';\n\nconst POLL_INTERVAL_DURATION = 100;\n\nfunction pollForSelectChange(\n    selectElement: HTMLSelectElement,\n    state: State,\n    actions: IActions,\n    config: Config\n): number {\n    let lastValue: string = selectElement.value;\n\n    const pollIntervalId = window.setInterval(() => {\n        if (selectElement.value !== lastValue) {\n            const selectedIndex = state.getOptionIndexFromValue(selectElement.value);\n\n            actions.selectOption(selectedIndex, config.behavior.closeOnSelect);\n            actions.focusOption(selectedIndex, true);\n        }\n\n        lastValue = selectElement.value;\n    }, POLL_INTERVAL_DURATION);\n\n    return pollIntervalId;\n}\n\nexport default pollForSelectChange;","import State from '../../State/State';\n\nconst POLL_INTERVAL_DURATION = 300;\n\nfunction pollForSelectMutation(selectElement: HTMLSelectElement, state: State, handleMutation: () => void): number {\n    let lastOuterHtml: string = selectElement.outerHTML;\n\n    const pollIntervalId = window.setInterval(() => {\n        const {outerHTML} = selectElement;\n\n        if (outerHTML !== lastOuterHtml && !state.isKeying) {\n            handleMutation();\n        }\n\n        lastOuterHtml = outerHTML;\n    }, POLL_INTERVAL_DURATION);\n\n    return pollIntervalId;\n}\n\nexport default pollForSelectMutation;","import Easydropdown from '../../Easydropdown/Easydropdown';\n\nfunction closeOthers(thisInstance: Easydropdown, cache: Easydropdown[]): void {\n    for (const instance of cache) {\n        if (instance !== thisInstance) instance.actions.close();\n    }\n}\n\nexport default closeOthers;","import Timers from '../../Easydropdown/Timers';\nimport Dom    from '../../Renderer/Dom';\nimport State  from '../../State/State';\n\nfunction getScrollTop(\n    currentScrollTop: number,\n    optionOffsetTop: number,\n    optionHeight: number,\n    bodyHeight: number,\n    scrollOffset: number\n): number {\n    const max = currentScrollTop + bodyHeight;\n\n    let remainder: number;\n\n    if (optionOffsetTop < currentScrollTop) {\n        return optionOffsetTop - scrollOffset;\n    } else if ((remainder = (optionOffsetTop + optionHeight) - max) > 0) {\n        return currentScrollTop + remainder + scrollOffset;\n    }\n\n    return currentScrollTop;\n}\n\nfunction scrollToView(dom: Dom, timers: Timers, state: State, scrollToMiddle: boolean = false): void {\n    const index = Math.max(0, state.focusedIndex > -1 ? state.focusedIndex : state.selectedIndex);\n    const option = dom.option[index];\n\n    if (!option) return;\n\n    const offset = scrollToMiddle ? (state.maxBodyHeight / 2) - (option.offsetHeight / 2) : 0;\n\n    const scrollTop = getScrollTop(\n        dom.itemsList.scrollTop,\n        option.offsetTop,\n        option.offsetHeight,\n        state.maxBodyHeight,\n        offset\n    );\n\n    if (scrollTop === dom.itemsList.scrollTop) return;\n\n    dom.itemsList.scrollTop = scrollTop;\n}\n\nexport {\n    getScrollTop,\n    scrollToView as default\n};","import merge from 'helpful-merge';\n\nimport IActions            from './Interfaces/IActions';\nimport IOnAction           from './Interfaces/IOnAction';\nimport IPropertyDescriptor from './Interfaces/IPropertyDescriptor';\nimport resolveActions      from './resolveActions';\nimport State               from './State';\n\nclass StateManager {\n    public static proxyActions(state: State, injectedActions: any, onAction: IOnAction): IActions {\n        const stateProxy = StateManager.createStateProxy(state, onAction);\n        const actions = resolveActions(stateProxy);\n\n        merge(actions, injectedActions);\n\n        return actions;\n    }\n\n    private static createStateProxy(state: State, onAction: IOnAction): State {\n        return Object.seal(\n            StateManager\n                .getPropertyDescriptorsFromValue(state, onAction)\n                .reduce((proxy, {key, get, set}) => Object.defineProperty(\n                    proxy,\n                    key,\n                    {\n                        enumerable: true,\n                        get,\n                        set\n                    }\n                ), {})\n        );\n    }\n\n    private static getPropertyDescriptorsFromValue(state: State, onAction: IOnAction): IPropertyDescriptor[] {\n        const prototype = Object.getPrototypeOf(state);\n        const allKeys = Object.keys(state).concat(Object.keys(prototype));\n\n        return allKeys\n            .reduce((localDescriptors, key) => {\n                const propertyDescriptor =\n                    Object.getOwnPropertyDescriptor(state, key) ||\n                    Object.getOwnPropertyDescriptor(prototype, key);\n\n                const isAccessorProperty = typeof propertyDescriptor.get === 'function';\n\n                localDescriptors.push({\n                    get: StateManager.readPropertyValue.bind(null, state, key),\n                    set: isAccessorProperty ?\n                        void 0 : StateManager.updatePropertyValue.bind(null, state, key, onAction),\n                    key\n                });\n\n                return localDescriptors;\n            }, []);\n    }\n\n    private static readPropertyValue(state: State, key: string): any {\n        return state[key];\n    }\n\n    private static updatePropertyValue(state: State, key: string, onAction: IOnAction, value: any): void {\n        if (state[key] === value) return;\n\n        state[key] = value;\n\n        onAction(state, key);\n    }\n}\n\nexport default StateManager;","import CollisionType  from '../Shared/Util/Constants/CollisionType';\n\nimport BodyStatus   from './Constants/BodyStatus';\nimport ScrollStatus from './Constants/ScrollStatus';\nimport IActions     from './Interfaces/IActions';\nimport State        from './State';\n\nconst resolveActions = (state: State): IActions => ({\n    focus(): void {\n        state.isFocused = true;\n    },\n\n    blur(): void {\n        state.isFocused = false;\n    },\n\n    invalidate(): void {\n        state.isInvalid = true;\n    },\n\n    validate(): void {\n        state.isInvalid = false;\n    },\n\n    topOut(): void {\n        state.scrollStatus = ScrollStatus.AT_TOP;\n    },\n\n    bottomOut(): void {\n        state.scrollStatus = ScrollStatus.AT_BOTTOM;\n    },\n\n    scroll(): void {\n        state.scrollStatus = ScrollStatus.SCROLLED;\n    },\n\n    makeScrollable(): void {\n        state.isScrollable = true;\n    },\n\n    makeUnscrollable(): void {\n        state.isScrollable = false;\n    },\n\n    open(\n        this: IActions,\n        maxBodyHeight: number,\n        collisionType: CollisionType,\n        isScrollable: boolean\n    ): void {\n        if (state.isDisabled) return;\n\n        this.closeOthers();\n\n        switch (collisionType) {\n            case CollisionType.NONE:\n            case CollisionType.TOP:\n                state.bodyStatus = BodyStatus.OPEN_BELOW;\n\n                break;\n            case CollisionType.BOTTOM:\n                state.bodyStatus = BodyStatus.OPEN_ABOVE;\n\n                break;\n        }\n\n        state.isScrollable = isScrollable;\n        state.maxBodyHeight = maxBodyHeight;\n\n        this.scrollToView(state, true);\n    },\n\n    close(): void {\n        state.bodyStatus = BodyStatus.CLOSED;\n        state.focusedIndex = -1;\n    },\n\n    selectOption(this: IActions, index: number, close = true): void {\n        const optionAtIndex = state.getOptionFromIndex(index);\n\n        if (index > -1 && (!optionAtIndex || optionAtIndex.isDisabled)) return;\n\n        state.selectedIndex = index;\n\n        if (state.isInvalid) {\n            this.validate();\n        }\n\n        if (state.isSearching) {\n            this.scrollToView(state);\n        } else if (close) {\n            this.close();\n        }\n    },\n\n    focusOption(this: IActions, index: number, shouldScrollToView: boolean = false): void {\n        const scrollToMiddle = Math.abs(index - state.focusedIndex) > 1;\n\n        state.focusedIndex = index;\n\n        if (shouldScrollToView) {\n            this.scrollToView(state, scrollToMiddle);\n        }\n    },\n\n    search(): void {\n        state.isSearching = true;\n    },\n\n    resetSearch(): void {\n        state.isSearching = false;\n    },\n\n    keying(): void {\n        state.isKeying = true;\n    },\n\n    resetKeying(): void {\n        state.isKeying = false;\n    },\n\n    useNative(): void {\n        state.isUseNativeMode = true;\n    }\n});\n\nexport default resolveActions;","import merge from 'helpful-merge';\n\nimport Config           from '../Config/Config';\nimport isMobilePlatform from '../Shared/Util/isMobilePlatform';\n\nimport Group  from './Group';\nimport Option from './Option';\nimport State  from './State';\n\nclass StateMapper {\n    public static mapFromSelect(selectElement: HTMLSelectElement, config: Config): State {\n        const state = new State(null, config);\n\n        let isWithinGroup = false;\n\n        state.name = selectElement.name;\n        state.isDisabled = selectElement.disabled;\n        state.isRequired = selectElement.required;\n\n        state.isUseNativeMode = (\n            config.behavior.useNativeUiOnMobile &&\n            isMobilePlatform(window.navigator.userAgent)\n        );\n\n        for (let i = 0, child: Element; (child = selectElement.children[i]); i++) {\n            if (i === 0 && child.getAttribute('data-placeholder') !== null) {\n                state.placeholder = child.textContent;\n                (child as HTMLOptionElement).value = '';\n\n                continue;\n            }\n\n            if (child instanceof HTMLOptionElement) {\n                if (isWithinGroup === false) {\n                    state.groups.push(StateMapper.mapGroup());\n\n                    isWithinGroup = true;\n                }\n\n                state.lastGroup.options.push(StateMapper.mapOption(child));\n\n                if (child.selected) state.selectedIndex = state.totalOptions - 1;\n            } else if (child instanceof HTMLOptGroupElement) {\n                isWithinGroup = true;\n\n                state.groups.push(StateMapper.mapGroup(child));\n\n                for (let j = 0, groupChild: Element; (groupChild = child.children[j]); j++) {\n                    state.lastGroup.options.push(\n                        StateMapper.mapOption(\n                            groupChild as HTMLOptionElement,\n                            child as HTMLOptGroupElement\n                        )\n                    );\n\n                    if ((groupChild as HTMLOptionElement).selected) state.selectedIndex = state.totalOptions - 1;\n                }\n\n                isWithinGroup = false;\n            } else {\n                throw new TypeError(\n                    `[EasyDropDown] Invalid child tag \"${child.tagName}\" found in provided \\`<select>\\` element`\n                );\n            }\n        }\n\n        return Object.seal(state);\n    }\n\n    private static mapGroup(group: HTMLOptGroupElement = null): Group {\n        return merge(new Group(), {\n            label: group ? group.label : '',\n            isDisabled: group ? group.disabled : false\n        });\n    }\n\n    private static mapOption(option: HTMLOptionElement, group: HTMLOptGroupElement = null): Option {\n        if (!(option instanceof HTMLOptionElement)) throw new TypeError('[EasyDropDown] Invalid markup structure');\n\n        const isParentGroupDisabled = group !== null && group.disabled;\n\n        return merge(new Option(), {\n            label: option.textContent,\n            value: option.value,\n            isDisabled: option.disabled || isParentGroupDisabled\n        });\n    }\n}\n\nexport default StateMapper;","function isMobilePlatform(userAgent: string): boolean {\n    const isIos = /(ipad|iphone|ipod)/gi.test(userAgent);\n    const isAndroid = /android/gi.test(userAgent);\n    const isOperaMini = /opera mini/gi.test(userAgent);\n    const isWindowsPhone = /windows phone/gi.test(userAgent);\n\n    if (isIos || isAndroid || isOperaMini || isWindowsPhone) {\n        return true;\n    }\n\n    return false;\n}\n\nexport default isMobilePlatform;","import merge from 'helpful-merge';\n\nimport Config from '../Config/Config';\n\nimport BodyStatus   from './Constants/BodyStatus';\nimport ScrollStatus from './Constants/ScrollStatus';\nimport Group        from  './Group';\nimport Option       from './Option';\n\nclass State {\n    public groups:                  Group[]      = [];\n    public focusedIndex:            number       = -1;\n    public selectedIndex:           number       = -1;\n    public maxVisibleItemsOverride: number       = -1;\n    public maxBodyHeight:           number       = -1;\n    public name:                    string       = '';\n    public placeholder:             string       = '';\n    public scrollStatus:            ScrollStatus = ScrollStatus.AT_TOP;\n    public bodyStatus:              BodyStatus   = BodyStatus.CLOSED;\n    public isDisabled:              boolean      = false;\n    public isRequired:              boolean      = false;\n    public isInvalid:               boolean      = false;\n    public isFocused:               boolean      = false;\n    public isUseNativeMode:         boolean      = false;\n    public isScrollable:            boolean      = false;\n    public isSearching:             boolean      = false;\n    public isKeying:                boolean      = false;\n\n    private config: Config;\n\n    constructor(stateRaw: any = null, config = new Config()) {\n        this.config = config;\n\n        if (!stateRaw) return;\n\n        merge(this, stateRaw);\n\n        this.groups = this.groups.map((groupRaw) => {\n            const group = merge(new Group(), groupRaw);\n\n            group.options = group.options.map(optionRaw => merge(new Option(), optionRaw));\n\n            return group;\n        });\n    }\n\n    public get totalGroups(): number {\n        return this.groups.length;\n    }\n\n    public get lastGroup(): Group {\n        return this.groups[this.groups.length - 1];\n    }\n\n    public get totalOptions(): number {\n        return this.groups.reduce((total: number, group: Group) => total + group.totalOptions, 0);\n    }\n\n    public get selectedOption(): Option {\n        return this.getOptionFromIndex(this.selectedIndex);\n    }\n\n    public get focusedOption(): Option {\n        return this.getOptionFromIndex(this.focusedIndex);\n    }\n\n    public get value(): string {\n        return this.selectedOption ? this.selectedOption.value : '';\n    }\n\n    public get humanReadableValue(): string {\n        if (\n            (!this.hasValue && this.hasPlaceholder) ||\n            (\n                this.config.behavior.showPlaceholderWhenOpen &&\n                this.hasPlaceholder &&\n                this.isOpen\n            )\n        ) {\n            return this.placeholder;\n        }\n\n        return this.label;\n    }\n\n    public get label(): string {\n        return this.selectedOption ? this.selectedOption.label : '';\n    }\n\n    public get hasPlaceholder(): boolean {\n        return this.placeholder !== '';\n    }\n\n    public get isPlaceholderShown(): boolean {\n        return this.hasPlaceholder && !this.hasValue;\n    }\n\n    public get hasValue(): boolean {\n        return this.value !== '';\n    }\n\n    public get isGrouped(): boolean {\n        return Boolean(this.groups.find(group => group.hasLabel));\n    }\n\n    public get isOpen(): boolean {\n        return this.bodyStatus !== BodyStatus.CLOSED;\n    }\n\n    public get isClosed(): boolean {\n        return this.bodyStatus === BodyStatus.CLOSED;\n    }\n\n    public get isOpenAbove(): boolean {\n        return this.bodyStatus === BodyStatus.OPEN_ABOVE;\n    }\n\n    public get isOpenBelow(): boolean {\n        return this.bodyStatus === BodyStatus.OPEN_BELOW;\n    }\n\n    public get isAtTop(): boolean {\n        return this.scrollStatus === ScrollStatus.AT_TOP;\n    }\n\n    public get isAtBottom(): boolean {\n        return this.scrollStatus === ScrollStatus.AT_BOTTOM;\n    }\n\n    public getOptionFromIndex(index: number): Option {\n        let groupStartIndex = 0;\n\n        for (const group of this.groups) {\n            if (index < 0 ) break;\n\n            const groupEndIndex = Math.max(0, groupStartIndex + group.totalOptions - 1);\n\n            if (index <= groupEndIndex) {\n                const option = group.options[index - groupStartIndex];\n\n                return option;\n            }\n\n            groupStartIndex += group.totalOptions;\n        }\n\n        return null;\n    }\n\n    public getOptionIndexFromValue(value: string): number {\n        let index: number = -1;\n\n        for (const group of this.groups) {\n            for (const option of group.options) {\n                index++;\n\n                if (option.value === value) {\n                    return index;\n                }\n            }\n        }\n\n        return -1;\n    }\n}\n\nexport default State;","class Timers {\n    public pollChangeIntervalId: number;\n    public pollMutationIntervalId: number;\n    public searchTimeoutId: number;\n    public keyingTimeoutId: number;\n\n    public clear(): void {\n        Object.keys(this).forEach(key => window.clearInterval(this[key]));\n    }\n}\n\nexport default Timers;","import Easydropdown from './Easydropdown';\n\nclass EasydropdownFacade {\n    /**\n     * Programmatically opens the dropdown, closing any\n     * other open instances.\n     */\n\n    public open: () => void;\n\n    /**\n     * Programmatically closes the dropdown.\n     */\n\n    public close: () => void;\n\n    /**\n     * Refreshes the instance and updates the DOM in\n     * response to a change in the underlying `<select>`\n     * element (for example, adding or removing an option).\n     */\n\n    public refresh: () => void;\n\n    /**\n     * Destroys the instance by removing all EasyDropDown-generated\n     * elements from the DOM, and unbinding all event handlers.\n     * The underlying select is returned to the root position.\n     */\n\n    public destroy: () => void;\n\n    /**\n     * An accessor property allowing writing to and reading\n     * from the dropdown's value.\n     */\n\n    public value: string;\n\n    constructor(implementation: Easydropdown) {\n        this.open = implementation.open.bind(implementation);\n        this.close = implementation.close.bind(implementation);\n        this.refresh = implementation.refresh.bind(implementation);\n        this.destroy = implementation.destroy.bind(implementation);\n\n        Object.defineProperties(this, {\n            value: {\n                get: () => implementation.value,\n                set: (nextValue: string) => implementation.value = nextValue\n            }\n        });\n    }\n}\n\nexport default EasydropdownFacade;"],"sourceRoot":""}