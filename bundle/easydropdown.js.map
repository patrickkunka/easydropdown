{"version":3,"sources":["webpack://easydropdown/webpack/universalModuleDefinition","webpack://easydropdown/webpack/bootstrap","webpack://easydropdown/./node_modules/helpful-merge/dist/index.js","webpack://easydropdown/./src/Shared/Util/dispatchOpen.ts","webpack://easydropdown/./src/Shared/Util/composeClassName.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/Constants/ArrayStrategy.js","webpack://easydropdown/./src/Shared/Util/closestParent.ts","webpack://easydropdown/./src/Events/Constants/Selectors.ts","webpack://easydropdown/./src/Shared/Util/killSelectReaction.ts","webpack://easydropdown/./src/Easydropdown/cache.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/merge.js","webpack://easydropdown/./node_modules/helpful-merge/dist/Messages.js","webpack://easydropdown/./src/Config/Config.ts","webpack://easydropdown/./src/Shared/Util/Constants/CollisionType.ts","webpack://easydropdown/./src/Shared/Util/getIsMobilePlatform.ts","webpack://easydropdown/./src/Events/Constants/KeyCodes.ts","webpack://easydropdown/./src/Events/Handlers/handleWindowClick.ts","webpack://easydropdown/./src/Renderer/Constants/AttributeChangeType.ts","webpack://easydropdown/./src/Renderer/Constants/DomChangeType.ts","webpack://easydropdown/./src/State/Constants/BodyStatus.ts","webpack://easydropdown/./src/State/Constants/ScrollStatus.ts","webpack://easydropdown/./src/State/Group.ts","webpack://easydropdown/./src/State/Option.ts","webpack://easydropdown/./src/umd.ts","webpack://easydropdown/./node_modules/custom-event-polyfill/polyfill.js","webpack://easydropdown/./src/Shared/Polyfills/Element.matches.ts","webpack://easydropdown/./src/Easydropdown/factory.ts","webpack://easydropdown/./src/Easydropdown/Easydropdown.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/Config.js","webpack://easydropdown/./node_modules/helpful-merge/dist/deriveCustomTypeInstance.js","webpack://easydropdown/./node_modules/helpful-merge/dist/FluentMerge.js","webpack://easydropdown/./node_modules/helpful-merge/dist/handleMergeError.js","webpack://easydropdown/./src/Config/Behavior.ts","webpack://easydropdown/./src/Config/Callbacks.ts","webpack://easydropdown/./src/Config/ClassNames.ts","webpack://easydropdown/./src/Events/bindEvents.ts","webpack://easydropdown/./src/Shared/Util/throttle.ts","webpack://easydropdown/./src/Events/EventBinding.ts","webpack://easydropdown/./src/Events/getEventsList.ts","webpack://easydropdown/./src/Events/Handlers/handleBodyClick.ts","webpack://easydropdown/./src/Events/Handlers/handleBodyMousedown.ts","webpack://easydropdown/./src/Events/Handlers/handleBodyMouseover.ts","webpack://easydropdown/./src/Events/Handlers/handleHeadClick.ts","webpack://easydropdown/./src/Shared/Util/detectBodyCollision.ts","webpack://easydropdown/./src/Events/Handlers/handleItemsListScroll.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectBlur.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectFocus.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectInvalid.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydown.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydownDown.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydownUp.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeypress.ts","webpack://easydropdown/./src/Renderer/Renderer.ts","webpack://easydropdown/./src/Components/root.ts","webpack://easydropdown/./src/Components/body.ts","webpack://easydropdown/./src/Components/group.ts","webpack://easydropdown/./src/Components/option.ts","webpack://easydropdown/./src/Components/head.ts","webpack://easydropdown/./src/Components/arrow.ts","webpack://easydropdown/./src/Components/value.ts","webpack://easydropdown/./src/Shared/Util/createDomElementFromHtml.ts","webpack://easydropdown/./src/Renderer/Dom.ts","webpack://easydropdown/./src/Renderer/domDiff.ts","webpack://easydropdown/./src/Renderer/PatchCommand.ts","webpack://easydropdown/./src/Renderer/domPatch.ts","webpack://easydropdown/./src/Shared/Util/pollForSelectChange.ts","webpack://easydropdown/./src/Shared/Util/pollForSelectMutation.ts","webpack://easydropdown/./src/State/InjectedActions/closeOthers.ts","webpack://easydropdown/./src/State/InjectedActions/scrollToView.ts","webpack://easydropdown/./src/State/StateManager.ts","webpack://easydropdown/./src/State/resolveActions.ts","webpack://easydropdown/./src/State/StateMapper.ts","webpack://easydropdown/./src/State/State.ts","webpack://easydropdown/./src/Easydropdown/Timers.ts","webpack://easydropdown/./src/Easydropdown/EasydropdownFacade.ts"],"names":["root","factory","exports","module","define","amd","window","enumerable","get","getter","value","key","bind","Object","prototype","hasOwnProperty","call","object","property","defineProperty","merge_1","ArrayStrategy_1","ArrayStrategy","default","dispatchOpen","injectedDetectBodyCollision","actions","config","dom","collisionData","maxVisibleItems","maxVisibleItemsOverride","behavior","isScrollable","item","length","maxBodyHeight","sumItemsHeight","open","type","boundDispatchOpen","tokens","reduce","classNames","token","push","predicate","className","join","el","selector","includeSelf","parent","parentNode","matches","document","body","OPTION","select","timers","clearTimeout","keyingTimeoutId","keying","setTimeout","resetKeying","disabled","focus","Config_1","deriveCustomTypeInstance_1","FluentMerge_1","handleMergeError_1","Messages","merge","target","source","options","isClientSide","sourceKeys","deep","PUSH","REPLACE","indexOf","arrayStrategy","RangeError","INVALID_ARRAY_STRATEGY","TypeError","TYPE_ERROR_TARGET","TYPE_ERROR_SOURCE","Array","isArray","apply","i","toString","getOwnPropertyNames","_i","sourceKeys_1","descriptor","getOwnPropertyDescriptor","set","includeReadOnly","includeNonEmurable","Node","documentElement","useReferenceIfArray","useReferenceIfTargetUnset","err","errorMessage","preserveTypeIfTargetUnset","keys","forEach","method","_a","args","arguments","createFluent","MERGE_ERROR","offender","suggestion","strategy","callbacks","seal","this","Config","CollisionType","userAgent","isIos","test","isAndroid","isOperaMini","isWindowsPhone","UP","DOWN","SPACE","ENTER","ESC","_","state","isOpen","close","blur","AttributeChangeType","DomChangeType","BodyStatus","ScrollStatus","label","isDisabled","Group","Option","ce","CustomEvent","cancelable","preventDefault","defaultPrevented","Error","e","event","params","evt","origPrevent","bubbles","detail","undefined","createEvent","initCustomEvent","Event","Element","msMatchesSelector","selectElementOrSelector","selectElement","querySelector","HTMLSelectElement","multiple","cachedInstance","instance","factoryFn","decoratedFactory","all","selects","querySelectorAll","destroy","slice","mapFromSelect","renderer","render","proxyActions","closeOthers","scrollToView","handleStateUpdate","eventBindings","pollChangeIntervalId","liveUpdates","pollMutationIntervalId","refresh","nextValue","update","group","option","queryDomRefs","validate","isRequired","hasValue","invalidate","clear","binding","unbind","cacheIndex","splice","cb","onOpen","onClose","onSelect","onOptionClick","getOptionFromIndex","focusedIndex","Easydropdown","constructor","FluentMerge","sources","to","from","with","exec","_this","reduceBestMatch","offendingKeyLower","offendingKey","currBestMatch","currKey","totalMatching","getTotalMatching","toLowerCase","delta","Math","abs","possibleKey","longer","shorter","leftPointer","leftInnerPointer","leftTotalMatching","lastCommonIndex","rightPointer","rightInnerPointer","rightTotalMatching","longerLastIndex","shorterLastIndex","min","message","isSealed","isExtensible","reducer","primer","Infinity","bestMatch","showPlaceholderWhenOpen","openOnFocus","closeOnSelect","useNativeUiOnMobile","loop","clampMaxVisibleItems","Behavior","Callbacks","rootOpen","rootOpenAbove","rootOpenBelow","rootDisabled","rootInvalid","rootFocused","rootHasValue","rootNative","gradientTop","gradientBottom","head","arrow","bodyScrollable","bodyAtTop","bodyAtBottom","itemsList","groupDisabled","groupHasLabel","groupLabel","optionDisabled","optionFocused","optionSelected","ClassNames","bindEvent","handlerParams","eventBindingRaw","eventBinding","boundHandler","handler","throttle","addEventListener","map","delay","timerId","last","now","Date","later","difference","debounce","passive","removeEventListener","EventBinding","stopPropagation","Selectors","optionIndex","selectOption","startClickSelecting","isKeying","focusOption","handleHeadClick","injectedGetIsMobilePlatform","isUseNativeMode","isMobilePlatform","navigator","isClosed","boundHandleHeadClick","mapCollisionData","deltaTop","deltaBottom","maxHeight","itemHeight","NONE","largestDelta","max","TOP","BOTTOM","floor","bbHead","getBoundingClientRect","wh","innerHeight","top","bottom","offsetHeight","scrollHeight","scrollTop","topOut","bottomOut","scroll","isClickSelecting","keyCode","KeyCodes","isSearching","metaKey","selectedIndex","iterations","incrementAmount","round","totalOptions","focusedOption","searchResetDuration","includes","searchTimeoutId","search","resetSearch","html","rootElement","Renderer","injectSelect","nextHtml","nextRoot","diffCommand","syncSelectWithValue","classList","remove","parentElement","replaceChild","tempSelect","setAttribute","dispatchEvent","localDom","ref","elements","element","isInvalid","isFocused","isOpenAbove","isOpenBelow","isAtTop","isAtBottom","styleAttr","groups","groupState","hasLabel","optionState","isSelected","selectedOption","isPlaceholderShown","humanReadableValue","temp","createElement","innerHTML","firstElementChild","totalHeight","Dom","diffAttributeChanges","prev","next","totalAttributes","attributes","attributesMap","attributeChanges","attr1","attr2","name","sort","attr","change","ADD","REMOVE","EDIT","OUTER","domDiff","totalChildNodes","command","Text","textContent","INNER","newTextContent","HTMLElement","tagName","newNode","outerHTML","FULL","childNodes","childNode","childCommands","newInnerHtml","index","PatchCommand","patchAttributes","raf","requestAnimationFrame","patchAttribute","removeAttribute","domPatch","node","childCommand","lastValue","setInterval","getOptionIndexFromValue","handleMutation","lastOuterHtml","thisInstance","cache","getScrollTop","currentScrollTop","optionOffsetTop","optionHeight","bodyHeight","scrollOffset","remainder","scrollToMiddle","offset","offsetTop","injectedActions","onAction","stateProxy","StateManager","createStateProxy","getPropertyDescriptorsFromValue","proxy","getPrototypeOf","concat","localDescriptors","isAccessorProperty","readPropertyValue","updatePropertyValue","scrollStatus","AT_TOP","AT_BOTTOM","SCROLLED","makeScrollable","makeUnscrollable","collisionType","bodyStatus","OPEN_BELOW","OPEN_ABOVE","CLOSED","optionAtIndex","shouldScrollToView","useNative","isWithinGroup","required","child","children","getAttribute","HTMLOptionElement","StateMapper","mapGroup","lastGroup","mapOption","selected","HTMLOptGroupElement","j","groupChild","placeholder","isParentGroupDisabled","stateRaw","groupRaw","optionRaw","total","hasPlaceholder","Boolean","find","groupStartIndex","State","clearInterval","Timers","implementation","defineProperties","EasydropdownFacade"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAsB,aAAID,IAE1BD,EAAmB,aAAIC,IARzB,CASGK,QAAQ,WACX,O,YCTA,SAGA,cAGA,QACA,oBAGA,YACA,IACA,KACA,YAUA,OANA,mCAGA,OAGA,UA0DA,OArDA,MAGA,MAGA,oBACA,UACA,2BAA2CC,YAAY,EAAMC,IAAKC,KAKlE,gBACA,gDACA,4CAAyDC,MAAO,WAEhE,sCAAkDA,OAAO,KAQzD,kBAEA,GADA,cACA,aACA,qDACA,0BAGA,GAFA,OACA,mCAA0CH,YAAY,EAAMG,MAAOA,IACnE,2DAAiH,OAAOA,EAAMC,IAAQC,KAAK,KAAMD,IACjJ,UAIA,gBACA,sBACA,WAA4B,OAAOR,EAAgB,SACnD,WAAkC,OAAOA,GAEzC,OADA,aACA,GAIA,kBAAuD,OAAOU,OAAOC,UAAUC,eAAeC,KAAKC,EAAQC,IAG3G,OAIA,U,+BCjFAL,OAAOM,eAAejB,EAAS,aAAc,CAAEQ,OAAO,IACtD,IAAIU,EAAU,EAAQ,GAClBC,EAAkB,EAAQ,GAC9BnB,EAAQoB,cAAgBD,EAAgBE,QACxCrB,EAAQqB,QAAUH,EAAQG,S,8ECD1B,YAGA,SAASC,EACLC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAgBJ,EAA4BG,EAAKD,GAEjDG,EAAkBD,EAAcE,yBAA2B,EAC7DF,EAAcE,wBAA0BJ,EAAOK,SAASF,gBAEtDG,EAAeL,EAAIM,KAAKC,OAASL,EACjCM,EAAiBR,EAAIS,eAAeP,GAE1CJ,EAAQY,KAAKF,EAAeP,EAAcU,KAAMN,GAOhD,EAAAT,eAJJ,IAAMgB,EAAmChB,EAAaZ,KAAK,KAAM,WAGxC,EAAAW,QAAA,G,8ECZzB,UAfA,SAA0BkB,GACtB,OAAOA,EACFC,QAAO,SAACC,EAAYC,GACjB,GAAqB,iBAAVA,EAAoBD,EAAWE,KAAKD,OAC1C,CACM,IAAAE,EAAA,KAAWC,EAAA,KAEdD,GAAWH,EAAWE,KAAKE,GAGnC,OAAOJ,IACR,IACFK,KAAK,O,6BCVd,IAAI1B,EADJT,OAAOM,eAAejB,EAAS,aAAc,CAAEQ,OAAO,IAEtD,SAAWY,GACPA,EAAoB,KAAI,OACxBA,EAAuB,QAAI,UAF/B,CAGGA,IAAkBA,EAAgB,KACrCpB,EAAQqB,QAAUD,G,8ECsBlB,UAxBA,SACI2B,EACAC,EACAC,QAAA,IAAAA,OAAA,GAEA,IAAIC,EAASH,EAAGI,WAEhB,GAAIF,GAAeF,EAAGK,QAAQJ,GAC1B,OAAOD,EAGX,KAAOG,GAAUA,IAAWG,SAASC,MAAM,CACvC,GAAIJ,EAAOE,SAAWF,EAAOE,QAAQJ,GACjC,OAAOE,EACJ,IAAIA,EAAOC,WAGd,OAAO,KAFPD,EAASA,EAAOC,WAMxB,OAAO,O,8EC1BE,EAAAI,OAAS,wB,8ECmBtB,UAjB2B,SAACC,EAA2B,G,IAAChC,EAAA,EAAAA,QAASiC,EAAA,EAAAA,OAG7DrD,OAAOsD,aAAaD,EAAOE,iBAE3BnC,EAAQoC,SAERH,EAAOE,gBAAkBvD,OAAOyD,YAAW,WAAM,OAAArC,EAAQsC,gBAN7B,KAQ5BN,EAAOO,UAAW,EAElBF,YAAW,WACPL,EAAOO,UAAW,EAClBP,EAAOQ,a,8ECXf,UAF8B,I,6BCD9BrD,OAAOM,eAAejB,EAAS,aAAc,CAAEQ,OAAO,IACtD,IAAIyD,EAAW,EAAQ,IACnB9C,EAAkB,EAAQ,GAC1B+C,EAA6B,EAAQ,IACrCC,EAAgB,EAAQ,IACxBC,EAAqB,EAAQ,IAC7BC,EAAW,EAAQ,GACvB,SAASC,EAAMC,EAAQC,EAAQC,QACX,IAAZA,IAAsBA,EAAU,MACpC,IAEIhD,EAFAiD,EAAiC,oBAAXtE,OACtBuE,EAAa,GAQjB,GALIlD,EADAgD,aAAmBR,EAAS5C,QACnBoD,EAGA,IAAIR,EAAS5C,QAEH,kBAAZoD,IAAqC,IAAZA,EAChChD,EAAOmD,MAAO,OAEb,GAAIH,GAAWhD,IAAWgD,GAA8B,iBAAZA,IAC7CH,EAAM7C,EAAQgD,GACV,CAACtD,EAAgBE,QAAQwD,KAAM1D,EAAgBE,QAAQyD,SAASC,QAAQtD,EAAOuD,eAAiB,GAChG,MAAMC,WAAWZ,EAASa,uBAAuBzD,EAAOuD,gBAGhE,IAAKT,GAA4B,iBAAXA,EAClB,MAAM,IAAIY,UAAUd,EAASe,kBAAkBb,IAEnD,IAAKC,GAA4B,iBAAXA,EAClB,MAAM,IAAIW,UAAUd,EAASgB,kBAAkBb,IAEnD,GAAIc,MAAMC,QAAQf,GAAS,CACvB,GAAI/C,EAAOuD,gBAAkB7D,EAAgBE,QAAQwD,KAGjD,OADAN,EAAO5B,KAAK6C,MAAMjB,EAAQC,GACnBD,EAEX,IAAK,IAAIkB,EAAI,EAAGA,EAAIjB,EAAOvC,OAAQwD,IAC/Bd,EAAWhC,KAAK8C,EAAEC,iBAItBf,EAAahE,OAAOgF,oBAAoBnB,GAE5C,IAAK,IAAIoB,EAAK,EAAGC,EAAelB,EAAYiB,EAAKC,EAAa5D,OAAQ2D,IAAM,CACxE,IAAInF,EAAMoF,EAAaD,GACnBE,EAAanF,OAAOoF,yBAAyBvB,EAAQ/D,GAEzD,IAA8B,mBAAnBqF,EAAWxF,KAAuBwF,EAAWE,KAAQvE,EAAOwE,mBAGlEH,EAAWzF,YAAeoB,EAAOyE,oBAEtC,IAAKzE,EAAOmD,MACe,iBAAhBJ,EAAO/D,IACbiE,GAAgBF,EAAO/D,aAAgBL,OAAO+F,MAC9CzB,GAAgBF,EAAO/D,KAASL,OAAOiD,SAASC,MAChDoB,GAAgBF,EAAO/D,KAASL,OAAOiD,SAAS+C,iBACjC,OAAhB5B,EAAO/D,IACN6E,MAAMC,QAAQf,EAAO/D,KAASgB,EAAO4E,sBACpC9B,EAAO9D,IAAQgB,EAAO6E,0BAQxB,IACI/B,EAAO9D,GAAO+D,EAAO/D,GAEzB,MAAO8F,GACHnC,EAAmB/C,QAAQkF,EAAKhC,EAAQ9D,EAAKgB,EAAO+E,kBAGvD,CAED,IAAK7F,OAAOC,UAAUC,eAAeC,KAAKyD,EAAQ9D,IAAwB,OAAhB8D,EAAO9D,GAG7D,IACI8D,EAAO9D,GAAO6E,MAAMC,QAAQf,EAAO/D,IAC/B,GAAKgB,EAAOgF,0BACZvC,EAA2B7C,QAAQmD,EAAO/D,IAAQ,GAE1D,MAAO8F,GACHnC,EAAmB/C,QAAQkF,EAAKhC,EAAQ9D,EAAKgB,EAAO+E,cAI5DlC,EAAMC,EAAO9D,GAAM+D,EAAO/D,GAAMgB,IAGxC,OAAO8C,EAUX5D,OACK+F,KAAKvC,EAAc9C,QAAQT,WAC3B+F,SAAQ,SAAUC,GAAU,OAAOtC,EAAMsC,GAV3B,SAAUA,GAAU,OAAO,WAE1C,IADA,IAKIC,EALAC,EAAO,GACFlB,EAAK,EAAGA,EAAKmB,UAAU9E,OAAQ2D,IACpCkB,EAAKlB,GAAMmB,UAAUnB,GAEzB,OAAQiB,EAAK,IAAI1C,EAAc9C,SAAWuF,GAAQpB,MAAMqB,EAAIC,IAKRE,CAAaJ,MACrE5G,EAAQqB,QAAUiD,G,6BC5GlB3D,OAAOM,eAAejB,EAAS,aAAc,CAAEQ,OAAO,IACtDR,EAAQiH,YAAc,SAAUC,EAAUC,GAEtC,YADmB,IAAfA,IAAyBA,EAAa,IACnC,qBAAwBD,EAAW,KAAQC,EAAa,mBAAsBA,EAAa,KAAQ,KAE9GnH,EAAQoF,kBAAoB,SAAUb,GAClC,MAAO,2BAA8BA,EAAS,4BAElDvE,EAAQqF,kBAAoB,SAAUb,GAClC,MAAO,2BAA8BA,EAAS,4BAElDxE,EAAQkF,uBAAyB,SAAUkC,GACvC,MAAO,2CAA8CA,EAAW,M,8ECbpE,YACA,QACA,QAGA,EAKI,WAJO,KAAAC,UAAY,IAAI,UAChB,KAAA5E,WAAa,IAAI,UACjB,KAAAX,SAAW,IAAI,UAGlBnB,OAAO2G,KAAKC,OAIpB,UAAeC,G,6BCff,IAAKC,E,iDAAL,SAAKA,GACD,cACA,YACA,kBAHJ,CAAKA,MAAa,KAMlB,UAAeA,G,8ECOf,UAbA,SAA6BC,GACzB,IAAMC,EAAQ,uBAAuBC,KAAKF,GACpCG,EAAY,YAAYD,KAAKF,GAC7BI,EAAc,eAAeF,KAAKF,GAClCK,EAAiB,kBAAkBH,KAAKF,GAE9C,SAAIC,GAASE,GAAaC,GAAeC,K,8ECNhC,EAAAC,GAAQ,GACR,EAAAC,KAAQ,GACR,EAAAC,MAAQ,GACR,EAAAC,MAAQ,GACR,EAAAC,IAAQ,I,8ECMrB,UARA,SAA2BC,EAAG,G,IAACC,EAAA,EAAAA,MAAO9G,EAAA,EAAAA,QAASE,EAAA,EAAAA,IACtC4G,EAAMC,SAEX/G,EAAQgH,QAER9G,EAAI8B,OAAOiF,U,6BCPf,IAAKC,E,iDAAL,SAAKA,GACD,YACA,cACA,kBAHJ,CAAKA,MAAmB,KAMxB,UAAeA,G,6BCNf,IAAYC,E,iDAAZ,SAAYA,GACR,cACA,cACA,oBACA,gBACA,gBALJ,CAAYA,EAAA,EAAAA,gBAAA,EAAAA,cAAa,KAQzB,UAAeA,G,6BCRf,IAAKC,E,iDAAL,SAAKA,GACD,kBACA,0BACA,0BAHJ,CAAKA,MAAU,KAMf,UAAeA,G,6BCNf,IAAKC,E,iDAAL,SAAKA,GACD,kBACA,sBACA,wBAHJ,CAAKA,MAAY,KAMjB,UAAeA,G,8ECJf,8BACW,KAAAC,MAAuB,GACvB,KAAArE,QAAuB,GACvB,KAAAsE,YAAuB,EASlC,OAPI,sBAAW,2BAAY,C,IAAvB,WACI,OAAOxB,KAAK9C,QAAQxC,Q,gCAGxB,sBAAW,uBAAQ,C,IAAnB,WACI,MAAsB,KAAfsF,KAAKuB,O,gCAEpB,EAZA,GAcA,UAAeE,G,8EChBf,iBACW,KAAAF,MAAsB,GACtB,KAAAtI,MAAsB,GACtB,KAAAuI,YAAsB,GAGjC,UAAeE,G,8ECNf,MAEA,MAEA,YAEAhJ,EAAOD,QAAU,W,eCAjB,WACE,GAAsB,oBAAXI,OAIX,IACE,IAAI8I,EAAK,IAAI9I,OAAO+I,YAAY,OAAQ,CAAEC,YAAY,IAEtD,GADAF,EAAGG,kBACyB,IAAxBH,EAAGI,iBAGL,MAAM,IAAIC,MAAM,6BAElB,MAAOC,GACP,IAAIL,EAAc,SAASM,EAAOC,GAChC,IAAIC,EAAKC,EA2BT,OA1BAF,EAASA,GAAU,CACjBG,SAAS,EACTT,YAAY,EACZU,YAAQC,IAGVJ,EAAMtG,SAAS2G,YAAY,gBACvBC,gBACFR,EACAC,EAAOG,QACPH,EAAON,WACPM,EAAOI,QAETF,EAAcD,EAAIN,eAClBM,EAAIN,eAAiB,WACnBO,EAAY9I,KAAKyG,MACjB,IACE5G,OAAOM,eAAesG,KAAM,mBAAoB,CAC9CjH,IAAK,WACH,OAAO,KAGX,MAAOkJ,GACPjC,KAAK+B,kBAAmB,IAGrBK,GAGTR,EAAYvI,UAAYR,OAAO8J,MAAMtJ,UACrCR,OAAO+I,YAAcA,GA9CzB,I,cCNKgB,QAAQvJ,UAAUwC,UACnB+G,QAAQvJ,UAAUwC,QAAW+G,QAAQvJ,UAAkBwJ,oB,8ECC3D,WACA,QACA,QAGA,SAASrK,EACLsK,EACA5F,QAAA,IAAAA,MAAA,IAEA,IAAI6F,EAAgBD,EAMpB,GAJuC,iBAA5BA,IACPC,EAAgBjH,SAASkH,cAAcF,MAGrCC,aAAyBE,mBAC3B,MAAM,IAAIrF,UAAU,kDAGxB,GAAImF,EAAcG,SACd,MAAM,IAAIlB,MACN,6FAKR,IAA6B,mCAAO,CAA/B,IAAMmB,EAAc,KACrB,GAAIA,EAAeJ,gBAAkBA,EACjC,OAAO,IAAI,UAAmBI,GAItC,IAAMC,EAAW,IAAI,UAAaL,EAAe7F,GAMjD,OAFA,UAAM9B,KAAKgI,GAEJ,IAAI,UAAmBA,GAuBlC,IApByBC,EAoBnBC,IApBmBD,EAoBgB7K,GAnB3B+K,IAAM,SAACrG,QAAA,IAAAA,MAAA,IACb,IAAMsG,EAAU1H,SAAS2H,iBAAiB,UAE1C1F,MAAM1E,UAAU+F,QAAQ7F,KAAKiK,GAAS,SAAAvH,GAGlC,OAFiBzD,EAAQyD,EAAQiB,OAMzCmG,EAAUK,QAAU,WACE,UAAMC,QAEdvE,SAAQ,SAAAgE,GAAY,OAAAA,EAASM,cAGpCL,GAKX,UAAeC,G,8ECjEf,WAEA,QAGA,QAGA,QACA,OACA,QACA,QACA,QACA,QAGA,QACA,QAEA,OACA,QAEA,aAUI,WAAYP,EAAkC7F,GAC1C8C,KAAK9F,OAAS,UAAM,IAAI,UAAUgD,GAAS,GAC3C8C,KAAKe,MAAQ,UAAY6C,cAAcb,EAAe/C,KAAK9F,QAC3D8F,KAAK6D,SAAW,IAAI,UAAS7D,KAAK9F,OAAOgB,YACzC8E,KAAK7F,IAAM6F,KAAK6D,SAASC,OAAO9D,KAAKe,MAAOgC,GAC5C/C,KAAK9D,OAAS,IAAI,UAElB8D,KAAK/F,QAAU,UAAa8J,aAAa/D,KAAKe,MAAO,CACjDiD,YAAa,UAAY7K,KAAK,KAAM6G,KAAM,WAC1CiE,aAAc,UAAa9K,KAAK,KAAM6G,KAAK7F,IAAK6F,KAAK9D,SACtD8D,KAAKkE,kBAAkB/K,KAAK6G,OAE/BA,KAAKmE,cAAgB,UAAW,CAC5BlK,QAAS+F,KAAK/F,QACdC,OAAQ8F,KAAK9F,OACbC,IAAK6F,KAAK7F,IACV4G,MAAOf,KAAKe,MACZ7E,OAAQ8D,KAAK9D,SAGjB8D,KAAK9D,OAAOkI,qBAAuB,UAAoBpE,KAAK7F,IAAI8B,OAAQ+D,KAAKe,MAAOf,KAAK/F,QAAS+F,KAAK9F,QAEnG8F,KAAK9F,OAAOK,SAAS8J,cACrBrE,KAAK9D,OAAOoI,uBAAyB,UACjCtE,KAAK7F,IAAI8B,OACT+D,KAAKe,MACLf,KAAKuE,QAAQpL,KAAK6G,QAmGlC,OA9FI,sBAAW,4BAAa,C,IAAxB,WACI,OAAOA,KAAK7F,IAAI8B,Q,gCAGpB,sBAAW,oBAAK,C,IAAhB,WACI,OAAO+D,KAAKe,MAAM9H,O,IAGtB,SAAiBuL,GACb,GAAyB,iBAAdA,EACP,MAAM,IAAI5G,UAAU,oDAGxBoC,KAAK7F,IAAI8B,OAAOhD,MAAQuL,G,gCAGrB,YAAA3J,KAAP,WACI,UAAamF,KAAK/F,QAAS+F,KAAK9F,OAAQ8F,KAAK7F,MAG1C,YAAA8G,MAAP,WACIjB,KAAK/F,QAAQgH,SAGV,YAAAsD,QAAP,WACIvE,KAAKe,MAAQ,UACTf,KAAKe,MACL,UAAY6C,cAAc5D,KAAK7F,IAAI8B,OAAQ+D,KAAK9F,SAGpD8F,KAAK6D,SAASY,OAAOzE,KAAKe,OAE1Bf,KAAK7F,IAAIuK,MAAMhK,OAASsF,KAAK7F,IAAIwK,OAAOjK,OAASsF,KAAK7F,IAAIM,KAAKC,OAAS,EAExE,UAASkK,aAAa5E,KAAK7F,IAAK,CAAC,QAAS,SAAU,UAGjD,YAAA0K,SAAP,WACI,QAAK7E,KAAKe,MAAM+D,aAAc9E,KAAKe,MAAMgE,YAIzC/E,KAAK/F,QAAQ+K,cAEN,IAGJ,YAAAtB,QAAP,WACI1D,KAAK9D,OAAO+I,QACZjF,KAAKmE,cAAc/E,SAAQ,SAAA8F,GAAW,OAAAA,EAAQC,YAC9CnF,KAAK6D,SAASH,UAEd,IAAM0B,EAAa,UAAM5H,QAAQwC,MAEjC,UAAMqF,OAAOD,EAAY,IAGrB,YAAAlB,kBAAR,SAA0BnD,EAAc7H,GAC7B,IAAA4G,EAAA,YAAAA,UAIP,OAFAE,KAAK6D,SAASY,OAAO1D,EAAO7H,GAEpBA,GACJ,IAAK,aACD,IAAIoM,OAAE,EAQY,mBALdA,EADAvE,EAAMC,OACDlB,EAAUyF,OAEVzF,EAAU0F,UAGWF,IAE9B,MAEJ,IAAK,gBAGiB,mBAFZA,EAAKxF,EAAU2F,WAESH,EAAGvE,EAAM9H,OAEvC,MAEJ,IAAK,mBACKqM,EAAKxF,EAAU4F,cAErB,IAAmB,IAAf3E,EAAM7H,GAAgB,CACtB,IAAMsL,EAAYzD,EAAM4E,mBAAmB5E,EAAM6E,cAAc3M,MAE7C,mBAAPqM,GAAmBA,EAAGd,MAKrD,EAvIA,GAyIA,UAAeqB,G,6BC9JfzM,OAAOM,eAAejB,EAAS,aAAc,CAAEQ,OAAO,IACtD,IAAIW,EAAkB,EAAQ,GAC1BkD,EAAW,EAAQ,GACnBmD,EACA,WACID,KAAK3C,MAAO,EACZ2C,KAAKjB,2BAA4B,EACjCiB,KAAKlB,qBAAsB,EAC3BkB,KAAKd,2BAA4B,EACjCc,KAAKtB,iBAAkB,EACvBsB,KAAKrB,oBAAqB,EAC1BqB,KAAKvC,cAAgB7D,EAAgBE,QAAQyD,QAC7CyC,KAAKf,aAAenC,EAAS4C,YAC7BtG,OAAO2G,KAAKC,OAIpBvH,EAAQqB,QAAUmG,G,6BCjBlB7G,OAAOM,eAAejB,EAAS,aAAc,CAAEQ,OAAO,IAQtDR,EAAQqB,QAPR,SAAiCwF,GAC7B,IAAIwG,EAAcxG,EAAGwG,YACrB,MAA2B,mBAAhBA,GAA8BA,IAAgB1M,OAC9C,IAAI0M,EAER,K,6BCNX1M,OAAOM,eAAejB,EAAS,aAAc,CAAEQ,OAAO,IACtD,IAAIU,EAAU,EAAQ,GAClBoM,EAA6B,WAC7B,SAASA,IACL/F,KAAKhD,OAAS,KACdgD,KAAKgG,QAAU,GACfhG,KAAK9F,OAAS,GAoClB,OA/BA6L,EAAY1M,UAAU4M,GAAK,SAAUjJ,GAEjC,OADAgD,KAAKhD,OAASA,EACPgD,MAKX+F,EAAY1M,UAAU6M,KAAO,WAEzB,IADA,IAAIF,EAAU,GACL3H,EAAK,EAAGA,EAAKmB,UAAU9E,OAAQ2D,IACpC2H,EAAQ3H,GAAMmB,UAAUnB,GAG5B,OADA2B,KAAKgG,QAAUA,EACRhG,MAKX+F,EAAY1M,UAAU8M,KAAO,SAAUjJ,GAEnC,OADA8C,KAAK9F,OAASgD,EACP8C,MAOX+F,EAAY1M,UAAU+M,KAAO,WACzB,IAAIC,EAAQrG,KACZ,OAAOA,KAAKgG,QAAQ/K,QAAO,SAAU+B,EAAQC,GAAU,OAAOtD,EAAQG,QAAQkD,EAAQC,EAAQoJ,EAAMnM,UAAY8F,KAAKhD,QAAU,KAE5H+I,EAxCqB,GA0ChCtN,EAAQqB,QAAUiM,G,6BCrBlB,SAASO,EAAgBC,EAAmBC,EAAcC,EAAeC,GACrE,IAAIC,EAAgBC,EAAiBF,EAAQG,cAAeN,GACxDO,EAAQC,KAAKC,IAAIN,EAAQhM,OAAS8L,EAAa9L,QACnD,OAAIiM,EAAgBF,EAAcE,eAC7BA,IAAkBF,EAAcE,eAAiBG,EAAQL,EAAcK,MAGjE,CAAE5N,IAAKwN,EAASI,MAAOA,EAAOH,cAAeA,GAEjDF,EAMX,SAASG,EAAiBK,EAAaT,GAOnC,IANA,IAAIU,EAASD,EAAYvM,OAAS8L,EAAa9L,OAASuM,EAAcT,EAClEW,EAAUD,IAAWD,EAAcT,EAAeS,EAClDG,EAAc,EACdC,EAAmB,EACnBC,EAAoB,EACpBC,GAAmB,EAChBH,EAAcF,EAAOxM,OAAQ0M,IAAe,CAC/C,KAA6B,IAAtBE,GACHJ,EAAOE,KAAiBD,EAAQE,IAChCA,EAAmBF,EAAQzM,QAG3B2M,IAEJ,GAAIH,EAAOE,KAAiBD,EAAQE,IAUhC,GARIE,IAAoBH,EAAc,IAElCE,EAAoB,GAExBC,EAAkBH,EAElBC,MADAC,IAG0BH,EAAQzM,OAC9B,UAEH,IAAI4M,EAAoB,EAEzB,MAIAA,EAAoBD,EAAmB,GAG/CE,GAAmB,EAOnB,IANA,IAAIC,EAAe,EACfC,EAAoB,EACpBC,EAAqB,EACrBC,EAAkBT,EAAOxM,OAAS,EAClCkN,EAAmBT,EAAQzM,OAAS,EAEjC8M,EAAeN,EAAOxM,OAAS0M,EAAaI,IAAgB,CAC/D,KAA8B,IAAvBE,GACHR,EAAOS,EAAkBH,KAAkBL,EAAQS,EAAmBH,IACtEA,EAAoBN,EAAQzM,QAC5B+M,IAEJ,GAAIP,EAAOS,EAAkBH,KAAkBL,EAAQS,EAAmBH,GAClEF,IAAoBC,EAAe,IACnCE,EAAqB,GACzBH,EAAkBC,EAClBE,IACAD,QAEC,IAAIC,EAAqB,EAC1B,MAGAA,EAAqBD,EAAoB,GAGjD,OAAOV,KAAKc,IAAIV,EAAQzM,OAAQ4M,EAAoBI,GAtGxDtO,OAAOM,eAAejB,EAAS,aAAc,CAAEQ,OAAO,IAwGtDR,EAAQmO,iBAAmBA,EAC3BnO,EAAQqB,QAxGR,SAA0BkF,EAAKhC,EAAQwJ,EAAcsB,GAMjD,GAAI1O,OAAOE,eAAeC,KAAKyD,EAAQwJ,KAClCpN,OAAO2O,SAAS/K,IACjB5D,OAAO4O,aAAahL,MAClBgC,aAAepB,WACjB,MAAMoB,EACV,IAAIiJ,EAAU3B,EAAgBnN,KAAK,KAAMqN,EAAcA,EAAaK,eAChEqB,EAAS,CAAEhP,IAAK,GAAI4N,MAAOqB,IAAUxB,cAAe,GAGpDyB,EAAYhP,OAAO+F,KAAKnC,GAAQ/B,OAAOgN,EAASC,GAChDtI,EAAawI,GAAaA,EAAUzB,cAAgB,EAAIyB,EAAUlP,IAAM,GAC5E,MAAM,IAAI0E,UAAUkK,EAAQtB,EAAc5G,M,8ECjB9C,MAUI,WATO,KAAAyI,yBAAmC,EACnC,KAAAC,aAAmC,EACnC,KAAAC,eAAmC,EACnC,KAAAC,qBAAmC,EACnC,KAAAC,MAAmC,EACnC,KAAAC,sBAAmC,EACnC,KAAArE,aAAmC,EACnC,KAAAhK,gBAAmC,GAGtCjB,OAAO2G,KAAKC,OAIpB,UAAe2I,G,8ECdf,MAMI,WALO,KAAApD,OAA2B,KAC3B,KAAAC,QAA2B,KAC3B,KAAAC,SAAiC,KACjC,KAAAC,cAAiC,KAGpCtM,OAAO2G,KAAKC,OAIpB,UAAe4I,G,8ECZf,MA8BI,WA7BO,KAAArQ,KAAyB,WACzB,KAAAsQ,SAAyB,gBACzB,KAAAC,cAAyB,sBACzB,KAAAC,cAAyB,sBACzB,KAAAC,aAAyB,oBACzB,KAAAC,YAAyB,mBACzB,KAAAC,YAAyB,mBACzB,KAAAC,aAAyB,qBACzB,KAAAC,WAAyB,kBACzB,KAAAC,YAAyB,mBACzB,KAAAC,eAAyB,sBACzB,KAAAC,KAAyB,WACzB,KAAAtQ,MAAyB,YACzB,KAAAuQ,MAAyB,YACzB,KAAAvN,OAAyB,aACzB,KAAAF,KAAyB,WACzB,KAAA0N,eAAyB,sBACzB,KAAAC,UAAyB,kBACzB,KAAAC,aAAyB,qBACzB,KAAAC,UAAyB,iBACzB,KAAAlF,MAAyB,YACzB,KAAAmF,cAAyB,qBACzB,KAAAC,cAAyB,sBACzB,KAAAC,WAAyB,kBACzB,KAAApF,OAAyB,aACzB,KAAAqF,eAAyB,sBACzB,KAAAC,cAAyB,qBACzB,KAAAC,eAAyB,sBAG5B9Q,OAAO2G,KAAKC,OAIpB,UAAemK,G,8ECrCf,YAEA,QACA,QAIA,SAASC,EAAUC,EAA+BC,GAC9C,IAAMC,EAAe,IAAI,UAAaD,GAEtC,IAAKC,EAAavN,OAAQ,OAAOuN,EAEjC,IAAMC,EAAe,SAACvI,GAAM,OAAAsI,EAAaE,QAAQxI,EAAGoI,IAUpD,OARIE,EAAaG,SAAW,EACxBH,EAAaC,aAAe,UAASA,EAAcD,EAAaG,UAEhEH,EAAaC,aAAeA,EAGhCD,EAAavN,OAAO2N,iBAAiBJ,EAAazP,KAAMyP,EAAaC,cAE9DD,EASP,EAAAH,YADc,EAAAtQ,QALlB,SAAoBuQ,GAChB,OAAO,UAAcA,EAAclQ,KAAKyQ,IAAIR,EAAUjR,KAAK,KAAMkR,M,8ECIrE,UA9BA,SACII,EACAI,GAEA,IAAIC,EAAU,KACVC,GAAgB5C,IAEpB,OAAO,W,IAAA,WAAS,kDACZ,IAAM6C,EAAMC,KAAKD,MAEXE,EAAQ,WACVJ,EAAU,KAEVL,EAAQxM,MAAM,EAAMsB,GAEpBwL,EAAOC,GAGLG,EAAaH,EAAMD,EAErBI,GAAcN,EACdK,KAEA/O,aAAa2O,GAEbA,EAAUxO,WAAW4O,EAAOL,EAAQM,O,8ECzBhD,WAKA,aASI,WAAYb,GARL,KAAAxP,KAA8B,GAC9B,KAAAkC,OAA8B,KAC9B,KAAAoO,SAA8B,EAC9B,KAAAV,SAA8B,EAC9B,KAAAD,QAA8B,KAC9B,KAAAD,aAA8B,KAC9B,KAAAa,SAA8B,EAGjC,UAAMrL,KAAMsK,GAEZlR,OAAO2G,KAAKC,MAQpB,OALW,YAAAmF,OAAP,WACSnF,KAAKhD,QAEVgD,KAAKhD,OAAOsO,oBAAoBtL,KAAKlF,KAAMkF,KAAKwK,eAExD,EApBA,GAsBA,UAAee,G,8ECzBf,YACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QAmEA,UAhEsB,SAACpR,GAA8B,OACjD,CACI6C,OAAQ7C,EAAIoP,KACZzO,KAAM,QACN2P,QAAS,WAEb,CACIzN,OAAQ7C,EAAI4B,KACZjB,KAAM,YACN2P,QAAS,WAEb,CACIzN,OAAQ7C,EAAI4B,KACZjB,KAAM,QACN2P,QAAS,WAEb,CACIzN,OAAQ7C,EAAI4B,KACZjB,KAAM,YACN2P,QAAS,WAEb,CACIzN,OAAQ7C,EAAIyP,UACZ9O,KAAM,SACN2P,QAAS,WAEb,CACIzN,OAAQ7C,EAAI8B,OACZnB,KAAM,UACN2P,QAAS,WAEb,CACIzN,OAAQ7C,EAAI8B,OACZnB,KAAM,UACN2P,QAAS,WAEb,CACIzN,OAAQ7C,EAAI8B,OACZnB,KAAM,WACN2P,QAAS,WAEb,CACIzN,OAAQ7C,EAAI8B,OACZnB,KAAM,QACN2P,QAAS,WAEb,CACIzN,OAAQ7C,EAAI8B,OACZnB,KAAM,OACN2P,QAAS,WAEb,CACIzN,OAAQlB,SAAS+C,gBACjB/D,KAAM,QACN2P,QAAS,WAEb,CACIzN,OAAQnE,OACRiC,KAAM,SACN2P,QAAS,UACTC,SAAU,Q,8EC5ElB,WACA,OAeA,UAZA,SAAyBzI,EAAU,GAAC,EAAAlB,M,IAAO9G,EAAA,EAAAA,QAASE,EAAA,EAAAA,IAAKD,EAAA,EAAAA,OACrD+H,EAAEuJ,kBAEF,IAAM7G,EAAS,UAAc1C,EAAEjF,OAAuByO,EAAUzP,QAAQ,GAExE,GAAK2I,EAAL,CAEA,IAAM+G,EAAc3N,MAAM1E,UAAUmE,QAAQjE,KAAKY,EAAIwK,OAAQA,GAE7D1K,EAAQ0R,aAAaD,EAAaxR,EAAOK,SAASgO,kB,8ECbtD,WACA,OAaA,UAVA,SAA6BtG,EAAU,G,IAAChI,EAAA,EAAAA,QACpCgI,EAAEuJ,kBAEa,UAAcvJ,EAAEjF,OAAuByO,EAAUzP,QAAQ,IAIxE/B,EAAQ2R,wB,8ECXZ,WACA,OAeA,UAZA,SAA6B3J,EAAU,G,IAAClB,EAAA,EAAAA,MAAO9G,EAAA,EAAAA,QAASE,EAAA,EAAAA,IACpD8H,EAAEuJ,kBAEF,IAAM7G,EAAS,UAAc1C,EAAEjF,OAAuByO,EAAUzP,QAAQ,GAExE,GAAK2I,IAAU5D,EAAM8K,SAArB,CAEA,IAAMH,EAAc3N,MAAM1E,UAAUmE,QAAQjE,KAAKY,EAAIwK,OAAQA,GAE7D1K,EAAQ6R,YAAYJ,M,8ECbxB,WACA,QAGA,SAASK,EACLC,EACA/J,EACA,G,IAAClB,EAAA,EAAAA,MAAO9G,EAAA,EAAAA,QAASE,EAAA,EAAAA,IAAKD,EAAA,EAAAA,OAEtB,IAAI6G,EAAMkL,gBAAV,CAEA,IAAMC,EAAmBF,EAA4BnT,OAAOsT,UAAUhM,WAEtE8B,EAAEuJ,kBAEEzK,EAAMqL,UACN,UAAanS,EAASC,EAAQC,GAE1B+R,EACAjS,EAAQwC,QAERtC,EAAI8B,OAAOQ,SAGfxC,EAAQgH,SAQZ,EAAA8K,kBAJJ,IAAMM,EAAuBN,EAAgB5S,KAAK,KAAM,WAG5B,EAAAW,QAAA,G,8EC5B5B,YAKA,SAASwS,EAAiBC,EAAUC,EAAaC,EAAWC,GACxD,IAAI5R,EAAO,UAAc6R,KACrBrS,GAA2B,EAE/B,GAAIiS,GAAYE,GAAaD,GAAeC,EAAW,CACnD,IAAMG,EAAe7F,KAAK8F,IAAIL,EAAaD,GAE3CzR,EAAOyR,EAAWC,EAAc,UAAcM,IAAM,UAAcC,OAClEzS,EAA0ByM,KAAKiG,MAAMJ,EAAeF,QAC7CH,GAAYE,EACnB3R,EAAO,UAAcgS,IACdN,GAAeC,IACtB3R,EAAO,UAAciS,QAGzB,MAAO,CAACjS,KAAI,EAAER,wBAAuB,GAuBrC,EAAAgS,mBADuB,EAAAxS,QAnB3B,SAA6BK,EAAUD,GACnC,IAAM+S,EAAS9S,EAAIoP,KAAK2D,wBAClBC,EAAKtU,OAAOuU,YACZb,EAAWU,EAAOI,IAvBT,GAwBTb,EAAcW,EAAKF,EAAOK,OAxBjB,GA0Bf,GAAInT,EAAIwK,OAAOjK,OAAS,EAAG,MAAO,CAC9BI,KAAM,UAAc6R,KACpBrS,yBAA0B,GAG9B,IAAMD,EAAkB0M,KAAKc,IAAI3N,EAAOK,SAASF,gBAAiBF,EAAIM,KAAKC,QAI3E,OAAO4R,EAAiBC,EAAUC,EAHhBrS,EAAIS,eAAeP,GAClBF,EAAIS,eAAe,M,8ECvB1C,UAdA,SAA+BqH,EAAU,GAAC,EAAAlB,M,IAAO9G,EAAA,EAAAA,QAASE,EAAA,EAAAA,IACtD8H,EAAEuJ,kBAEI,kBAAC+B,EAAA,EAAAA,aAAcC,EAAA,EAAAA,aAAcC,EAAA,EAAAA,UAEjB,IAAdA,EACAxT,EAAQyT,SACDD,IAAcD,EAAeD,EACpCtT,EAAQ0T,YAER1T,EAAQ2T,W,8ECFhB,UARA,SAA0B3L,EAAU,G,IAAChI,EAAA,EAAAA,QAAS8G,EAAA,EAAAA,MAAO7G,EAAA,EAAAA,OAC7C6G,EAAM8K,WAEV5R,EAAQiH,OAEJhH,EAAOK,SAAS+N,cAAgBvH,EAAM8M,kBAAkB5T,EAAQgH,W,8ECPxE,WAWA,UARA,SAA2BgB,EAAU,G,IAAChI,EAAA,EAAAA,QAASC,EAAA,EAAAA,OAAQC,EAAA,EAAAA,IAAK4G,EAAA,EAAAA,MACxD9G,EAAQwC,QAEJvC,EAAOK,SAAS+N,cAAgBvH,EAAMkL,iBACtC,UAAahS,EAASC,EAAQC,K,8ECDtC,UAJA,SAA6B8H,EAAU,G,IAAChI,EAAA,EAAAA,QAAS,EAAAC,OAAQ,EAAAC,IACrDF,EAAQ+K,e,8ECHZ,WACA,OACA,QAGA,QACA,QA4CA,UA1CA,SAA6B/C,EAAkBoI,GACpC,IAAAyD,EAAA,EAAAA,QAAS9Q,EAAA,EAAAA,OACT+D,EAAA,EAAAA,MAAO9G,EAAA,EAAAA,QAASE,EAAA,EAAAA,IAAKD,EAAA,EAAAA,OAE5B,IAAI6G,EAAMkL,kBAAmBlL,EAAMS,WAEnC,OAAQsM,GACJ,KAAKC,EAASrN,KACV,UAAwBuB,EAAGoI,GAE3B,MACJ,KAAK0D,EAAStN,GACV,UAAsBwB,EAAGoI,GAEzB,MACJ,KAAK0D,EAASpN,MACV,GAAII,EAAMiN,YAGN,YAFA/L,EAAEuJ,kBAKV,KAAKuC,EAASnN,MACVqB,EAAEuJ,kBACFvJ,EAAEH,iBAEF,UAAmB9E,EAA6BqN,GAE5CtJ,EAAMC,OACN/G,EAAQ0R,aAAa5K,EAAM6E,aAAc1L,EAAOK,SAASgO,eAEzD,UAAatO,EAASC,EAAQC,GAGlC,MACJ,KAAK4T,EAASlN,IACV5G,EAAQgH,W,8EC5CpB,WACA,OAoDA,UAjDA,SACIgB,EACAoI,GAEO,IAAA4D,EAAA,EAAAA,QAASjR,EAAA,EAAAA,OACT+D,EAAA,EAAAA,MAAO5G,EAAA,EAAAA,IAAKF,EAAA,EAAAA,QAASC,EAAA,EAAAA,OAExB0L,EAAuB7E,EAAM6E,cAAgB,EACjD7E,EAAM6E,aAAe7E,EAAMmN,cAEvBC,EAAqB,EACrBC,EAA0B,EAE9BnM,EAAEH,iBAEF,UAAmB9E,EAA6BqN,GAE5C4D,IACAG,EAAkBrH,KAAKsH,MACnBtH,KAAK8F,IAAI9L,EAAMuN,aAAe,EAAGpU,EAAOK,SAASF,mBAIzD,GACIuL,GAAgBwI,EAEhBA,EAAkB,EAEdxI,GAAgB7E,EAAMuN,eACtB1I,EAAe1L,EAAOK,SAASkO,KAAO,EAAI1H,EAAMuN,aAAe,GAGnErU,EAAQ6R,YAAYlG,GAAc,GAElCuI,UAGApN,EAAMwN,eACNxN,EAAMwN,cAAc/M,YACpB2M,GAAcpN,EAAMuN,cAGpBvN,EAAMqL,UACN,UAAanS,EAASC,EAAQC,K,8EC/CtC,WACA,OAkDA,UA/CA,SACI8H,EACAoI,GAEO,IAAA4D,EAAA,EAAAA,QAASjR,EAAA,EAAAA,OACT+D,EAAA,EAAAA,MAAO7G,EAAA,EAAAA,OAAQC,EAAA,EAAAA,IAAKF,EAAA,EAAAA,QAEvB2L,EAAe7E,EAAM6E,cAAgB,EACrC7E,EAAM6E,aAAe7E,EAAMmN,cAE3BC,EAAa,EACbC,EAA0B,EAE9BnM,EAAEH,iBAEF,UAAmB9E,EAA6BqN,GAE5C4D,IACAG,EAAkBrH,KAAKsH,MACnBtH,KAAK8F,IAAI9L,EAAMuN,aAAe,EAAGpU,EAAOK,SAASF,mBAIzD,GACIuL,GAAgBwI,EAEhBA,EAAkB,EAEdxI,EAAe,IACfA,EAAe1L,EAAOK,SAASkO,KAAO1H,EAAMuN,aAAe,EAAI,GAGnErU,EAAQ6R,YAAYlG,GAAc,GAElCuI,UAGApN,EAAMwN,eACNxN,EAAMwN,cAAc/M,YACpB2M,EAAapN,EAAMuN,cAGnBvN,EAAMqL,UACN,UAAanS,EAASC,EAAQC,K,8EC/CtC,YAmBA,UAdA,SACI,EACA,EACAqU,G,IAFCV,EAAA,EAAAA,QACA7T,EAAA,EAAAA,QAASiC,EAAA,EAAAA,YACV,IAAAsS,MAL0B,MAIR,EAAAzN,MAGRkL,iBAAmB,CAAC8B,EAAStN,GAAIsN,EAASrN,MAAM+N,SAASX,KAEnEjV,OAAOsD,aAAaD,EAAOwS,iBAE3BzU,EAAQ0U,SAERzS,EAAOwS,gBAAkB7V,OAAOyD,YAAW,WAAM,OAAArC,EAAQ2U,gBAAeJ,M,8EChB5E,YAEA,QAGA,QACA,QACA,QAEA,aAII,WAAYtT,GACR8E,KAAK7F,IAAM,IAAI,UACf6F,KAAK9E,WAAaA,EAsF1B,OAnFW,YAAA4I,OAAP,SAAc/C,EAAcgC,GACxB,IAAM8L,EAAO,UAAK9N,EAAOf,KAAK9E,YACxB4T,EAAc,UAAyBD,GAW7C,OATA7O,KAAK7F,IAAM,IAAI,UACf6F,KAAK7F,IAAI5B,KAAOuW,EAEhB9O,KAAK7F,IAAIwK,OAAOjK,OAASsF,KAAK7F,IAAIuK,MAAMhK,OAAS,EAEjDqU,EAASnK,aAAa5E,KAAK7F,KAE3B6F,KAAKgP,aAAajM,GAEX/C,KAAK7F,KAGT,YAAAsK,OAAP,SAAc1D,EAAc7H,GACxB,IAAM+V,EAAW,UAAKlO,EAAOf,KAAK9E,YAC5BgU,EAAW,UAAyBD,GACpCE,EAAc,UAAQnP,KAAK7F,IAAI5B,KAAM2W,GAE3C,UAASlP,KAAK7F,IAAI5B,KAAM4W,GAEZ,kBAARjW,GACA8G,KAAKoP,oBAAoBrO,EAAM9H,QAIhC,YAAAyK,QAAP,WACI1D,KAAK7F,IAAI8B,OAAOoT,UAAUC,OAAOtP,KAAK9E,WAAWe,QAEjD,IACI+D,KAAK7F,IAAI5B,KAAKgX,cAAcC,aAAaxP,KAAK7F,IAAI8B,OAAQ+D,KAAK7F,IAAI5B,MACrE,MAAOyG,MAGL,YAAAgQ,aAAR,SAAqBjM,GACjB,IAAMpH,EAASoH,EAAcwM,cACvBE,EAAazP,KAAK7F,IAAI8B,OAE5B,IAAKN,EAAQ,MAAM,IAAIqG,MAAM,+EAE7BrG,EAAO6T,aAAaxP,KAAK7F,IAAI5B,KAAMwK,GAEnC0M,EAAWF,cAAcC,aAAazM,EAAe0M,GACrD1M,EAAczH,UAAY0E,KAAK9E,WAAWe,OAC1C8G,EAAc2M,aAAa,cAAe,QAE1C1P,KAAK7F,IAAI8B,OAAS8G,GAGd,YAAAqM,oBAAR,SAA4BnW,GACxB,GAAI+G,KAAK7F,IAAI8B,OAAOhD,QAAUA,EAA9B,CAEA,IAAMiJ,EAAQ,IAAIN,YAAY,SAAU,CACpCU,SAAS,IAGbtC,KAAK7F,IAAI8B,OAAOhD,MAAQA,EAExB+G,KAAK7F,IAAI8B,OAAO0T,cAAczN,KAGpB,EAAA0C,aAAd,SAA2BzK,EAAUgF,GACjC,YADiC,IAAAA,MAAiB/F,OAAO+F,KAAKhF,IACvDgF,EACFlE,QAAO,SAAC2U,EAAeC,GACpB,IAAMpU,EAAW,eAAeoU,EAAG,KAC7BC,EAAWF,EAASrX,KAAKkL,iBAAiBhI,GAEhD,GAAIqU,EAASpV,OAAS,GAAa,SAARmV,EAAgB,OAAOD,EAElD,IAAMG,EAAUD,EAAS,GACnB7W,EAAQ2W,EAASC,GAQvB,OANc,OAAV5W,EACA2W,EAASC,GAAOE,EACThS,MAAMC,QAAQ/E,IACrB8E,MAAM1E,UAAU+B,KAAK6C,MAAMhF,EAAO6W,GAG/BF,IACRzV,IAEf,EA5FA,GA8FA,UAAe4U,G,8ECtGf,WAGA,QACA,QA+BA,UA7Ba,SAAChO,EAAc7F,GAaxB,MAAQ,sCAZU,UAAiB,CAC/BA,EAAW3C,KACX,CAACwI,EAAMS,WAAYtG,EAAW8N,cAC9B,CAACjI,EAAMiP,UAAW9U,EAAW+N,aAC7B,CAAClI,EAAMC,OAAQ9F,EAAW2N,UAC1B,CAAC9H,EAAMkP,UAAW/U,EAAWgO,aAC7B,CAACnI,EAAMgE,SAAU7J,EAAWiO,cAC5B,CAACpI,EAAMmP,YAAahV,EAAW4N,eAC/B,CAAC/H,EAAMoP,YAAajV,EAAW6N,eAC/B,CAAChI,EAAMkL,gBAAiB/Q,EAAWkO,cAKb,4FAGhBrI,EAAMC,OAAS,uBAAyB,IAAE,kBAC1CD,EAAM+D,WAAa,uBAAyB,IAAE,kBAC9C/D,EAAMS,WAAa,uBAAyB,IAAE,kBAC9CT,EAAMiP,UAAY,sBAAwB,IAAE,4BAE5C,UAAKjP,EAAO7F,GAAW,kBACvB6F,EAAMkL,gBAAkB,GAAK,UAAKlL,EAAO7F,IAAW,2B,8EC9BlE,WAGA,QA+BA,UA7BA,SAAc6F,EAAc7F,GACxB,IAAMI,EAAY,UAAiB,CAC/BJ,EAAWa,KACX,CAACgF,EAAMqP,QAASlV,EAAWwO,WAC3B,CAAC3I,EAAMsP,WAAYnV,EAAWyO,cAC9B,CAAC5I,EAAMvG,aAAcU,EAAWuO,kBAG9B6G,EAAYvP,EAAMC,OACpB,sBAAsBD,EAAMpG,cAAa,OAAS,GAEtD,MAAQ,sCAESW,EAAS,4EAGhByF,EAAMC,OAAS,GAAK,eAAa,wCAErB9F,EAAW0O,UAAS,4DAE5B0G,EAAS,sBACTvP,EAAMwP,OAAO3F,KAAI,SAAA4F,GAAc,iBAAMA,EAAYzP,EAAO7F,MAAaK,KAAK,IAAG,gDAEtEL,EAAWmO,YAAW,uDACtBnO,EAAWoO,eAAc,sD,8EC7BlD,WAIA,QAmBA,UAjBc,SAACkH,EAAmBzP,EAAc7F,GAO5C,MAAQ,yBANU,UAAiB,CAC/BA,EAAWwJ,MACX,CAAC8L,EAAWhP,WAAYtG,EAAW2O,eACnC,CAAC2G,EAAWC,SAAUvV,EAAW4O,iBAIV,kDACjB0G,EAAWC,SACT,eAAevV,EAAW6O,WAAU,qBAAqByG,EAAWjP,MAAK,SAAW,IAAE,iBAExFiP,EAAWtT,QAAQ0N,KAAI,SAAA8F,GAAe,iBAAOA,EAAa3P,EAAO7F,MAAaK,KAAK,IAAG,2B,8EClBpG,WA4BA,UAxBA,SAAgBmV,EAAqB3P,EAAc7F,GAC/C,IAAMyV,EAAa5P,EAAM6P,iBAAmBF,EAS5C,MAAQ,sCAPU,UAAiB,CAC/BxV,EAAWyJ,OACX,CAACgM,EAAYzV,EAAWgP,gBACxB,CAACwG,IAAgB3P,EAAMwN,cAAerT,EAAW+O,eACjD,CAACyG,EAAYlP,WAAYtG,EAAW8O,kBAKd,wFAGT0G,EAAYnP,MAAK,mBACxBoP,EAAa,uBAAyB,IAAE,kBACxCD,EAAYlP,WAAa,uBAAyB,IAAE,oCAEhDkP,EAAYnP,MAAK,2B,8ECrBnC,YACA,QAUA,UARa,SAACR,EAAc7F,GAA2B,MAAC,qBACtCA,EAAWqO,KAAI,+BACvB,UAAMxI,EAAO7F,GAAW,aACxB,UAAM6F,EAAO7F,GAAW,4BACTA,EAAWe,OAAM,gD,8ECN1C,UAFc,SAAC6E,EAAG5F,GAA2B,qBAAeA,EAAWsO,MAAK,iC,8ECa5E,UAZc,SAACzI,EAAc7F,GACzB,MAAQ,sCAESA,EAAWjC,MAAK,iDAEvB8H,EAAM8P,mBAAqB,qBAAqB9P,EAAM+P,mBAAkB,IAAM,IAAE,4BAEhF/P,EAAM+P,mBAAkB,2B,8ECFtC,UARA,SAAkCjC,GAC9B,IAAMkC,EAAOjV,SAASkV,cAAc,OAIpC,OAFAD,EAAKE,UAAYpC,EAEVkC,EAAKG,oB,8ECLhB,8BACW,KAAAjV,OAA+B,KAC/B,KAAA1D,KAA+B,KAC/B,KAAAgR,KAA+B,KAC/B,KAAAtQ,MAA+B,KAC/B,KAAA8C,KAA+B,KAC/B,KAAAyN,MAA+B,KAC/B,KAAAI,UAA+B,KAC/B,KAAAnP,KAA+B,GAC/B,KAAAiK,MAA+B,GAC/B,KAAAC,OAA+B,GAa1C,OAXW,YAAA/J,eAAP,SAAsBiS,QAAA,IAAAA,MAAA,KAGlB,IAFA,IAAIsE,EAAc,EAETjT,EAAI,EAAGzD,OAAI,GAAGA,EAAOuF,KAAKvF,KAAKyD,KAChCA,IAAM2O,EAD+B3O,IAGzCiT,GAAe1W,EAAK8S,aAGxB,OAAO4D,GAEf,EAvBA,GAyBA,UAAeC,G,8ECzBf,WAEA,QACA,QAGA,QAqDA,SAASC,EAAqBC,EAAmBC,GAM7C,IALA,IAAMC,EAAkBzK,KAAK8F,IAAIyE,EAAKG,WAAW/W,OAAQ6W,EAAKE,WAAW/W,QACnEgX,EAAkB,GAElBC,EAAuC,GAEpCzT,EAAI,EAAGA,EAAIsT,EAAiBtT,IAAK,CACtC,IAAM0T,EAAQN,EAAKG,WAAWvT,GACxB2T,EAAQN,EAAKE,WAAWvT,GAE1B0T,QAPgB,IAOPF,EAAcE,EAAME,QAC7BJ,EAAcE,EAAME,MAAQ,IAG5BD,QAXgB,IAWPH,EAAcG,EAAMC,QAC7BJ,EAAcG,EAAMC,MAAQ,IAG5BF,IAAOF,EAAcE,EAAME,MAAM,GAAKF,EAAM3Y,OAC5C4Y,IAAOH,EAAcG,EAAMC,MAAM,GAAKD,EAAM5Y,OAGpD,IAAMkG,EAAO/F,OAAO+F,KAAKuS,GAErBvS,EAAKzE,OAAS,GACdyE,EAAK4S,OAGA7T,EAAI,EAAb,IAAK,IAAWhF,OAAG,EAAGA,EAAMiG,EAAKjB,GAAKA,IAAK,CACvC,IAAM8T,EAAON,EAAcxY,GAErB+Y,EAA2B,CAC7BnX,KAAM,KACNgX,KAAM5Y,EACND,MAAO,MAGP+Y,EAAK,KAAOA,EAAK,UAlCD,IAoChBA,EAAK,IACLC,EAAOnX,KAAO,UAAoBoX,IAClCD,EAAOhZ,MAAQ+Y,EAAK,SAtCJ,IAuCTA,EAAK,IACZC,EAAOnX,KAAO,UAAoBqX,OAClCF,EAAOhZ,MAAQ,KAEfgZ,EAAOnX,KAAO,UAAoBsX,KAClCH,EAAOhZ,MAAQ+Y,EAAK,IAGxBL,EAAiBvW,KAAK6W,IAG1B,MAAO,CACHnX,KAAM,UAAcuX,MACpBV,iBAAgB,GAIxB,UA9GA,SAASW,EAAQhB,EAAYC,GACzB,IAAIgB,GAAmB,EAEjBC,EAAU,IAAI,UAEpB,GAAIlB,aAAgBrO,kBAGhB,OAFAuP,EAAQ1X,KAAO,UAAc6R,KAEtB6F,EAGX,GAAIlB,aAAgBmB,MAAQlB,aAAgBkB,KACpCnB,EAAKoB,cAAgBnB,EAAKmB,YAC1BF,EAAQ1X,KAAO,UAAc6R,MAE7B6F,EAAQ1X,KAAO,UAAc6X,MAC7BH,EAAQI,eAAiBrB,EAAKmB,kBAE/B,GAAIpB,aAAgBuB,aAAetB,aAAgBsB,YACtD,GAAIvB,EAAKwB,UAAYvB,EAAKuB,QACtBN,EAAQ1X,KAAO,UAAcyC,QAC7BiV,EAAQO,QAAUxB,OACf,GAAID,EAAK0B,YAAczB,EAAKyB,UAC/BR,EAAQ1X,KAAO,UAAc6R,UAC1B,GAAI2E,EAAKL,YAAcM,EAAKN,UAC/B,UAAMuB,EAASnB,EAAqBC,EAAMC,SAU1C,GARA,UAAMiB,EAASnB,EAAqBC,EAAMC,IAEtCiB,EAAQb,iBAAiBjX,OAAS,EAClC8X,EAAQ1X,KAAO,UAAcmY,KAE7BT,EAAQ1X,KAAO,UAAc6X,OAG5BJ,EAAkBjB,EAAK4B,WAAWxY,QAAU,GAAK6X,IAAoBhB,EAAK2B,WAAWxY,OACtF,IAAK,IAAIwD,EAAI,EAAGiV,OAAS,EAAGA,EAAY7B,EAAK4B,WAAWhV,GAAKA,IACzDsU,EAAQY,cAAchY,KAAKkX,EAAQa,EAAW5B,EAAK2B,WAAWhV,UAGlEsU,EAAQa,aAAe9B,EAAKN,eAIpCuB,EAAQ1X,KAAO,UAAcyC,QAC7BiV,EAAQO,QAAUxB,EAGtB,OAAOiB,I,8ECrDX,iBAEW,KAAAO,QAAuC,KACvC,KAAAM,aAAuC,GACvC,KAAAT,eAAuC,GACvC,KAAAjB,iBAAuC,GACvC,KAAAyB,cAAwC,GACxC,KAAAE,MAAuC,MAGlD,UAAeC,G,8ECbf,YACA,QAuCA,SAASC,EAAgBhY,EAAiBmW,GACtC,IAAM8B,EAAM5a,OAAO6a,sBAEnB/B,EAAiBvS,SAAQ,SAAA6S,GACjBwB,GAAO,CAAC,QAAS,SAASjW,QAAQyU,EAAOH,OAAS,EAClD2B,GAAI,WAAM,OAAAE,EAAenY,EAAIyW,MAE7B0B,EAAenY,EAAIyW,MAK/B,SAAS0B,EAAenY,EAAiByW,GACrC,OAAQA,EAAOnX,MACX,KAAK,UAAoBoX,IACzB,KAAK,UAAoBE,KACrB5W,EAAGkU,aAAauC,EAAOH,KAAMG,EAAOhZ,OAEpC,MACJ,KAAK,UAAoBkZ,OACrB3W,EAAGoY,gBAAgB3B,EAAOH,OAMtC,UA7DA,SAAS+B,EAASC,EAAYtB,GAC1B,OAAQA,EAAQ1X,MACZ,KAAK,UAAc6R,KACf,OAAOmH,EACX,KAAK,UAAcvW,QAGf,OAFAuW,EAAKvE,cAAcC,aAAagD,EAAQO,QAASe,GAE1CtB,EAAQO,QACnB,KAAK,UAAcJ,MASf,OARImB,aAAgBrB,KAChBqB,EAAKpB,YAAcF,EAAQI,eACpBJ,EAAQY,cAAc1Y,OAAS,EACtC8X,EAAQY,cAAchU,SAAQ,SAAC2U,EAAc7V,GAAM,OAAA2V,EAASC,EAAKZ,WAAWhV,GAAI6V,MAE/ED,EAAqB7C,UAAYuB,EAAQa,aAGvCS,EACX,KAAK,UAAczB,MAGf,OAFAmB,EAAgBM,EAAqBtB,EAAQb,kBAEtCmC,EACX,KAAK,UAAcb,KASf,OARIT,EAAQY,cAAc1Y,OAAS,EAC/B8X,EAAQY,cAAchU,SAAQ,SAAC2U,EAAc7V,GAAM,OAAA2V,EAASC,EAAKZ,WAAWhV,GAAI6V,MAE/ED,EAAqB7C,UAAYuB,EAAQa,aAG9CG,EAAgBM,EAAqBtB,EAAQb,kBAEtCmC,K,8ECRnB,UAtBA,SACI/Q,EACAhC,EACA9G,EACAC,GAEA,IAAI8Z,EAAoBjR,EAAc9J,MAatC,OAXuBJ,OAAOob,aAAY,WACtC,GAAIlR,EAAc9J,QAAU+a,EAAW,CACnC,IAAM9F,EAAgBnN,EAAMmT,wBAAwBnR,EAAc9J,OAElEgB,EAAQ0R,aAAauC,EAAehU,EAAOK,SAASgO,eACpDtO,EAAQ6R,YAAYoC,GAAe,GAGvC8F,EAAYjR,EAAc9J,QAlBH,O,8ECgB/B,UAhBA,SAA+B8J,EAAkChC,EAAcoT,GAC3E,IAAIC,EAAwBrR,EAAciQ,UAY1C,OAVuBna,OAAOob,aAAY,WAC/B,IAAAjB,EAAA,EAAAA,UAEHA,IAAcoB,GAAkBrT,EAAM8K,UACtCsI,IAGJC,EAAgBpB,IAZO,O,8ECM/B,UANA,SAAqBqB,EAA4BC,GAC7C,IAAuB,UAAAA,EAAA,eAAO,CAAzB,IAAMlR,EAAQ,KACXA,IAAaiR,GAAcjR,EAASnJ,QAAQgH,W,6BCAxD,SAASsT,EACLC,EACAC,EACAC,EACAC,EACAC,GAEA,IAEIC,EAEJ,OAAIJ,EAAkBD,EACXC,EAAkBG,GACjBC,EAAaJ,EAAkBC,GAN/BF,EAAmBG,IAMmC,EACvDH,EAAmBK,EAAYD,EAGnCJ,E,iDAyBP,EAAAD,eACgB,EAAAza,QAvBpB,SAAsBK,EAAU+B,EAAgB6E,EAAc+T,QAAA,IAAAA,OAAA,GAC1D,IAAMxB,EAAQvM,KAAK8F,IAAI,EAAG9L,EAAM6E,cAAgB,EAAI7E,EAAM6E,aAAe7E,EAAMmN,eACzEvJ,EAASxK,EAAIwK,OAAO2O,GAE1B,GAAK3O,EAAL,CAEA,IAAMoQ,EAASD,EAAkB/T,EAAMpG,cAAgB,EAAMgK,EAAO4I,aAAe,EAAK,EAElFE,EAAY8G,EACdpa,EAAIyP,UAAU6D,UACd9I,EAAOqQ,UACPrQ,EAAO4I,aACPxM,EAAMpG,cACNoa,GAGAtH,IAActT,EAAIyP,UAAU6D,YAEhCtT,EAAIyP,UAAU6D,UAAYA,M,8EC1C9B,WAKA,QAGA,2BA4DA,OA3DkB,EAAA1J,aAAd,SAA2BhD,EAAckU,EAAsBC,GAC3D,IAAMC,EAAaC,EAAaC,iBAAiBtU,EAAOmU,GAClDjb,EAAU,UAAekb,GAI/B,OAFA,UAAMlb,EAASgb,GAERhb,GAGI,EAAAob,iBAAf,SAAgCtU,EAAcmU,GAC1C,OAAO9b,OAAO2G,KACVqV,EACKE,gCAAgCvU,EAAOmU,GACvCja,QAAO,SAACsa,EAAO,G,IAACrc,EAAA,EAAAA,IAAKH,EAAA,EAAAA,IAAK0F,EAAA,EAAAA,IAAS,OAAArF,OAAOM,eACvC6b,EACArc,EACA,CACIJ,YAAY,EACZC,IAAG,EACH0F,IAAG,MAER,MAIA,EAAA6W,gCAAf,SAA+CvU,EAAcmU,GACzD,IAAM7b,EAAYD,OAAOoc,eAAezU,GAGxC,OAFgB3H,OAAO+F,KAAK4B,GAAO0U,OAAOrc,OAAO+F,KAAK9F,IAGjD4B,QAAO,SAACya,EAAkBxc,GACvB,IAIMyc,EAAuD,mBAHzDvc,OAAOoF,yBAAyBuC,EAAO7H,IACvCE,OAAOoF,yBAAyBnF,EAAWH,IAEMH,IASrD,OAPA2c,EAAiBta,KAAK,CAClBrC,IAAKqc,EAAaQ,kBAAkBzc,KAAK,KAAM4H,EAAO7H,GACtDuF,IAAKkX,OACD,EAASP,EAAaS,oBAAoB1c,KAAK,KAAM4H,EAAO7H,EAAKgc,GACrEhc,IAAG,IAGAwc,IACR,KAGI,EAAAE,kBAAf,SAAiC7U,EAAc7H,GAC3C,OAAO6H,EAAM7H,IAGF,EAAA2c,oBAAf,SAAmC9U,EAAc7H,EAAagc,EAAqBjc,GAC3E8H,EAAM7H,KAASD,IAEnB8H,EAAM7H,GAAOD,EAEbic,EAASnU,EAAO7H,KAExB,EA5DA,GA8DA,UAAekc,G,8ECtEf,YAEA,QACA,QAmIA,UA/HuB,SAACrU,GAA2B,OAC/CtE,MAAA,WACIsE,EAAMkP,WAAY,GAGtB/O,KAAA,WACIH,EAAMkP,WAAY,GAGtBjL,WAAA,WACIjE,EAAMiP,WAAY,GAGtBnL,SAAA,WACI9D,EAAMiP,WAAY,GAGtBtC,OAAA,WACI3M,EAAM+U,aAAe,UAAaC,QAGtCpI,UAAA,WACI5M,EAAM+U,aAAe,UAAaE,WAGtCpI,OAAA,WACI7M,EAAM+U,aAAe,UAAaG,UAGtCC,eAAA,WACInV,EAAMvG,cAAe,GAGzB2b,iBAAA,WACIpV,EAAMvG,cAAe,GAGzBK,KAAA,SAEIF,EACAyb,EACA5b,GAEA,IAAIuG,EAAMS,WAAV,CAIA,OAFAxB,KAAKgE,cAEGoS,GACJ,KAAK,UAAczJ,KACnB,KAAK,UAAcG,IACf/L,EAAMsV,WAAa,UAAWC,WAE9B,MACJ,KAAK,UAAcvJ,OACfhM,EAAMsV,WAAa,UAAWE,WAKtCxV,EAAMvG,aAAeA,EACrBuG,EAAMpG,cAAgBA,EAEtBqF,KAAKiE,aAAalD,GAAO,KAG7BE,MAAA,WACIF,EAAMsV,WAAa,UAAWG,OAC9BzV,EAAM6E,cAAgB,EAEtB5F,KAAKkB,QAGT0K,oBAAA,WACI7K,EAAM8M,kBAAmB,GAG7BlC,aAAA,SAA6B2H,EAAerS,QAAA,IAAAA,OAAA,GACxC,IAAMwV,EAAgB1V,EAAM4E,mBAAmB2N,GAE/CvS,EAAM8M,kBAAmB,EAErByF,GAAS,KAAOmD,GAAiBA,EAAcjV,cAEnDT,EAAMmN,cAAgBoF,EAElBvS,EAAMiP,WAAajP,EAAMgE,UACzB/E,KAAK6E,WAGL9D,EAAMiN,YACNhO,KAAKiE,aAAalD,GACXE,GACPjB,KAAKiB,UAIb6K,YAAA,SAA4BwH,EAAeoD,QAAA,IAAAA,OAAA,GACvC,IAAM5B,EAAiB/N,KAAKC,IAAIsM,EAAQvS,EAAM6E,cAAgB,EAE9D7E,EAAM6E,aAAe0N,EAEjBoD,GACA1W,KAAKiE,aAAalD,EAAO+T,IAIjCnG,OAAA,WACI5N,EAAMiN,aAAc,GAGxBY,YAAA,WACI7N,EAAMiN,aAAc,GAGxB3R,OAAA,WACI0E,EAAM8K,UAAW,GAGrBtP,YAAA,WACIwE,EAAM8K,UAAW,GAGrB8K,UAAA,WACI5V,EAAMkL,iBAAkB,M,8EClIhC,WAGA,QAEA,QACA,QACA,QAEA,2BA8EA,OA7EkB,EAAArI,cAAd,SAA4Bb,EAAkC7I,GAC1D,IAAM6G,EAAQ,IAAI,UAAM,KAAM7G,GAE1B0c,GAAgB,EAEpB7V,EAAM+Q,KAAO/O,EAAc+O,KAC3B/Q,EAAMS,WAAauB,EAAcvG,SACjCuE,EAAM+D,WAAa/B,EAAc8T,SAEjC9V,EAAMkL,gBACF/R,EAAOK,SAASiO,qBAChB,UAAoB3P,OAAOsT,UAAUhM,WAGzC,IAAK,IAAIjC,EAAI,EAAG4Y,OAAK,EAAYA,EAAQ/T,EAAcgU,SAAS7Y,GAAKA,IACjE,GAAU,IAANA,GAAsD,OAA3C4Y,EAAME,aAAa,oBAOlC,GAAIF,aAAiBG,mBACK,IAAlBL,IACA7V,EAAMwP,OAAOnV,KAAK8b,EAAYC,YAE9BP,GAAgB,GAGpB7V,EAAMqW,UAAUla,QAAQ9B,KAAK8b,EAAYG,UAAUP,IAE/CA,EAAMQ,WAAUvW,EAAMmN,cAAgBnN,EAAMuN,aAAe,OAC5D,MAAIwI,aAAiBS,qBAkBxB,MAAM,IAAI3Z,UACN,qCAAqCkZ,EAAMhE,QAAO,0CAlBtD8D,GAAgB,EAEhB7V,EAAMwP,OAAOnV,KAAK8b,EAAYC,SAASL,IAEvC,IAAK,IAAIU,EAAI,EAAGC,OAAU,EAAYA,EAAaX,EAAMC,SAASS,GAAKA,IACnEzW,EAAMqW,UAAUla,QAAQ9B,KACpB8b,EAAYG,UACRI,EACAX,IAIHW,EAAiCH,WAAUvW,EAAMmN,cAAgBnN,EAAMuN,aAAe,GAG/FsI,GAAgB,OAhChB7V,EAAM2W,YAAcZ,EAAMpE,YACzBoE,EAA4B7d,MAAQ,GAuC7C,OAAOG,OAAO2G,KAAKgB,IAGR,EAAAoW,SAAf,SAAwBzS,GACpB,YADoB,IAAAA,MAAA,MACb,UAAM,IAAI,UAAS,CACtBnD,MAAOmD,EAAQA,EAAMnD,MAAQ,GAC7BC,aAAYkD,GAAQA,EAAMlI,YAInB,EAAA6a,UAAf,SAAyB1S,EAA2BD,GAChD,QADgD,IAAAA,MAAA,QAC1CC,aAAkBsS,mBAAoB,MAAM,IAAIrZ,UAAU,2CAEhE,IAAM+Z,EAAkC,OAAVjT,GAAkBA,EAAMlI,SAEtD,OAAO,UAAM,IAAI,UAAU,CACvB+E,MAAOoD,EAAO+N,YACdzZ,MAAO0L,EAAO1L,MACduI,WAAYmD,EAAOnI,UAAYmb,KAG3C,EA9EA,GAgFA,UAAeT,G,8ECzFf,WAEA,QAEA,QACA,QACA,QACA,QAEA,aAsBI,WAAYU,EAAsB1d,QAAtB,IAAA0d,MAAA,WAAsB,IAAA1d,MAAA,IAAa,WArBxC,KAAAqW,OAAwC,GACxC,KAAA3K,cAAyC,EACzC,KAAAsI,eAAyC,EACzC,KAAA5T,yBAAyC,EACzC,KAAAK,eAAyC,EACzC,KAAAmX,KAAwC,GACxC,KAAA4F,YAAwC,GACxC,KAAA5B,aAAwC,UAAaC,OACrD,KAAAM,WAAwC,UAAWG,OACnD,KAAAhV,YAAwC,EACxC,KAAAsD,YAAwC,EACxC,KAAAkL,WAAwC,EACxC,KAAAC,WAAwC,EACxC,KAAAhE,iBAAwC,EACxC,KAAAzR,cAAwC,EACxC,KAAAqT,kBAAwC,EACxC,KAAAG,aAAwC,EACxC,KAAAnC,UAAwC,EAK3C7L,KAAK9F,OAASA,EAET0d,IAEL,UAAM5X,KAAM4X,GAEZ5X,KAAKuQ,OAASvQ,KAAKuQ,OAAO3F,KAAI,SAACiN,GAC3B,IAAMnT,EAAQ,UAAM,IAAI,UAASmT,GAIjC,OAFAnT,EAAMxH,QAAUwH,EAAMxH,QAAQ0N,KAAI,SAAAkN,GAAa,iBAAM,IAAI,UAAUA,MAE5DpT,MA0HnB,OAtHI,sBAAW,0BAAW,C,IAAtB,WACI,OAAO1E,KAAKuQ,OAAO7V,Q,gCAGvB,sBAAW,wBAAS,C,IAApB,WACI,OAAOsF,KAAKuQ,OAAOvQ,KAAKuQ,OAAO7V,OAAS,I,gCAG5C,sBAAW,2BAAY,C,IAAvB,WACI,OAAOsF,KAAKuQ,OAAOtV,QAAO,SAAC8c,EAAerT,GAAiB,OAAAqT,EAAQrT,EAAM4J,eAAc,I,gCAG3F,sBAAW,6BAAc,C,IAAzB,WACI,OAAOtO,KAAK2F,mBAAmB3F,KAAKkO,gB,gCAGxC,sBAAW,4BAAa,C,IAAxB,WACI,OAAOlO,KAAK2F,mBAAmB3F,KAAK4F,e,gCAGxC,sBAAW,oBAAK,C,IAAhB,WACI,OAAO5F,KAAK4Q,eAAiB5Q,KAAK4Q,eAAe3X,MAAQ,I,gCAG7D,sBAAW,iCAAkB,C,IAA7B,WACI,OACM+G,KAAK+E,UAAY/E,KAAKgY,gBAEpBhY,KAAK9F,OAAOK,SAAS8N,yBACrBrI,KAAKgY,gBACLhY,KAAKgB,OAGFhB,KAAK0X,YAGT1X,KAAKuB,O,gCAGhB,sBAAW,oBAAK,C,IAAhB,WACI,OAAOvB,KAAK4Q,eAAiB5Q,KAAK4Q,eAAerP,MAAQ,I,gCAG7D,sBAAW,6BAAc,C,IAAzB,WACI,MAA4B,KAArBvB,KAAK0X,a,gCAGhB,sBAAW,iCAAkB,C,IAA7B,WACI,OAAO1X,KAAKgY,iBAAmBhY,KAAK+E,U,gCAGxC,sBAAW,uBAAQ,C,IAAnB,WACI,MAAsB,KAAf/E,KAAK/G,O,gCAGhB,sBAAW,wBAAS,C,IAApB,WACI,OAAOgf,QAAQjY,KAAKuQ,OAAO2H,MAAK,SAAAxT,GAAS,OAAAA,EAAM+L,c,gCAGnD,sBAAW,qBAAM,C,IAAjB,WACI,OAAOzQ,KAAKqW,aAAe,UAAWG,Q,gCAG1C,sBAAW,uBAAQ,C,IAAnB,WACI,OAAOxW,KAAKqW,aAAe,UAAWG,Q,gCAG1C,sBAAW,0BAAW,C,IAAtB,WACI,OAAOxW,KAAKqW,aAAe,UAAWE,Y,gCAG1C,sBAAW,0BAAW,C,IAAtB,WACI,OAAOvW,KAAKqW,aAAe,UAAWC,Y,gCAG1C,sBAAW,sBAAO,C,IAAlB,WACI,OAAOtW,KAAK8V,eAAiB,UAAaC,Q,gCAG9C,sBAAW,yBAAU,C,IAArB,WACI,OAAO/V,KAAK8V,eAAiB,UAAaE,W,gCAGvC,YAAArQ,mBAAP,SAA0B2N,GAGtB,IAFA,IAAI6E,EAAkB,EAEF,MAAAnY,KAAKuQ,OAAL,eAAa,CAA5B,IAAM7L,EAAK,KACZ,GAAI4O,EAAQ,EAAI,MAIhB,GAAIA,GAFkBvM,KAAK8F,IAAI,EAAGsL,EAAkBzT,EAAM4J,aAAe,GAKrE,OAFe5J,EAAMxH,QAAQoW,EAAQ6E,GAKzCA,GAAmBzT,EAAM4J,aAG7B,OAAO,MAGJ,YAAA4F,wBAAP,SAA+Bjb,GAG3B,IAFA,IAAIqa,GAAiB,EAED,MAAAtT,KAAKuQ,OAAL,eAChB,IADC,IACoB,MADT,KACerT,QAAN,eAAe,CAGhC,GAFAoW,IADa,KAGFra,QAAUA,EACjB,OAAOqa,EAKnB,OAAQ,GAEhB,EA5JA,GA8JA,UAAe8E,G,8ECvKf,+BASA,OAHW,YAAAnT,MAAP,sBACI7L,OAAO+F,KAAKa,MAAMZ,SAAQ,SAAAlG,GAAO,OAAAL,OAAOwf,cAAc,EAAKnf,QAEnE,EATA,GAWA,UAAeof,G,8ECTf,MA+CI,SAAYC,GACRvY,KAAKnF,KAAO0d,EAAe1d,KAAK1B,KAAKof,GACrCvY,KAAKiB,MAAQsX,EAAetX,MAAM9H,KAAKof,GACvCvY,KAAKuE,QAAUgU,EAAehU,QAAQpL,KAAKof,GAC3CvY,KAAK0D,QAAU6U,EAAe7U,QAAQvK,KAAKof,GAC3CvY,KAAK6E,SAAW0T,EAAe1T,SAAS1L,KAAKof,GAE7Cnf,OAAOof,iBAAiBxY,KAAM,CAC1B/G,MAAO,CACHF,IAAK,WAAM,OAAAwf,EAAetf,OAC1BwF,IAAK,SAAC+F,GAAsB,OAAA+T,EAAetf,MAAQuL,OAMnE,UAAeiU","file":"easydropdown.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"easydropdown\"] = factory();\n\telse\n\t\troot[\"easydropdown\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge_1 = require(\"./merge\");\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nexports.ArrayStrategy = ArrayStrategy_1.default;\nexports.default = merge_1.default;\n//# sourceMappingURL=index.js.map","import Config   from '../../Config/Config';\nimport Dom      from '../../Renderer/Dom';\nimport IActions from '../../State/Interfaces/IActions';\n\nimport detectBodyCollision from './detectBodyCollision';\nimport IDispatchOpen       from './Interfaces/IDispatchOpen';\n\nfunction dispatchOpen(\n    injectedDetectBodyCollision: typeof detectBodyCollision,\n    actions: IActions,\n    config: Config,\n    dom: Dom\n): void {\n    const collisionData = injectedDetectBodyCollision(dom, config);\n\n    const maxVisibleItems = collisionData.maxVisibleItemsOverride > -1 ?\n        collisionData.maxVisibleItemsOverride : config.behavior.maxVisibleItems;\n\n    const isScrollable = dom.item.length > maxVisibleItems;\n    const maxBodyHeight =  dom.sumItemsHeight(maxVisibleItems);\n\n    actions.open(maxBodyHeight, collisionData.type, isScrollable);\n}\n\nconst boundDispatchOpen: IDispatchOpen = dispatchOpen.bind(null, detectBodyCollision);\n\nexport {\n    boundDispatchOpen as default,\n    dispatchOpen\n};","function composeClassName(tokens: Array<string|[boolean, string]>): string {\n    return tokens\n        .reduce((classNames, token) => {\n            if (typeof token === 'string') classNames.push(token);\n            else {\n                const [predicate, className] = token;\n\n                if (predicate) classNames.push(className);\n            }\n\n            return classNames;\n        }, [])\n        .join(' ');\n}\n\nexport default composeClassName;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayStrategy;\n(function (ArrayStrategy) {\n    ArrayStrategy[\"PUSH\"] = \"PUSH\";\n    ArrayStrategy[\"REPLACE\"] = \"REPLACE\";\n})(ArrayStrategy || (ArrayStrategy = {}));\nexports.default = ArrayStrategy;\n//# sourceMappingURL=ArrayStrategy.js.map","/**\n * Returns the closest parent of a given element matching the\n * provided selector, optionally including the element itself.\n */\n\nfunction closestParent(\n    el: HTMLElement,\n    selector: string,\n    includeSelf: boolean = false\n): HTMLElement {\n    let parent = el.parentNode as HTMLElement;\n\n    if (includeSelf && el.matches(selector)) {\n        return el;\n    }\n\n    while (parent && parent !== document.body) {\n        if (parent.matches && parent.matches(selector)) {\n            return parent;\n        } else if (parent.parentNode) {\n            parent = parent.parentNode as HTMLElement;\n        } else {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nexport default closestParent;","export const OPTION = '[data-ref~=\"option\"]';","import IHandlerParams from '../../Events/Interfaces/IHandlerParams';\n\nconst killSelectReaction = (select: HTMLSelectElement, {actions, timers}: IHandlerParams): void => {\n    const keyingResetDuration = 100;\n\n    window.clearTimeout(timers.keyingTimeoutId);\n\n    actions.keying();\n\n    timers.keyingTimeoutId = window.setTimeout(() => actions.resetKeying(), keyingResetDuration);\n\n    select.disabled = true;\n\n    setTimeout(() => {\n        select.disabled = false;\n        select.focus();\n    });\n};\n\nexport default killSelectReaction;","import Easydropdown from './Easydropdown';\n\nconst cache: Easydropdown[] = [];\n\nexport default cache;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Config_1 = require(\"./Config\");\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nvar deriveCustomTypeInstance_1 = require(\"./deriveCustomTypeInstance\");\nvar FluentMerge_1 = require(\"./FluentMerge\");\nvar handleMergeError_1 = require(\"./handleMergeError\");\nvar Messages = require(\"./Messages\");\nfunction merge(target, source, options) {\n    if (options === void 0) { options = null; }\n    var isClientSide = typeof window !== 'undefined';\n    var sourceKeys = [];\n    var config;\n    if (options instanceof Config_1.default) {\n        config = options;\n    }\n    else {\n        config = new Config_1.default();\n    }\n    if (typeof options === 'boolean' && options === true) {\n        config.deep = true;\n    }\n    else if (options && config !== options && typeof options === 'object') {\n        merge(config, options);\n        if ([ArrayStrategy_1.default.PUSH, ArrayStrategy_1.default.REPLACE].indexOf(config.arrayStrategy) < 0) {\n            throw RangeError(Messages.INVALID_ARRAY_STRATEGY(config.arrayStrategy));\n        }\n    }\n    if (!target || typeof target !== 'object') {\n        throw new TypeError(Messages.TYPE_ERROR_TARGET(target));\n    }\n    if (!source || typeof source !== 'object') {\n        throw new TypeError(Messages.TYPE_ERROR_SOURCE(source));\n    }\n    if (Array.isArray(source)) {\n        if (config.arrayStrategy === ArrayStrategy_1.default.PUSH) {\n            // Merge arrays via push()\n            target.push.apply(target, source);\n            return target;\n        }\n        for (var i = 0; i < source.length; i++) {\n            sourceKeys.push(i.toString());\n        }\n    }\n    else {\n        sourceKeys = Object.getOwnPropertyNames(source);\n    }\n    for (var _i = 0, sourceKeys_1 = sourceKeys; _i < sourceKeys_1.length; _i++) {\n        var key = sourceKeys_1[_i];\n        var descriptor = Object.getOwnPropertyDescriptor(source, key);\n        // Skip read-only properties\n        if (typeof descriptor.get === 'function' && !descriptor.set && !config.includeReadOnly)\n            continue;\n        // Skip non-enumerable properties\n        if (!descriptor.enumerable && !config.includeNonEmurable)\n            continue;\n        if (!config.deep ||\n            typeof source[key] !== 'object' ||\n            (isClientSide && source[key] instanceof window.Node) ||\n            (isClientSide && source[key] === window.document.body) ||\n            (isClientSide && source[key] === window.document.documentElement) ||\n            source[key] === null ||\n            (Array.isArray(source[key]) && config.useReferenceIfArray) ||\n            (!target[key] && config.useReferenceIfTargetUnset)) {\n            // If:\n            // - Shallow merge\n            // - All non-object primatives\n            // - <html>, <body>, or DOM Nodes\n            // - Null pointers\n            // - Arrays, if `useReferenceIfArray` set\n            // - Target prop null or undefined and `useRererenceIfTargetUnset` set\n            try {\n                target[key] = source[key];\n            }\n            catch (err) {\n                handleMergeError_1.default(err, target, key, config.errorMessage);\n            }\n        }\n        else {\n            // Deep merge objects/arrays\n            if (!Object.prototype.hasOwnProperty.call(target, key) || target[key] === null) {\n                // If property does not exist on target, instantiate an empty\n                // object, custom type or array to merge into\n                try {\n                    target[key] = Array.isArray(source[key]) ?\n                        [] : config.preserveTypeIfTargetUnset ?\n                        deriveCustomTypeInstance_1.default(source[key]) : {};\n                }\n                catch (err) {\n                    handleMergeError_1.default(err, target, key, config.errorMessage);\n                }\n            }\n            // Recursively deep copy objects or arrays\n            merge(target[key], source[key], config);\n        }\n    }\n    return target;\n}\nvar createFluent = function (method) { return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return (_a = new FluentMerge_1.default())[method].apply(_a, args);\n    var _a;\n}; };\nObject\n    .keys(FluentMerge_1.default.prototype)\n    .forEach(function (method) { return merge[method] = createFluent(method); });\nexports.default = merge;\n//# sourceMappingURL=merge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MERGE_ERROR = function (offender, suggestion) {\n    if (suggestion === void 0) { suggestion = ''; }\n    return \"Unknown property \\\"\" + offender + \"\\\"\" + (suggestion ? \". Did you mean \\\"\" + suggestion + \"\\\"?\" : '');\n};\nexports.TYPE_ERROR_TARGET = function (target) {\n    return \"[Helpful Merge] Target \\\"\" + target + \"\\\" must be a valid object\";\n};\nexports.TYPE_ERROR_SOURCE = function (source) {\n    return \"[Helpful Merge] Source \\\"\" + source + \"\\\" must be a valid object\";\n};\nexports.INVALID_ARRAY_STRATEGY = function (strategy) {\n    return \"[Helpful Merge] Invalid array strategy \\\"\" + strategy + \"\\\"\";\n};\n//# sourceMappingURL=Messages.js.map","import Behavior   from './Behavior';\nimport Callbacks  from './Callbacks';\nimport ClassNames from './ClassNames';\nimport IConfig    from './Interfaces/IConfig';\n\nclass Config implements IConfig {\n    public callbacks = new Callbacks();\n    public classNames = new ClassNames();\n    public behavior = new Behavior();\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default Config;","enum CollisionType {\n    NONE   = 'NONE',\n    TOP    = 'TOP',\n    BOTTOM = 'BOTTOM'\n}\n\nexport default CollisionType;","function getIsMobilePlatform(userAgent: string): boolean {\n    const isIos = /(ipad|iphone|ipod)/gi.test(userAgent);\n    const isAndroid = /android/gi.test(userAgent);\n    const isOperaMini = /opera mini/gi.test(userAgent);\n    const isWindowsPhone = /windows phone/gi.test(userAgent);\n\n    if (isIos || isAndroid || isOperaMini || isWindowsPhone) {\n        return true;\n    }\n\n    return false;\n}\n\nexport default getIsMobilePlatform;","export const UP    = 38;\nexport const DOWN  = 40;\nexport const SPACE = 32;\nexport const ENTER = 13;\nexport const ESC   = 27;","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleWindowClick(_, {state, actions, dom}: IHandlerParams): void {\n    if (!state.isOpen) return;\n\n    actions.close();\n\n    dom.select.blur();\n}\n\nexport default handleWindowClick;","enum AttributeChangeType {\n    ADD = 'ADD',\n    EDIT = 'EDIT',\n    REMOVE = 'REMOVE'\n}\n\nexport default AttributeChangeType;","export enum DomChangeType {\n    NONE    = 'NONE',\n    FULL    = 'FULL',\n    REPLACE = 'REPLACE',\n    INNER   = 'INNER',\n    OUTER   = 'OUTER'\n}\n\nexport default DomChangeType;","enum BodyStatus {\n    CLOSED     = 'CLOSED',\n    OPEN_ABOVE = 'OPEN_ABOVE',\n    OPEN_BELOW = 'OPEN_BELOW'\n}\n\nexport default BodyStatus;","enum ScrollStatus {\n    AT_TOP    = 'AT_TOP',\n    SCROLLED  = 'SCROLLED',\n    AT_BOTTOM = 'AT_BOTTOM'\n}\n\nexport default ScrollStatus;","import Option from './Option';\n\nclass Group {\n    public label:      string   = '';\n    public options:    Option[] = [];\n    public isDisabled: boolean  = false;\n\n    public get totalOptions(): number {\n        return this.options.length;\n    }\n\n    public get hasLabel(): boolean {\n        return this.label !== '';\n    }\n}\n\nexport default Group;","class Option {\n    public label:      string  = '';\n    public value:      string  = '';\n    public isDisabled: boolean = false;\n}\n\nexport default Option;","import 'custom-event-polyfill';\n\nimport './Shared/Polyfills/Element.matches';\n\nimport factory from './Easydropdown/factory';\n\nmodule.exports = factory;","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\n(function() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  try {\n    var ce = new window.CustomEvent('test', { cancelable: true });\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n      // IE has problems with .preventDefault() on custom events\n      // http://stackoverflow.com/questions/23349191\n      throw new Error('Could not prevent default');\n    }\n  } catch (e) {\n    var CustomEvent = function(event, params) {\n      var evt, origPrevent;\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: undefined\n      };\n\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(\n        event,\n        params.bubbles,\n        params.cancelable,\n        params.detail\n      );\n      origPrevent = evt.preventDefault;\n      evt.preventDefault = function() {\n        origPrevent.call(this);\n        try {\n          Object.defineProperty(this, 'defaultPrevented', {\n            get: function() {\n              return true;\n            }\n          });\n        } catch (e) {\n          this.defaultPrevented = true;\n        }\n      };\n      return evt;\n    };\n\n    CustomEvent.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent; // expose definition to window\n  }\n})();\n","if (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}","import IConfig from '../Config/Interfaces/IConfig';\n\nimport cache              from './cache';\nimport Easydropdown       from './Easydropdown';\nimport EasydropdownFacade from './EasydropdownFacade';\nimport IFactory           from './Interfaces/IFactory';\n\nfunction factory(\n    selectElementOrSelector: (HTMLSelectElement|string),\n    options: IConfig = {}\n): EasydropdownFacade {\n    let selectElement = selectElementOrSelector;\n\n    if (typeof selectElementOrSelector === 'string') {\n        selectElement = document.querySelector(selectElementOrSelector) as HTMLSelectElement;\n    }\n\n    if (!(selectElement instanceof HTMLSelectElement)) {\n        throw new TypeError('[EasyDropDown] Invalid select element provided');\n    }\n\n    if (selectElement.multiple) {\n        throw new Error(\n            '[EasyDropDown] EasyDropDown does not support the `multiple`' +\n            ' attribute on select elements.'\n        );\n    }\n\n    for (const cachedInstance of cache) {\n        if (cachedInstance.selectElement === selectElement) {\n            return new EasydropdownFacade(cachedInstance);\n        }\n    }\n\n    const instance = new Easydropdown(selectElement, options);\n\n    // @ts-ignore\n\n    cache.push(instance);\n\n    return new EasydropdownFacade(instance);\n}\n\nfunction decorateFactory(factoryFn: any): IFactory {\n    factoryFn.all = (options: IConfig = {}) => {\n        const selects = document.querySelectorAll('select');\n\n        Array.prototype.forEach.call(selects, select => {\n            const instance = factory(select, options);\n\n            return instance;\n        });\n    };\n\n    factoryFn.destroy = () => {\n        const cacheCopy = cache.slice();\n\n        cacheCopy.forEach(instance => instance.destroy());\n    };\n\n    return factoryFn;\n}\n\nconst decoratedFactory = decorateFactory(factory);\n\nexport default decoratedFactory;","import merge from 'helpful-merge';\n\nimport Config                 from '../Config/Config';\nimport ICallback              from '../Config/Interfaces/ICallback';\nimport IConfig                from '../Config/Interfaces/IConfig';\nimport bindEvents             from '../Events/bindEvents';\nimport EventBinding           from '../Events/EventBinding';\nimport Dom                    from '../Renderer/Dom';\nimport Renderer               from '../Renderer/Renderer';\nimport dispatchOpen           from '../Shared/Util/dispatchOpen';\nimport pollForSelectChange    from '../Shared/Util/pollForSelectChange';\nimport pollForSelectMutation  from '../Shared/Util/pollForSelectMutation';\nimport closeOthers            from '../State/InjectedActions/closeOthers';\nimport scrollToView           from '../State/InjectedActions/scrollToView';\nimport IActions               from '../State/Interfaces/IActions';\nimport State                  from '../State/State';\nimport StateManager           from '../State/StateManager';\nimport StateMapper            from '../State/StateMapper';\n\nimport cache  from './cache';\nimport Timers from './Timers';\n\nclass Easydropdown {\n    public actions: IActions;\n\n    private config: Config;\n    private state: State;\n    private dom: Dom;\n    private eventBindings: EventBinding[];\n    private renderer: Renderer;\n    private timers: Timers;\n\n    constructor(selectElement: HTMLSelectElement, options: IConfig) {\n        this.config = merge(new Config(), options, true);\n        this.state = StateMapper.mapFromSelect(selectElement, this.config);\n        this.renderer = new Renderer(this.config.classNames);\n        this.dom = this.renderer.render(this.state, selectElement);\n        this.timers = new Timers();\n\n        this.actions = StateManager.proxyActions(this.state, {\n            closeOthers: closeOthers.bind(null, this, cache),\n            scrollToView: scrollToView.bind(null, this.dom, this.timers)\n        }, this.handleStateUpdate.bind(this));\n\n        this.eventBindings = bindEvents({\n            actions: this.actions,\n            config: this.config,\n            dom: this.dom,\n            state: this.state,\n            timers: this.timers\n        });\n\n        this.timers.pollChangeIntervalId = pollForSelectChange(this.dom.select, this.state, this.actions, this.config);\n\n        if (this.config.behavior.liveUpdates) {\n            this.timers.pollMutationIntervalId = pollForSelectMutation(\n                this.dom.select,\n                this.state,\n                this.refresh.bind(this)\n            );\n        }\n    }\n\n    public get selectElement(): HTMLSelectElement {\n        return this.dom.select;\n    }\n\n    public get value(): string {\n        return this.state.value;\n    }\n\n    public set value(nextValue: string) {\n        if (typeof nextValue !== 'string') {\n            throw new TypeError('[EasyDropDown] Provided value not a valid string');\n        }\n\n        this.dom.select.value = nextValue;\n    }\n\n    public open(): void {\n        dispatchOpen(this.actions, this.config, this.dom);\n    }\n\n    public close(): void {\n        this.actions.close();\n    }\n\n    public refresh(): void {\n        this.state = merge(\n            this.state,\n            StateMapper.mapFromSelect(this.dom.select, this.config)\n        );\n\n        this.renderer.update(this.state);\n\n        this.dom.group.length = this.dom.option.length = this.dom.item.length = 0;\n\n        Renderer.queryDomRefs(this.dom, ['group', 'option', 'item']);\n    }\n\n    public validate(): boolean {\n        if (!this.state.isRequired || this.state.hasValue) {\n            return true;\n        }\n\n        this.actions.invalidate();\n\n        return false;\n    }\n\n    public destroy(): void {\n        this.timers.clear();\n        this.eventBindings.forEach(binding => binding.unbind());\n        this.renderer.destroy();\n\n        const cacheIndex = cache.indexOf(this);\n\n        cache.splice(cacheIndex, 1);\n    }\n\n    private handleStateUpdate(state: State, key: keyof State): void {\n        const {callbacks} = this.config;\n\n        this.renderer.update(state, key);\n\n        switch (key) {\n            case 'bodyStatus': {\n                let cb: ICallback;\n\n                if (state.isOpen) {\n                    cb = callbacks.onOpen;\n                } else {\n                    cb = callbacks.onClose;\n                }\n\n                if (typeof cb === 'function') cb();\n\n                break;\n            }\n            case 'selectedIndex': {\n                const cb = callbacks.onSelect;\n\n                if (typeof cb === 'function') cb(state.value);\n\n                break;\n            }\n            case 'isClickSelecting': {\n                const cb = callbacks.onOptionClick;\n\n                if (state[key] === false) {\n                    const nextValue = state.getOptionFromIndex(state.focusedIndex).value;\n\n                    if (typeof cb === 'function') cb(nextValue);\n                }\n            }\n        }\n    }\n}\n\nexport default Easydropdown;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nvar Messages = require(\"./Messages\");\nvar Config = /** @class */ (function () {\n    function Config() {\n        this.deep = false;\n        this.useReferenceIfTargetUnset = false;\n        this.useReferenceIfArray = false;\n        this.preserveTypeIfTargetUnset = false;\n        this.includeReadOnly = false;\n        this.includeNonEmurable = false;\n        this.arrayStrategy = ArrayStrategy_1.default.REPLACE;\n        this.errorMessage = Messages.MERGE_ERROR;\n        Object.seal(this);\n    }\n    return Config;\n}());\nexports.default = Config;\n//# sourceMappingURL=Config.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction deriveCustoTypeInstance(_a) {\n    var constructor = _a.constructor;\n    if (typeof constructor === 'function' && constructor !== Object) {\n        return new constructor();\n    }\n    return {};\n}\nexports.default = deriveCustoTypeInstance;\n//# sourceMappingURL=deriveCustomTypeInstance.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge_1 = require(\"./merge\");\nvar FluentMerge = /** @class */ (function () {\n    function FluentMerge() {\n        this.target = null;\n        this.sources = [];\n        this.config = {};\n    }\n    /**\n     * Supplies a fluent merge instance with a target object to merge into and return.\n     */\n    FluentMerge.prototype.to = function (target) {\n        this.target = target;\n        return this;\n    };\n    /**\n     * Supplies a fluent merge instance with one or more source objects to merge from, in right to left order.\n     */\n    FluentMerge.prototype.from = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i] = arguments[_i];\n        }\n        this.sources = sources;\n        return this;\n    };\n    /**\n     * Supplies a fluent merge instance with a configuration object of one or more options.\n     */\n    FluentMerge.prototype.with = function (options) {\n        this.config = options;\n        return this;\n    };\n    /**\n     * Executes a fluent merge instance, merging all provided sources into the\n     * target, as per any provided configuration, and returning a reference to\n     * the target.\n     */\n    FluentMerge.prototype.exec = function () {\n        var _this = this;\n        return this.sources.reduce(function (target, source) { return merge_1.default(target, source, _this.config); }, this.target || {});\n    };\n    return FluentMerge;\n}());\nexports.default = FluentMerge;\n//# sourceMappingURL=FluentMerge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction handleMergeError(err, target, offendingKey, message) {\n    // Rethrow if any of the following:\n    // - offending key already exists on target\n    // - object not sealed\n    // - is extensible\n    // - error not a TypeError\n    if (Object.hasOwnProperty.call(target, offendingKey) ||\n        !Object.isSealed(target) ||\n        Object.isExtensible(target) ||\n        !(err instanceof TypeError))\n        throw err;\n    var reducer = reduceBestMatch.bind(null, offendingKey, offendingKey.toLowerCase());\n    var primer = { key: '', delta: Infinity, totalMatching: 0 };\n    // Iterate through keys in target, for each key, compare with\n    // the offending key. Greatest number of matching characters wins.\n    var bestMatch = Object.keys(target).reduce(reducer, primer);\n    var suggestion = bestMatch && bestMatch.totalMatching > 1 ? bestMatch.key : '';\n    throw new TypeError(message(offendingKey, suggestion));\n}\n/**\n * Compares current key with current best match.\n */\nfunction reduceBestMatch(offendingKeyLower, offendingKey, currBestMatch, currKey) {\n    var totalMatching = getTotalMatching(currKey.toLowerCase(), offendingKeyLower);\n    var delta = Math.abs(currKey.length - offendingKey.length);\n    if (totalMatching > currBestMatch.totalMatching ||\n        (totalMatching === currBestMatch.totalMatching && delta < currBestMatch.delta)) {\n        // If a greater number of matching characters, or the same\n        // number, but a lesser delta, usurp the best match\n        return { key: currKey, delta: delta, totalMatching: totalMatching };\n    }\n    return currBestMatch;\n}\n/**\n * Returns the number of common, consecutive characters\n * between two strings.\n */\nfunction getTotalMatching(possibleKey, offendingKey) {\n    var longer = possibleKey.length > offendingKey.length ? possibleKey : offendingKey;\n    var shorter = longer === possibleKey ? offendingKey : possibleKey;\n    var leftPointer = 0;\n    var leftInnerPointer = 0;\n    var leftTotalMatching = 0;\n    var lastCommonIndex = -1;\n    for (; leftPointer < longer.length; leftPointer++) {\n        while (leftTotalMatching === 0 &&\n            longer[leftPointer] !== shorter[leftInnerPointer] &&\n            leftInnerPointer < shorter.length) {\n            // No match at present, move innerPointer through all possible\n            // indices until a match is found\n            leftInnerPointer++;\n        }\n        if (longer[leftPointer] === shorter[leftInnerPointer]) {\n            // Match found\n            if (lastCommonIndex !== leftPointer - 1) {\n                // If beginning of a new match, reset total common\n                leftTotalMatching = 0;\n            }\n            lastCommonIndex = leftPointer;\n            leftTotalMatching++;\n            leftInnerPointer++;\n            // Whole word matched, end\n            if (leftTotalMatching === shorter.length)\n                break;\n        }\n        else if (leftTotalMatching > 1) {\n            // No match, but at least two common characters found, end\n            break;\n        }\n        else {\n            // No match at this index, reset\n            leftTotalMatching = leftInnerPointer = 0;\n        }\n    }\n    lastCommonIndex = -1;\n    var rightPointer = 0;\n    var rightInnerPointer = 0;\n    var rightTotalMatching = 0;\n    var longerLastIndex = longer.length - 1;\n    var shorterLastIndex = shorter.length - 1;\n    // As above, but from right to left\n    for (; rightPointer < longer.length - leftPointer; rightPointer++) {\n        while (rightTotalMatching === 0 &&\n            longer[longerLastIndex - rightPointer] !== shorter[shorterLastIndex - rightInnerPointer] &&\n            rightInnerPointer < shorter.length) {\n            rightInnerPointer++;\n        }\n        if (longer[longerLastIndex - rightPointer] === shorter[shorterLastIndex - rightInnerPointer]) {\n            if (lastCommonIndex !== rightPointer - 1)\n                rightTotalMatching = 0;\n            lastCommonIndex = rightPointer;\n            rightTotalMatching++;\n            rightInnerPointer++;\n        }\n        else if (rightTotalMatching > 1) {\n            break;\n        }\n        else {\n            rightTotalMatching = rightInnerPointer = 0;\n        }\n    }\n    return Math.min(shorter.length, leftTotalMatching + rightTotalMatching);\n}\nexports.getTotalMatching = getTotalMatching;\nexports.default = handleMergeError;\n//# sourceMappingURL=handleMergeError.js.map","import IBehavior from './Interfaces/IBehavior';\n\nclass Behavior implements IBehavior {\n    public showPlaceholderWhenOpen: boolean = false;\n    public openOnFocus:             boolean = false;\n    public closeOnSelect:           boolean = true;\n    public useNativeUiOnMobile:     boolean = true;\n    public loop:                    boolean = false;\n    public clampMaxVisibleItems:    boolean = true;\n    public liveUpdates:             boolean = false;\n    public maxVisibleItems:         number  = 15;\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default Behavior;","import ICallback from './Interfaces/ICallback';\nimport ISelectCallback from './Interfaces/ISelectCallback';\n\nclass Callbacks {\n    public onOpen:        ICallback = null;\n    public onClose:       ICallback = null;\n    public onSelect:      ISelectCallback = null;\n    public onOptionClick: ISelectCallback = null;\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default Callbacks;","import IClassNames from './Interfaces/IClassNames';\n\nclass ClassNames implements IClassNames {\n    public root:           string = 'edd-root';\n    public rootOpen:       string = 'edd-root-open';\n    public rootOpenAbove:  string = 'edd-root-open-above';\n    public rootOpenBelow:  string = 'edd-root-open-below';\n    public rootDisabled:   string = 'edd-root-disabled';\n    public rootInvalid:    string = 'edd-root-invalid';\n    public rootFocused:    string = 'edd-root-focused';\n    public rootHasValue:   string = 'edd-root-has-value';\n    public rootNative:     string = 'edd-root-native';\n    public gradientTop:    string = 'edd-gradient-top';\n    public gradientBottom: string = 'edd-gradient-bottom';\n    public head:           string = 'edd-head';\n    public value:          string = 'edd-value';\n    public arrow:          string = 'edd-arrow';\n    public select:         string = 'edd-select';\n    public body:           string = 'edd-body';\n    public bodyScrollable: string = 'edd-body-scrollable';\n    public bodyAtTop:      string = 'edd-body-at-top';\n    public bodyAtBottom:   string = 'edd-body-at-bottom';\n    public itemsList:      string = 'edd-items-list';\n    public group:          string = 'edd-group';\n    public groupDisabled:  string = 'edd-group-disabled';\n    public groupHasLabel:  string = 'edd-group-has-label';\n    public groupLabel:     string = 'edd-group-label';\n    public option:         string = 'edd-option';\n    public optionDisabled: string = 'edd-option-disabled';\n    public optionFocused:  string = 'edd-option-focused';\n    public optionSelected: string = 'edd-option-selected';\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default ClassNames;","import throttle from '../Shared/Util/throttle';\n\nimport EventBinding   from './EventBinding';\nimport getEventsList  from './getEventsList';\nimport IEventBinding  from './Interfaces/IEventBinding';\nimport IHandlerParams from './Interfaces/IHandlerParams';\n\nfunction bindEvent(handlerParams: IHandlerParams, eventBindingRaw: IEventBinding): EventBinding {\n    const eventBinding = new EventBinding(eventBindingRaw);\n\n    if (!eventBinding.target) return eventBinding;\n\n    const boundHandler = (e) => eventBinding.handler(e, handlerParams);\n\n    if (eventBinding.throttle > 0) {\n        eventBinding.boundHandler = throttle(boundHandler, eventBinding.throttle);\n    } else {\n        eventBinding.boundHandler = boundHandler;\n    }\n\n    eventBinding.target.addEventListener(eventBinding.type, eventBinding.boundHandler);\n\n    return eventBinding;\n}\n\nfunction bindEvents(handlerParams: IHandlerParams): EventBinding[] {\n    return getEventsList(handlerParams.dom).map(bindEvent.bind(null, handlerParams));\n}\n\nexport {\n    bindEvents as default,\n    bindEvent\n};","function throttle(\n    handler: (...args: any[]) => void,\n    delay: number\n): (...args: any[]) => void {\n    let timerId = null;\n    let last: number = -Infinity;\n\n    return function(...args): void {\n        const now = Date.now();\n\n        const later = () => {\n            timerId = null;\n\n            handler.apply(this, args);\n\n            last = now;\n        };\n\n        const difference = now - last;\n\n        if (difference >= delay) {\n            later();\n        } else {\n            clearTimeout(timerId);\n\n            timerId = setTimeout(later, delay - difference);\n        }\n    };\n}\n\nexport default throttle;","import merge from 'helpful-merge';\n\nimport IEventBinding from './Interfaces/IEventBinding';\nimport IEventHandler from './Interfaces/IEventHandler';\n\nclass EventBinding implements IEventBinding {\n    public type:         string        = '';\n    public target:       HTMLElement   = null;\n    public debounce:     number        = 0;\n    public throttle:     number        = 0;\n    public handler:      IEventHandler = null;\n    public boundHandler: EventListener = null;\n    public passive:      boolean       = false;\n\n    constructor(eventBindingRaw: IEventBinding|string) {\n        merge(this, eventBindingRaw);\n\n        Object.seal(this);\n    }\n\n    public unbind(): void {\n        if (!this.target) return;\n\n        this.target.removeEventListener(this.type, this.boundHandler);\n    }\n}\n\nexport default EventBinding;","import Dom from '../Renderer/Dom';\n\nimport handleBodyClick       from './Handlers/handleBodyClick';\nimport handleBodyMousedown   from './Handlers/handleBodyMousedown';\nimport handleBodyMouseover   from './Handlers/handleBodyMouseover';\nimport handleHeadClick       from './Handlers/handleHeadClick';\nimport handleItemsListScroll from './Handlers/handleItemsListScroll';\nimport handleSelectBlur      from './Handlers/handleSelectBlur';\nimport handleSelectFocus     from './Handlers/handleSelectFocus';\nimport handleSelectInvalid   from './Handlers/handleSelectInvalid';\nimport handleSelectKeydown   from './Handlers/handleSelectKeydown';\nimport handleSelectKeypress  from './Handlers/handleSelectKeypress';\nimport handleWindowClick     from './Handlers/handleWindowClick';\nimport handleWindowResize    from './Handlers/handleWindowClick';\nimport IEventBinding         from './Interfaces/IEventBinding';\n\nconst getEventsList = (dom: Dom): IEventBinding[] => [\n    {\n        target: dom.head,\n        type: 'click',\n        handler: handleHeadClick\n    },\n    {\n        target: dom.body,\n        type: 'mousedown',\n        handler: handleBodyMousedown\n    },\n    {\n        target: dom.body,\n        type: 'click',\n        handler: handleBodyClick\n    },\n    {\n        target: dom.body,\n        type: 'mouseover',\n        handler: handleBodyMouseover\n    },\n    {\n        target: dom.itemsList,\n        type: 'scroll',\n        handler: handleItemsListScroll\n    },\n    {\n        target: dom.select,\n        type: 'keydown',\n        handler: handleSelectKeydown\n    },\n    {\n        target: dom.select,\n        type: 'invalid',\n        handler: handleSelectInvalid\n    },\n    {\n        target: dom.select,\n        type: 'keypress',\n        handler: handleSelectKeypress\n    },\n    {\n        target: dom.select,\n        type: 'focus',\n        handler: handleSelectFocus\n    },\n    {\n        target: dom.select,\n        type: 'blur',\n        handler: handleSelectBlur\n    },\n    {\n        target: document.documentElement,\n        type: 'click',\n        handler: handleWindowClick\n    },\n    {\n        target: window,\n        type: 'resize',\n        handler: handleWindowResize,\n        throttle: 100\n    }\n];\n\nexport default getEventsList;","import closestParent  from '../../Shared/Util/closestParent';\nimport * as Selectors from '../Constants/Selectors';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleBodyClick(e: Event, {state, actions, dom, config}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const option = closestParent(e.target as HTMLElement, Selectors.OPTION, true);\n\n    if (!option) return;\n\n    const optionIndex = Array.prototype.indexOf.call(dom.option, option);\n\n    actions.selectOption(optionIndex, config.behavior.closeOnSelect);\n}\n\nexport default handleBodyClick;","import closestParent  from '../../Shared/Util/closestParent';\nimport * as Selectors from '../Constants/Selectors';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleBodyMousedown(e: Event, {actions}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const option = closestParent(e.target as HTMLElement, Selectors.OPTION, true);\n\n    if (!option) return;\n\n    actions.startClickSelecting();\n}\n\nexport default handleBodyMousedown;","import closestParent  from '../../Shared/Util/closestParent';\nimport * as Selectors from '../Constants/Selectors';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleBodyMouseover(e: Event, {state, actions, dom}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const option = closestParent(e.target as HTMLElement, Selectors.OPTION, true);\n\n    if (!option || state.isKeying) return;\n\n    const optionIndex = Array.prototype.indexOf.call(dom.option, option);\n\n    actions.focusOption(optionIndex);\n}\n\nexport default handleBodyMouseover;","import dispatchOpen from '../../Shared/Util/dispatchOpen';\nimport getIsMobilePlatform from '../../Shared/Util/getIsMobilePlatform';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleHeadClick(\n    injectedGetIsMobilePlatform: (ua: string) => boolean,\n    e: MouseEvent,\n    {state, actions, dom, config}: IHandlerParams\n): void {\n    if (state.isUseNativeMode) return;\n\n    const isMobilePlatform = injectedGetIsMobilePlatform(window.navigator.userAgent);\n\n    e.stopPropagation();\n\n    if (state.isClosed) {\n        dispatchOpen(actions, config, dom);\n\n        if (isMobilePlatform) {\n            actions.focus();\n        } else {\n            dom.select.focus();\n        }\n    } else {\n        actions.close();\n    }\n}\n\nconst boundHandleHeadClick = handleHeadClick.bind(null, getIsMobilePlatform);\n\nexport {\n    boundHandleHeadClick as default,\n    handleHeadClick\n};","import Config from '../../Config/Config';\nimport Dom    from '../../Renderer/Dom';\n\nimport CollisionType  from './Constants/CollisionType';\nimport ICollisionData from './Interfaces/ICollisionData';\n\nconst CLEARSPACE = 10;\n\nfunction mapCollisionData(deltaTop, deltaBottom, maxHeight, itemHeight): ICollisionData {\n    let type = CollisionType.NONE;\n    let maxVisibleItemsOverride = -1;\n\n    if (deltaTop <= maxHeight && deltaBottom <= maxHeight) {\n        const largestDelta = Math.max(deltaBottom, deltaTop);\n\n        type = deltaTop < deltaBottom ? CollisionType.TOP : CollisionType.BOTTOM;\n        maxVisibleItemsOverride = Math.floor(largestDelta / itemHeight);\n    } else if (deltaTop <= maxHeight) {\n        type = CollisionType.TOP;\n    } else if (deltaBottom <= maxHeight) {\n        type = CollisionType.BOTTOM;\n    }\n\n    return {type, maxVisibleItemsOverride};\n}\n\nfunction detectBodyCollision(dom: Dom, config: Config): ICollisionData {\n    const bbHead = dom.head.getBoundingClientRect();\n    const wh = window.innerHeight;\n    const deltaTop = bbHead.top - CLEARSPACE;\n    const deltaBottom = wh - bbHead.bottom - CLEARSPACE;\n\n    if (dom.option.length < 1) return {\n        type: CollisionType.NONE,\n        maxVisibleItemsOverride: -1\n    };\n\n    const maxVisibleItems = Math.min(config.behavior.maxVisibleItems, dom.item.length);\n    const maxHeight = dom.sumItemsHeight(maxVisibleItems);\n    const itemHeight = dom.sumItemsHeight(1);\n\n    return mapCollisionData(deltaTop, deltaBottom, maxHeight, itemHeight);\n}\n\nexport {\n    detectBodyCollision as default,\n    mapCollisionData\n};","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleItemsListScroll(e: Event, {state, actions, dom}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const {offsetHeight, scrollHeight, scrollTop} = dom.itemsList;\n\n    if (scrollTop === 0) {\n        actions.topOut();\n    } else if (scrollTop === scrollHeight - offsetHeight) {\n        actions.bottomOut();\n    } else {\n        actions.scroll();\n    }\n}\n\nexport default handleItemsListScroll;","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleSelectBlur(e: Event, {actions, state, config}: IHandlerParams): void {\n    if (state.isKeying) return;\n\n    actions.blur();\n\n    if (config.behavior.openOnFocus && !state.isClickSelecting) actions.close();\n}\n\nexport default handleSelectBlur;","import dispatchOpen   from '../../Shared/Util/dispatchOpen';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleSelectFocus(e: Event, {actions, config, dom, state}: IHandlerParams): void {\n    actions.focus();\n\n    if (config.behavior.openOnFocus && !state.isUseNativeMode) {\n        dispatchOpen(actions, config, dom);\n    }\n}\n\nexport default handleSelectFocus;","import IHandlerParams      from '../Interfaces/IHandlerParams';\n\nfunction handleSelectInvalid(e: Event, {actions, config, dom}: IHandlerParams): void {\n    actions.invalidate();\n}\n\nexport default handleSelectInvalid;","import dispatchOpen       from '../../Shared/Util/dispatchOpen';\nimport killSelectReaction from '../../Shared/Util/killSelectReaction';\nimport * as KeyCodes      from '../Constants/KeyCodes';\nimport IHandlerParams     from '../Interfaces/IHandlerParams';\n\nimport handleSelectKeydownDown from './handleSelectKeydownDown';\nimport handleSelectKeydownUp   from './handleSelectKeydownUp';\n\nfunction handleSelectKeydown(e: KeyboardEvent, handlerParams: IHandlerParams): void {\n    const {keyCode, target} = e;\n    const {state, actions, dom, config} = handlerParams;\n\n    if (state.isUseNativeMode || state.isDisabled) return;\n\n    switch (keyCode) {\n        case KeyCodes.DOWN:\n            handleSelectKeydownDown(e, handlerParams);\n\n            break;\n        case KeyCodes.UP:\n            handleSelectKeydownUp(e, handlerParams);\n\n            break;\n        case KeyCodes.SPACE:\n            if (state.isSearching) {\n                e.stopPropagation();\n\n                return;\n            }\n\n        case KeyCodes.ENTER:\n            e.stopPropagation();\n            e.preventDefault();\n\n            killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n            if (state.isOpen) {\n                actions.selectOption(state.focusedIndex, config.behavior.closeOnSelect);\n            } else {\n                dispatchOpen(actions, config, dom);\n            }\n\n            break;\n        case KeyCodes.ESC:\n            actions.close();\n\n            break;\n    }\n}\n\nexport default handleSelectKeydown;","import dispatchOpen       from '../../Shared/Util/dispatchOpen';\nimport killSelectReaction from '../../Shared/Util/killSelectReaction';\nimport IHandlerParams     from '../Interfaces/IHandlerParams';\n\nfunction handleSelectKeydownDown(\n    e: KeyboardEvent,\n    handlerParams: IHandlerParams\n): void {\n    const {metaKey, target} = e;\n    const {state, dom, actions, config} = handlerParams;\n\n    let focusedIndex: number = state.focusedIndex > -1 ?\n    state.focusedIndex : state.selectedIndex;\n\n    let iterations: number = 0;\n    let incrementAmount: number = 1;\n\n    e.preventDefault();\n\n    killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n    if (metaKey) {\n        incrementAmount = Math.round(\n            Math.max(state.totalOptions / 2, config.behavior.maxVisibleItems)\n        );\n    }\n\n    do {\n        focusedIndex += incrementAmount;\n\n        incrementAmount = 1;\n\n        if (focusedIndex >= state.totalOptions) {\n            focusedIndex = config.behavior.loop ? 0 : state.totalOptions - 1;\n        }\n\n        actions.focusOption(focusedIndex, true);\n\n        iterations++;\n    }\n    while (\n        state.focusedOption &&\n        state.focusedOption.isDisabled &&\n        iterations <= state.totalOptions\n    );\n\n    if (state.isClosed) {\n        dispatchOpen(actions, config, dom);\n\n        return;\n    }\n}\n\nexport default handleSelectKeydownDown;","import dispatchOpen       from '../../Shared/Util/dispatchOpen';\nimport killSelectReaction from '../../Shared/Util/killSelectReaction';\nimport IHandlerParams     from '../Interfaces/IHandlerParams';\n\nfunction handleSelectKeydownUp(\n    e: KeyboardEvent,\n    handlerParams: IHandlerParams\n): void {\n    const {metaKey, target} = e;\n    const {state, config, dom, actions} = handlerParams;\n\n    let focusedIndex = state.focusedIndex > -1 ?\n        state.focusedIndex : state.selectedIndex;\n\n    let iterations = 0;\n    let incrementAmount: number = 1;\n\n    e.preventDefault();\n\n    killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n    if (metaKey) {\n        incrementAmount = Math.round(\n            Math.max(state.totalOptions / 2, config.behavior.maxVisibleItems)\n        );\n    }\n\n    do {\n        focusedIndex -= incrementAmount;\n\n        incrementAmount = 1;\n\n        if (focusedIndex < 0) {\n            focusedIndex = config.behavior.loop ? state.totalOptions - 1 : 0;\n        }\n\n        actions.focusOption(focusedIndex, true);\n\n        iterations++;\n    }\n    while (\n        state.focusedOption &&\n        state.focusedOption.isDisabled &&\n        iterations < state.totalOptions\n    );\n\n    if (state.isClosed) {\n        dispatchOpen(actions, config, dom);\n    }\n}\n\nexport default handleSelectKeydownUp;","import * as KeyCodes  from '../Constants/KeyCodes';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nconst SEARCH_RESET_DURATION = 1200;\n\nfunction handleSelectKeypress(\n    {keyCode}: KeyboardEvent,\n    {actions, timers, state}: IHandlerParams,\n    searchResetDuration = SEARCH_RESET_DURATION\n): void {\n    if (state.isUseNativeMode || [KeyCodes.UP, KeyCodes.DOWN].includes(keyCode)) return;\n\n    window.clearTimeout(timers.searchTimeoutId);\n\n    actions.search();\n\n    timers.searchTimeoutId = window.setTimeout(() => actions.resetSearch(), searchResetDuration);\n}\n\nexport default handleSelectKeypress;","import root                     from '../Components/root';\nimport ClassNames               from '../Config/ClassNames';\nimport createDomElementFromHtml from '../Shared/Util/createDomElementFromHtml';\nimport State                    from '../State/State';\n\nimport Dom      from './Dom';\nimport domDiff  from './domDiff';\nimport domPatch from './domPatch';\n\nclass Renderer {\n    public classNames: ClassNames;\n    public dom: Dom;\n\n    constructor(classNames: ClassNames) {\n        this.dom = new Dom();\n        this.classNames = classNames;\n    }\n\n    public render(state: State, selectElement: HTMLSelectElement): Dom {\n        const html = root(state, this.classNames);\n        const rootElement = createDomElementFromHtml(html) as HTMLDivElement;\n\n        this.dom = new Dom();\n        this.dom.root = rootElement;\n\n        this.dom.option.length = this.dom.group.length = 0;\n\n        Renderer.queryDomRefs(this.dom);\n\n        this.injectSelect(selectElement);\n\n        return this.dom;\n    }\n\n    public update(state: State, key?: keyof State): void {\n        const nextHtml = root(state, this.classNames);\n        const nextRoot = createDomElementFromHtml(nextHtml) as HTMLDivElement;\n        const diffCommand = domDiff(this.dom.root, nextRoot);\n\n        domPatch(this.dom.root, diffCommand);\n\n        if (key === 'selectedIndex') {\n            this.syncSelectWithValue(state.value);\n        }\n    }\n\n    public destroy(): void {\n        this.dom.select.classList.remove(this.classNames.select);\n\n        try {\n            this.dom.root.parentElement.replaceChild(this.dom.select, this.dom.root);\n        } catch (err) { /**/ }\n    }\n\n    private injectSelect(selectElement: HTMLSelectElement): void {\n        const parent = selectElement.parentElement;\n        const tempSelect = this.dom.select;\n\n        if (!parent) throw new Error('[EasyDropDown] The provided `<select>` element must exist within a document');\n\n        parent.replaceChild(this.dom.root, selectElement);\n\n        tempSelect.parentElement.replaceChild(selectElement, tempSelect);\n        selectElement.className = this.classNames.select;\n        selectElement.setAttribute('aria-hidden', 'true');\n\n        this.dom.select = selectElement;\n    }\n\n    private syncSelectWithValue(value: string): void {\n        if (this.dom.select.value === value) return;\n\n        const event = new CustomEvent('change', {\n            bubbles: true\n        });\n\n        this.dom.select.value = value;\n\n        this.dom.select.dispatchEvent(event);\n    }\n\n    public static queryDomRefs(dom: Dom, keys: string[] = Object.keys(dom)): Dom {\n        return keys\n            .reduce((localDom: Dom, ref: string) => {\n                const selector = `[data-ref~=\"${ref}\"]`;\n                const elements = localDom.root.querySelectorAll(selector);\n\n                if (elements.length < 1 || ref === 'root') return localDom;\n\n                const element = elements[0];\n                const value = localDom[ref];\n\n                if (value === null) {\n                    localDom[ref] = element;\n                } else if (Array.isArray(value)) {\n                    Array.prototype.push.apply(value, elements);\n                }\n\n                return localDom;\n            }, dom);\n    }\n}\n\nexport default Renderer;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport State            from '../State/State';\n\nimport body from './body';\nimport head from './head';\n\nconst root = (state: State, classNames: ClassNames) => {\n    const className = composeClassName([\n        classNames.root,\n        [state.isDisabled, classNames.rootDisabled],\n        [state.isInvalid, classNames.rootInvalid],\n        [state.isOpen, classNames.rootOpen],\n        [state.isFocused, classNames.rootFocused],\n        [state.hasValue, classNames.rootHasValue],\n        [state.isOpenAbove, classNames.rootOpenAbove],\n        [state.isOpenBelow, classNames.rootOpenBelow],\n        [state.isUseNativeMode, classNames.rootNative]\n    ]);\n\n    return (`\n        <div\n            class=\"${className}\"\n            role=\"widget combobox\"\n            aria-haspopup=\"listbox\"\n            ${state.isOpen ? 'aria-expanded=\"true\"' : ''}\n            ${state.isRequired ? 'aria-required=\"true\"' : ''}\n            ${state.isDisabled ? 'aria-disabled=\"true\"' : ''}\n            ${state.isInvalid ? 'aria-invalid=\"true\"' : ''}\n        >\n            ${head(state, classNames)}\n            ${state.isUseNativeMode ? '' : body(state, classNames)}\n        </div>\n    `);\n};\n\nexport default root;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport State            from '../State/State';\n\nimport group from './group';\n\nfunction body(state: State, classNames: ClassNames): string {\n    const className = composeClassName([\n        classNames.body,\n        [state.isAtTop, classNames.bodyAtTop],\n        [state.isAtBottom, classNames.bodyAtBottom],\n        [state.isScrollable, classNames.bodyScrollable]\n    ]);\n\n    const styleAttr = state.isOpen ?\n        `style=\"max-height: ${state.maxBodyHeight}px;\"` : '';\n\n    return (`\n        <div\n            class=\"${className}\"\n            data-ref=\"body\"\n            role=\"listbox\"\n            ${state.isOpen ? '' : 'aria-hidden'}\n        >\n            <div class=\"${classNames.itemsList}\"\n                data-ref=\"itemsList\"\n                ${styleAttr}>\n                ${state.groups.map(groupState => group(groupState, state, classNames)).join('')}\n            </div>\n            <div class=${classNames.gradientTop} role=\"presentation\"></div>\n            <div class=${classNames.gradientBottom} role=\"presentation\"></div>\n        </div>\n    `);\n}\n\nexport default body;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport Group            from '../State/Group';\nimport State            from '../State/State';\n\nimport option from './option';\n\nconst group = (groupState: Group, state: State, classNames: ClassNames) => {\n    const className = composeClassName([\n        classNames.group,\n        [groupState.isDisabled, classNames.groupDisabled],\n        [groupState.hasLabel, classNames.groupHasLabel]\n    ]);\n\n    return (`\n        <div class=\"${className}\" data-ref=\"group\" role=\"group\">\n            ${groupState.hasLabel ?\n                `<div class=\"${classNames.groupLabel}\" data-ref=\"item\">${groupState.label}</div>` : ''\n            }\n            ${groupState.options.map(optionState => option(optionState, state, classNames)).join('')}\n        </div>\n    `);\n};\n\nexport default group;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport Option           from '../State/Option';\nimport State            from '../State/State';\n\nfunction option(optionState: Option, state: State, classNames: ClassNames): string {\n    const isSelected = state.selectedOption === optionState;\n\n    const className = composeClassName([\n        classNames.option,\n        [isSelected, classNames.optionSelected],\n        [optionState === state.focusedOption, classNames.optionFocused],\n        [optionState.isDisabled, classNames.optionDisabled]\n    ]);\n\n    return (`\n        <div\n            class=\"${className}\"\n            data-ref=\"option item\"\n            role=\"option\"\n            title=\"${optionState.label}\"\n            ${isSelected ? 'aria-selected=\"true\"' : ''}\n            ${optionState.isDisabled ? 'aria-disabled=\"true\"' : ''}\n            >\n                ${optionState.label}\n        </div>\n    `);\n}\n\nexport default option;","import ClassNames from '../Config/ClassNames';\nimport State      from '../State/State';\n\nimport arrow from './arrow';\nimport value from './value';\n\nconst head = (state: State, classNames: ClassNames) => (`\n    <div class=\"${classNames.head}\" data-ref=\"head\">\n        ${value(state, classNames)}\n        ${arrow(state, classNames)}\n        <select class=\"${classNames.select}\" data-ref=\"select\"></select>\n    </div>\n`);\n\nexport default head;","import ClassNames from '../Config/ClassNames';\n\nconst arrow = (_, classNames: ClassNames) => `<div class=\"${classNames.arrow}\" role=\"presentation\"></div>`;\n\nexport default arrow;","import ClassNames from '../Config/ClassNames';\nimport State      from '../State/State';\n\nconst value = (state: State, classNames: ClassNames) => {\n    return (`\n        <div\n            class=\"${classNames.value}\"\n            data-ref=\"value\"\n            ${state.isPlaceholderShown ? `aria-placeholder=\"${state.humanReadableValue}\"` : ''}\n        >\n            ${state.humanReadableValue}\n        </div>\n    `);\n};\n\nexport default value;","function createDomElementFromHtml(html: string): Element {\n    const temp = document.createElement('div');\n\n    temp.innerHTML = html;\n\n    return temp.firstElementChild;\n}\n\nexport default createDomElementFromHtml;","class Dom {\n    public select:    HTMLSelectElement = null;\n    public root:      HTMLDivElement    = null;\n    public head:      HTMLDivElement    = null;\n    public value:     HTMLDivElement    = null;\n    public body:      HTMLDivElement    = null;\n    public arrow:     HTMLDivElement    = null;\n    public itemsList: HTMLDivElement    = null;\n    public item:      HTMLDivElement[]  = [];\n    public group:     HTMLDivElement[]  = [];\n    public option:    HTMLDivElement[]  = [];\n\n    public sumItemsHeight(max: number = Infinity): number {\n        let totalHeight = 0;\n\n        for (let i = 0, item; (item = this.item[i]); i++) {\n            if (i === max) break;\n\n            totalHeight += item.offsetHeight;\n        }\n\n        return totalHeight;\n    }\n}\n\nexport default Dom;","import merge from 'helpful-merge';\n\nimport AttributeChangeType  from './Constants/AttributeChangeType';\nimport DomChangeType        from './Constants/DomChangeType';\nimport IAttributeChange     from './Interfaces/IAttributeChange';\nimport IPatchCommand        from './Interfaces/IPatchCommand';\nimport PatchCommand         from './PatchCommand';\n\nfunction domDiff(prev: Node, next: Node): PatchCommand {\n    let totalChildNodes = -1;\n\n    const command = new PatchCommand();\n\n    if (prev instanceof HTMLSelectElement) {\n        command.type = DomChangeType.NONE;\n\n        return command;\n    }\n\n    if (prev instanceof Text && next instanceof Text) {\n        if (prev.textContent === next.textContent) {\n            command.type = DomChangeType.NONE;\n        } else {\n            command.type = DomChangeType.INNER;\n            command.newTextContent = next.textContent;\n        }\n    } else if (prev instanceof HTMLElement && next instanceof HTMLElement) {\n        if (prev.tagName !== next.tagName) {\n            command.type = DomChangeType.REPLACE;\n            command.newNode = next;\n        } else if (prev.outerHTML === next.outerHTML) {\n            command.type = DomChangeType.NONE;\n        } else if (prev.innerHTML === next.innerHTML) {\n            merge(command, diffAttributeChanges(prev, next));\n        } else {\n            merge(command, diffAttributeChanges(prev, next));\n\n            if (command.attributeChanges.length > 0) {\n                command.type = DomChangeType.FULL;\n            } else {\n                command.type = DomChangeType.INNER;\n            }\n\n            if ((totalChildNodes = prev.childNodes.length) > 0 && totalChildNodes === next.childNodes.length) {\n                for (let i = 0, childNode; (childNode = prev.childNodes[i]); i++) {\n                    command.childCommands.push(domDiff(childNode, next.childNodes[i]));\n                }\n            } else {\n                command.newInnerHtml = next.innerHTML;\n            }\n        }\n    } else {\n        command.type = DomChangeType.REPLACE;\n        command.newNode = next;\n    }\n\n    return command;\n}\n\nfunction diffAttributeChanges(prev: HTMLElement, next: HTMLElement): IPatchCommand {\n    const totalAttributes = Math.max(prev.attributes.length, next.attributes.length);\n    const attributesMap   = {};\n    const undef           = void(0);\n    const attributeChanges: IAttributeChange[] = [];\n\n    for (let i = 0; i < totalAttributes; i++) {\n        const attr1 = prev.attributes[i];\n        const attr2 = next.attributes[i];\n\n        if (attr1 && attributesMap[attr1.name] === undef) {\n            attributesMap[attr1.name] = [];\n        }\n\n        if (attr2 && attributesMap[attr2.name] === undef) {\n            attributesMap[attr2.name] = [];\n        }\n\n        if (attr1) attributesMap[attr1.name][0] = attr1.value;\n        if (attr2) attributesMap[attr2.name][1] = attr2.value;\n    }\n\n    const keys = Object.keys(attributesMap);\n\n    if (keys.length > 1) {\n        keys.sort();\n    }\n\n    for (let i = 0, key; (key = keys[i]); i++) {\n        const attr = attributesMap[key];\n\n        const change: IAttributeChange = {\n            type: null,\n            name: key,\n            value: null\n        };\n\n        if (attr[0] === attr[1]) continue;\n\n        if (attr[0] === undef) {\n            change.type = AttributeChangeType.ADD;\n            change.value = attr[1];\n        } else if (attr[1] === undef) {\n            change.type = AttributeChangeType.REMOVE,\n            change.value = '';\n        } else {\n            change.type = AttributeChangeType.EDIT,\n            change.value = attr[1];\n        }\n\n        attributeChanges.push(change);\n    }\n\n    return {\n        type: DomChangeType.OUTER,\n        attributeChanges\n    };\n}\n\nexport default domDiff;","import DomChangeType    from './Constants/DomChangeType';\nimport IAttributeChange from './Interfaces/IAttributeChange';\n\nclass PatchCommand {\n    public type:             DomChangeType;\n    public newNode:          Node               = null;\n    public newInnerHtml:     string             = '';\n    public newTextContent:   string             = '';\n    public attributeChanges: IAttributeChange[] = [];\n    public childCommands:    PatchCommand[]      = [];\n    public index:            number             = null;\n}\n\nexport default PatchCommand;","import AttributeChangeType from './Constants/AttributeChangeType';\nimport DomChangeType       from './Constants/DomChangeType';\nimport IAttributeChange    from './Interfaces/IAttributeChange';\nimport PatchCommand        from './PatchCommand';\n\nfunction domPatch(node: Node, command: PatchCommand): Node {\n    switch (command.type) {\n        case DomChangeType.NONE:\n            return node;\n        case DomChangeType.REPLACE:\n            node.parentElement.replaceChild(command.newNode, node);\n\n            return command.newNode;\n        case DomChangeType.INNER:\n            if (node instanceof Text) {\n                node.textContent = command.newTextContent;\n            } else if (command.childCommands.length > 0) {\n                command.childCommands.forEach((childCommand, i) => domPatch(node.childNodes[i], childCommand));\n            } else {\n                (node as HTMLElement).innerHTML = command.newInnerHtml;\n            }\n\n            return node;\n        case DomChangeType.OUTER:\n            patchAttributes(node as HTMLElement, command.attributeChanges);\n\n            return node;\n        case DomChangeType.FULL:\n            if (command.childCommands.length > 0) {\n                command.childCommands.forEach((childCommand, i) => domPatch(node.childNodes[i], childCommand));\n            } else {\n                (node as HTMLElement).innerHTML = command.newInnerHtml;\n            }\n\n            patchAttributes(node as HTMLElement, command.attributeChanges);\n\n            return node;\n    }\n}\n\nfunction patchAttributes(el: HTMLElement, attributeChanges: IAttributeChange[]): void {\n    const raf = window.requestAnimationFrame;\n\n    attributeChanges.forEach(change => {\n        if (raf && ['class', 'style'].indexOf(change.name) > -1) {\n            raf(() => patchAttribute(el, change));\n        } else {\n            patchAttribute(el, change);\n        }\n    });\n}\n\nfunction patchAttribute(el: HTMLElement, change: IAttributeChange): void {\n    switch (change.type) {\n        case AttributeChangeType.ADD:\n        case AttributeChangeType.EDIT:\n            el.setAttribute(change.name, change.value);\n\n            break;\n        case AttributeChangeType.REMOVE:\n            el.removeAttribute(change.name);\n\n            break;\n    }\n}\n\nexport default domPatch;","import Config from '../../Config/Config';\nimport IActions from '../../State/Interfaces/IActions';\nimport State    from '../../State/State';\n\nconst POLL_INTERVAL_DURATION = 100;\n\nfunction pollForSelectChange(\n    selectElement: HTMLSelectElement,\n    state: State,\n    actions: IActions,\n    config: Config\n): number {\n    let lastValue: string = selectElement.value;\n\n    const pollIntervalId = window.setInterval(() => {\n        if (selectElement.value !== lastValue) {\n            const selectedIndex = state.getOptionIndexFromValue(selectElement.value);\n\n            actions.selectOption(selectedIndex, config.behavior.closeOnSelect);\n            actions.focusOption(selectedIndex, true);\n        }\n\n        lastValue = selectElement.value;\n    }, POLL_INTERVAL_DURATION);\n\n    return pollIntervalId;\n}\n\nexport default pollForSelectChange;","import State from '../../State/State';\n\nconst POLL_INTERVAL_DURATION = 300;\n\nfunction pollForSelectMutation(selectElement: HTMLSelectElement, state: State, handleMutation: () => void): number {\n    let lastOuterHtml: string = selectElement.outerHTML;\n\n    const pollIntervalId = window.setInterval(() => {\n        const {outerHTML} = selectElement;\n\n        if (outerHTML !== lastOuterHtml && !state.isKeying) {\n            handleMutation();\n        }\n\n        lastOuterHtml = outerHTML;\n    }, POLL_INTERVAL_DURATION);\n\n    return pollIntervalId;\n}\n\nexport default pollForSelectMutation;","import Easydropdown from '../../Easydropdown/Easydropdown';\n\nfunction closeOthers(thisInstance: Easydropdown, cache: Easydropdown[]): void {\n    for (const instance of cache) {\n        if (instance !== thisInstance) instance.actions.close();\n    }\n}\n\nexport default closeOthers;","import Timers from '../../Easydropdown/Timers';\nimport Dom    from '../../Renderer/Dom';\nimport State  from '../../State/State';\n\nfunction getScrollTop(\n    currentScrollTop: number,\n    optionOffsetTop: number,\n    optionHeight: number,\n    bodyHeight: number,\n    scrollOffset: number\n): number {\n    const max = currentScrollTop + bodyHeight;\n\n    let remainder: number;\n\n    if (optionOffsetTop < currentScrollTop) {\n        return optionOffsetTop - scrollOffset;\n    } else if ((remainder = (optionOffsetTop + optionHeight) - max) > 0) {\n        return currentScrollTop + remainder + scrollOffset;\n    }\n\n    return currentScrollTop;\n}\n\nfunction scrollToView(dom: Dom, timers: Timers, state: State, scrollToMiddle: boolean = false): void {\n    const index = Math.max(0, state.focusedIndex > -1 ? state.focusedIndex : state.selectedIndex);\n    const option = dom.option[index];\n\n    if (!option) return;\n\n    const offset = scrollToMiddle ? (state.maxBodyHeight / 2) - (option.offsetHeight / 2) : 0;\n\n    const scrollTop = getScrollTop(\n        dom.itemsList.scrollTop,\n        option.offsetTop,\n        option.offsetHeight,\n        state.maxBodyHeight,\n        offset\n    );\n\n    if (scrollTop === dom.itemsList.scrollTop) return;\n\n    dom.itemsList.scrollTop = scrollTop;\n}\n\nexport {\n    getScrollTop,\n    scrollToView as default\n};","import merge from 'helpful-merge';\n\nimport IActions            from './Interfaces/IActions';\nimport IOnAction           from './Interfaces/IOnAction';\nimport IPropertyDescriptor from './Interfaces/IPropertyDescriptor';\nimport resolveActions      from './resolveActions';\nimport State               from './State';\n\nclass StateManager {\n    public static proxyActions(state: State, injectedActions: any, onAction: IOnAction): IActions {\n        const stateProxy = StateManager.createStateProxy(state, onAction);\n        const actions = resolveActions(stateProxy);\n\n        merge(actions, injectedActions);\n\n        return actions;\n    }\n\n    private static createStateProxy(state: State, onAction: IOnAction): State {\n        return Object.seal(\n            StateManager\n                .getPropertyDescriptorsFromValue(state, onAction)\n                .reduce((proxy, {key, get, set}) => Object.defineProperty(\n                    proxy,\n                    key,\n                    {\n                        enumerable: true,\n                        get,\n                        set\n                    }\n                ), {})\n        );\n    }\n\n    private static getPropertyDescriptorsFromValue(state: State, onAction: IOnAction): IPropertyDescriptor[] {\n        const prototype = Object.getPrototypeOf(state);\n        const allKeys = Object.keys(state).concat(Object.keys(prototype));\n\n        return allKeys\n            .reduce((localDescriptors, key) => {\n                const propertyDescriptor =\n                    Object.getOwnPropertyDescriptor(state, key) ||\n                    Object.getOwnPropertyDescriptor(prototype, key);\n\n                const isAccessorProperty = typeof propertyDescriptor.get === 'function';\n\n                localDescriptors.push({\n                    get: StateManager.readPropertyValue.bind(null, state, key),\n                    set: isAccessorProperty ?\n                        void 0 : StateManager.updatePropertyValue.bind(null, state, key, onAction),\n                    key\n                });\n\n                return localDescriptors;\n            }, []);\n    }\n\n    private static readPropertyValue(state: State, key: string): any {\n        return state[key];\n    }\n\n    private static updatePropertyValue(state: State, key: string, onAction: IOnAction, value: any): void {\n        if (state[key] === value) return;\n\n        state[key] = value;\n\n        onAction(state, key);\n    }\n}\n\nexport default StateManager;","import CollisionType  from '../Shared/Util/Constants/CollisionType';\n\nimport BodyStatus   from './Constants/BodyStatus';\nimport ScrollStatus from './Constants/ScrollStatus';\nimport IActions     from './Interfaces/IActions';\nimport State        from './State';\n\nconst resolveActions = (state: State): IActions => ({\n    focus(): void {\n        state.isFocused = true;\n    },\n\n    blur(): void {\n        state.isFocused = false;\n    },\n\n    invalidate(): void {\n        state.isInvalid = true;\n    },\n\n    validate(): void {\n        state.isInvalid = false;\n    },\n\n    topOut(): void {\n        state.scrollStatus = ScrollStatus.AT_TOP;\n    },\n\n    bottomOut(): void {\n        state.scrollStatus = ScrollStatus.AT_BOTTOM;\n    },\n\n    scroll(): void {\n        state.scrollStatus = ScrollStatus.SCROLLED;\n    },\n\n    makeScrollable(): void {\n        state.isScrollable = true;\n    },\n\n    makeUnscrollable(): void {\n        state.isScrollable = false;\n    },\n\n    open(\n        this: IActions,\n        maxBodyHeight: number,\n        collisionType: CollisionType,\n        isScrollable: boolean\n    ): void {\n        if (state.isDisabled) return;\n\n        this.closeOthers();\n\n        switch (collisionType) {\n            case CollisionType.NONE:\n            case CollisionType.TOP:\n                state.bodyStatus = BodyStatus.OPEN_BELOW;\n\n                break;\n            case CollisionType.BOTTOM:\n                state.bodyStatus = BodyStatus.OPEN_ABOVE;\n\n                break;\n        }\n\n        state.isScrollable = isScrollable;\n        state.maxBodyHeight = maxBodyHeight;\n\n        this.scrollToView(state, true);\n    },\n\n    close(): void {\n        state.bodyStatus = BodyStatus.CLOSED;\n        state.focusedIndex = -1;\n\n        this.blur();\n    },\n\n    startClickSelecting(): void {\n        state.isClickSelecting = true;\n    },\n\n    selectOption(this: IActions, index: number, close = true): void {\n        const optionAtIndex = state.getOptionFromIndex(index);\n\n        state.isClickSelecting = false;\n\n        if (index > -1 && (!optionAtIndex || optionAtIndex.isDisabled)) return;\n\n        state.selectedIndex = index;\n\n        if (state.isInvalid && state.hasValue) {\n            this.validate();\n        }\n\n        if (state.isSearching) {\n            this.scrollToView(state);\n        } else if (close) {\n            this.close();\n        }\n    },\n\n    focusOption(this: IActions, index: number, shouldScrollToView: boolean = false): void {\n        const scrollToMiddle = Math.abs(index - state.focusedIndex) > 1;\n\n        state.focusedIndex = index;\n\n        if (shouldScrollToView) {\n            this.scrollToView(state, scrollToMiddle);\n        }\n    },\n\n    search(): void {\n        state.isSearching = true;\n    },\n\n    resetSearch(): void {\n        state.isSearching = false;\n    },\n\n    keying(): void {\n        state.isKeying = true;\n    },\n\n    resetKeying(): void {\n        state.isKeying = false;\n    },\n\n    useNative(): void {\n        state.isUseNativeMode = true;\n    }\n});\n\nexport default resolveActions;","import merge from 'helpful-merge';\n\nimport Config from '../Config/Config';\nimport getIsMobilePlatform from '../Shared/Util/getIsMobilePlatform';\n\nimport Group  from './Group';\nimport Option from './Option';\nimport State  from './State';\n\nclass StateMapper {\n    public static mapFromSelect(selectElement: HTMLSelectElement, config: Config): State {\n        const state = new State(null, config);\n\n        let isWithinGroup = false;\n\n        state.name = selectElement.name;\n        state.isDisabled = selectElement.disabled;\n        state.isRequired = selectElement.required;\n\n        state.isUseNativeMode = (\n            config.behavior.useNativeUiOnMobile &&\n            getIsMobilePlatform(window.navigator.userAgent)\n        );\n\n        for (let i = 0, child: Element; (child = selectElement.children[i]); i++) {\n            if (i === 0 && child.getAttribute('data-placeholder') !== null) {\n                state.placeholder = child.textContent;\n                (child as HTMLOptionElement).value = '';\n\n                continue;\n            }\n\n            if (child instanceof HTMLOptionElement) {\n                if (isWithinGroup === false) {\n                    state.groups.push(StateMapper.mapGroup());\n\n                    isWithinGroup = true;\n                }\n\n                state.lastGroup.options.push(StateMapper.mapOption(child));\n\n                if (child.selected) state.selectedIndex = state.totalOptions - 1;\n            } else if (child instanceof HTMLOptGroupElement) {\n                isWithinGroup = true;\n\n                state.groups.push(StateMapper.mapGroup(child));\n\n                for (let j = 0, groupChild: Element; (groupChild = child.children[j]); j++) {\n                    state.lastGroup.options.push(\n                        StateMapper.mapOption(\n                            groupChild as HTMLOptionElement,\n                            child as HTMLOptGroupElement\n                        )\n                    );\n\n                    if ((groupChild as HTMLOptionElement).selected) state.selectedIndex = state.totalOptions - 1;\n                }\n\n                isWithinGroup = false;\n            } else {\n                throw new TypeError(\n                    `[EasyDropDown] Invalid child tag \"${child.tagName}\" found in provided \\`<select>\\` element`\n                );\n            }\n        }\n\n        return Object.seal(state);\n    }\n\n    private static mapGroup(group: HTMLOptGroupElement = null): Group {\n        return merge(new Group(), {\n            label: group ? group.label : '',\n            isDisabled: group ? group.disabled : false\n        });\n    }\n\n    private static mapOption(option: HTMLOptionElement, group: HTMLOptGroupElement = null): Option {\n        if (!(option instanceof HTMLOptionElement)) throw new TypeError('[EasyDropDown] Invalid markup structure');\n\n        const isParentGroupDisabled = group !== null && group.disabled;\n\n        return merge(new Option(), {\n            label: option.textContent,\n            value: option.value,\n            isDisabled: option.disabled || isParentGroupDisabled\n        });\n    }\n}\n\nexport default StateMapper;","import merge from 'helpful-merge';\n\nimport Config from '../Config/Config';\n\nimport BodyStatus   from './Constants/BodyStatus';\nimport ScrollStatus from './Constants/ScrollStatus';\nimport Group        from  './Group';\nimport Option       from './Option';\n\nclass State {\n    public groups:                  Group[]      = [];\n    public focusedIndex:            number       = -1;\n    public selectedIndex:           number       = -1;\n    public maxVisibleItemsOverride: number       = -1;\n    public maxBodyHeight:           number       = -1;\n    public name:                    string       = '';\n    public placeholder:             string       = '';\n    public scrollStatus:            ScrollStatus = ScrollStatus.AT_TOP;\n    public bodyStatus:              BodyStatus   = BodyStatus.CLOSED;\n    public isDisabled:              boolean      = false;\n    public isRequired:              boolean      = false;\n    public isInvalid:               boolean      = false;\n    public isFocused:               boolean      = false;\n    public isUseNativeMode:         boolean      = false;\n    public isScrollable:            boolean      = false;\n    public isClickSelecting:        boolean      = false;\n    public isSearching:             boolean      = false;\n    public isKeying:                boolean      = false;\n\n    private config: Config;\n\n    constructor(stateRaw: any = null, config = new Config()) {\n        this.config = config;\n\n        if (!stateRaw) return;\n\n        merge(this, stateRaw);\n\n        this.groups = this.groups.map((groupRaw) => {\n            const group = merge(new Group(), groupRaw);\n\n            group.options = group.options.map(optionRaw => merge(new Option(), optionRaw));\n\n            return group;\n        });\n    }\n\n    public get totalGroups(): number {\n        return this.groups.length;\n    }\n\n    public get lastGroup(): Group {\n        return this.groups[this.groups.length - 1];\n    }\n\n    public get totalOptions(): number {\n        return this.groups.reduce((total: number, group: Group) => total + group.totalOptions, 0);\n    }\n\n    public get selectedOption(): Option {\n        return this.getOptionFromIndex(this.selectedIndex);\n    }\n\n    public get focusedOption(): Option {\n        return this.getOptionFromIndex(this.focusedIndex);\n    }\n\n    public get value(): string {\n        return this.selectedOption ? this.selectedOption.value : '';\n    }\n\n    public get humanReadableValue(): string {\n        if (\n            (!this.hasValue && this.hasPlaceholder) ||\n            (\n                this.config.behavior.showPlaceholderWhenOpen &&\n                this.hasPlaceholder &&\n                this.isOpen\n            )\n        ) {\n            return this.placeholder;\n        }\n\n        return this.label;\n    }\n\n    public get label(): string {\n        return this.selectedOption ? this.selectedOption.label : '';\n    }\n\n    public get hasPlaceholder(): boolean {\n        return this.placeholder !== '';\n    }\n\n    public get isPlaceholderShown(): boolean {\n        return this.hasPlaceholder && !this.hasValue;\n    }\n\n    public get hasValue(): boolean {\n        return this.value !== '';\n    }\n\n    public get isGrouped(): boolean {\n        return Boolean(this.groups.find(group => group.hasLabel));\n    }\n\n    public get isOpen(): boolean {\n        return this.bodyStatus !== BodyStatus.CLOSED;\n    }\n\n    public get isClosed(): boolean {\n        return this.bodyStatus === BodyStatus.CLOSED;\n    }\n\n    public get isOpenAbove(): boolean {\n        return this.bodyStatus === BodyStatus.OPEN_ABOVE;\n    }\n\n    public get isOpenBelow(): boolean {\n        return this.bodyStatus === BodyStatus.OPEN_BELOW;\n    }\n\n    public get isAtTop(): boolean {\n        return this.scrollStatus === ScrollStatus.AT_TOP;\n    }\n\n    public get isAtBottom(): boolean {\n        return this.scrollStatus === ScrollStatus.AT_BOTTOM;\n    }\n\n    public getOptionFromIndex(index: number): Option {\n        let groupStartIndex = 0;\n\n        for (const group of this.groups) {\n            if (index < 0 ) break;\n\n            const groupEndIndex = Math.max(0, groupStartIndex + group.totalOptions - 1);\n\n            if (index <= groupEndIndex) {\n                const option = group.options[index - groupStartIndex];\n\n                return option;\n            }\n\n            groupStartIndex += group.totalOptions;\n        }\n\n        return null;\n    }\n\n    public getOptionIndexFromValue(value: string): number {\n        let index: number = -1;\n\n        for (const group of this.groups) {\n            for (const option of group.options) {\n                index++;\n\n                if (option.value === value) {\n                    return index;\n                }\n            }\n        }\n\n        return -1;\n    }\n}\n\nexport default State;","class Timers {\n    public pollChangeIntervalId: number;\n    public pollMutationIntervalId: number;\n    public searchTimeoutId: number;\n    public keyingTimeoutId: number;\n\n    public clear(): void {\n        Object.keys(this).forEach(key => window.clearInterval(this[key]));\n    }\n}\n\nexport default Timers;","import Easydropdown from './Easydropdown';\n\nclass EasydropdownFacade {\n    /**\n     * Programmatically opens the dropdown, closing any\n     * other open instances.\n     */\n\n    public open: () => void;\n\n    /**\n     * Programmatically closes the dropdown.\n     */\n\n    public close: () => void;\n\n    /**\n     * Refreshes the instance and updates the DOM in\n     * response to a change in the underlying `<select>`\n     * element (for example, adding or removing an option).\n     */\n\n    public refresh: () => void;\n\n    /**\n     * Validates the instance by checking\n     * the current state whether dropown is required\n     * and a selection was made\n     *\n     * @returns boolean whether the dropdown is valid\n     */\n\n    public validate: () => boolean;\n\n    /**\n     * Destroys the instance by removing all EasyDropDown-generated\n     * elements from the DOM, and unbinding all event handlers.\n     * The underlying select is returned to the root position.\n     */\n\n    public destroy: () => void;\n\n    /**\n     * An accessor property allowing writing to and reading\n     * from the dropdown's value.\n     */\n\n    public value: string;\n\n    constructor(implementation: Easydropdown) {\n        this.open = implementation.open.bind(implementation);\n        this.close = implementation.close.bind(implementation);\n        this.refresh = implementation.refresh.bind(implementation);\n        this.destroy = implementation.destroy.bind(implementation);\n        this.validate = implementation.validate.bind(implementation);\n\n        Object.defineProperties(this, {\n            value: {\n                get: () => implementation.value,\n                set: (nextValue: string) => implementation.value = nextValue\n            }\n        });\n    }\n}\n\nexport default EasydropdownFacade;"],"sourceRoot":""}